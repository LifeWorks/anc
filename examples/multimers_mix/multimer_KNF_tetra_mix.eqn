# Facile model created by Allosteric Network Compiler (ANC)
# ANC version 1.01 released 2011/08/26
# Sat Aug 27 18:56:35 EDT 2011



# PARAMETERS
# ----------
parameter K_TR = 0.01
parameter Gamma = 10
parameter k_TR = 1
parameter k_RT = k_TR/K_TR
parameter Phi_TR = 0.2
parameter K1_T = 0.1
parameter kf1_T = 1
parameter kb1_T = kf1_T/K1_T
parameter K1_R = 10
parameter kf1_R = 1
parameter kb1_R = kf1_R/K1_R
parameter K2_T = 0.1
parameter kf2_T = 1
parameter kb2_T = kf2_T/K2_T
parameter K2_R = 10
parameter kf2_R = 1
parameter kb2_R = kf2_R/K2_R
parameter L1_clamp = 0
parameter L2_clamp = 0


# REACTION CLASS: BindingReaction
# -------------------------------
HRRRR                + L1                   <-> HRRRR_L1i00                     ; fb00=kf1_R; bb00=kb1_R         # (R!36) Kd = kb1_R/kf1_R
HRRRR                + L1                    -> HRRRR_L1i00                     ; fb00=kf1_R                     # (R!38) Kd = UNDEFINED
HRRRR                + L1                    -> HRRRR_L1i00                     ; fb00=kf1_R                     # (R!37) Kd = UNDEFINED
HRRRR                + L1                    -> HRRRR_L1i00                     ; fb00=kf1_R                     # (R!39) Kd = UNDEFINED
HRRRR                + L2                   <-> HRRRR_L2i00                     ; fb01=kf2_R; bb01=kb2_R         # (R!52) Kd = kb2_R/kf2_R
HRRRR                + L2                    -> HRRRR_L2i00                     ; fb01=kf2_R                     # (R!54) Kd = UNDEFINED
HRRRR                + L2                    -> HRRRR_L2i00                     ; fb01=kf2_R                     # (R!53) Kd = UNDEFINED
HRRRR                + L2                    -> HRRRR_L2i00                     ; fb01=kf2_R                     # (R!55) Kd = UNDEFINED
HRRRT                + L1                   <-> HRRRT_L1i00                     ; fb00=kf1_R; bb00=kb1_R         # (R!32) Kd = kb1_R/kf1_R
HRRRT                + L1                    -> HRRRT_L1i00                     ; fb00=kf1_R                     # (R!34) Kd = UNDEFINED
HRRRT                + L1                    -> HRRRT_L1i00                     ; fb00=kf1_R                     # (R!33) Kd = UNDEFINED
HRRRT                + L1                   <-> HTRRR_L1i00                     ; fb02=kf1_T; bb02=kb1_T         # (R!35) Kd = kb1_T/kf1_T
HRRRT                + L2                   <-> HRRRT_L2i00                     ; fb01=kf2_R; bb01=kb2_R         # (R!48) Kd = kb2_R/kf2_R
HRRRT                + L2                    -> HRRRT_L2i00                     ; fb01=kf2_R                     # (R!49) Kd = UNDEFINED
HRRRT                + L2                    -> HRRRT_L2i00                     ; fb01=kf2_R                     # (R!50) Kd = UNDEFINED
HRRRT                + L2                   <-> HTRRR_L2i00                     ; fb03=kf2_T; bb03=kb2_T         # (R!51) Kd = kb2_T/kf2_T
HRRTT                + L1                   <-> HRRTT_L1i00                     ; fb00=kf1_R; bb00=kb1_R         # (R!28) Kd = kb1_R/kf1_R
HRRTT                + L1                    -> HRRTT_L1i00                     ; fb00=kf1_R                     # (R!29) Kd = UNDEFINED
HRRTT                + L1                   <-> HTRRT_L1i00                     ; fb02=kf1_T; bb02=kb1_T         # (R!30) Kd = kb1_T/kf1_T
HRRTT                + L1                    -> HTRRT_L1i00                     ; fb02=kf1_T                     # (R!31) Kd = UNDEFINED
HRRTT                + L2                   <-> HRRTT_L2i00                     ; fb01=kf2_R; bb01=kb2_R         # (R!44) Kd = kb2_R/kf2_R
HRRTT                + L2                    -> HRRTT_L2i00                     ; fb01=kf2_R                     # (R!45) Kd = UNDEFINED
HRRTT                + L2                   <-> HTRRT_L2i00                     ; fb03=kf2_T; bb03=kb2_T         # (R!46) Kd = kb2_T/kf2_T
HRRTT                + L2                    -> HTRRT_L2i00                     ; fb03=kf2_T                     # (R!47) Kd = UNDEFINED
HRTTT                + L1                   <-> HRTTT_L1i00                     ; fb00=kf1_R; bb00=kb1_R         # (R!24) Kd = kb1_R/kf1_R
HRTTT                + L1                   <-> HTRTT_L1i00                     ; fb02=kf1_T; bb02=kb1_T         # (R!25) Kd = kb1_T/kf1_T
HRTTT                + L1                    -> HTRTT_L1i00                     ; fb02=kf1_T                     # (R!26) Kd = UNDEFINED
HRTTT                + L1                    -> HTRTT_L1i00                     ; fb02=kf1_T                     # (R!27) Kd = UNDEFINED
HRTTT                + L2                   <-> HRTTT_L2i00                     ; fb01=kf2_R; bb01=kb2_R         # (R!40) Kd = kb2_R/kf2_R
HRTTT                + L2                   <-> HTRTT_L2i00                     ; fb03=kf2_T; bb03=kb2_T         # (R!41) Kd = kb2_T/kf2_T
HRTTT                + L2                    -> HTRTT_L2i00                     ; fb03=kf2_T                     # (R!42) Kd = UNDEFINED
HRTTT                + L2                    -> HTRTT_L2i00                     ; fb03=kf2_T                     # (R!43) Kd = UNDEFINED
HTTTT                + L1                   <-> HTTTT_L1i00                     ; fb02=kf1_T; bb02=kb1_T         # (R!16) Kd = kb1_T/kf1_T
HTTTT                + L1                    -> HTTTT_L1i00                     ; fb02=kf1_T                     # (R!20) Kd = UNDEFINED
HTTTT                + L1                    -> HTTTT_L1i00                     ; fb02=kf1_T                     # (R!18) Kd = UNDEFINED
HTTTT                + L1                    -> HTTTT_L1i00                     ; fb02=kf1_T                     # (R!22) Kd = UNDEFINED
HTTTT                + L2                   <-> HTTTT_L2i00                     ; fb03=kf2_T; bb03=kb2_T         # (R!17) Kd = kb2_T/kf2_T
HTTTT                + L2                    -> HTTTT_L2i00                     ; fb03=kf2_T                     # (R!21) Kd = UNDEFINED
HTTTT                + L2                    -> HTTTT_L2i00                     ; fb03=kf2_T                     # (R!19) Kd = UNDEFINED
HTTTT                + L2                    -> HTTTT_L2i00                     ; fb03=kf2_T                     # (R!23) Kd = UNDEFINED
L1                   + HRRRR_L1i00          <-> HRRRR_L1_L1i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!124) Kd = kb1_R/kf1_R
L1                   + HRRRR_L1i00           -> HRRRR_L1_L1i00                  ; fb00=kf1_R                     # (R!126) Kd = UNDEFINED
L1                   + HRRRR_L1i00           -> HRRRR_L1_L1i00                  ; fb00=kf1_R                     # (R!125) Kd = UNDEFINED
L1                   + HRRRR_L1i00          <-  HRRRR_L1_L1i00                  ; bb00=kb1_R                     # (R!228) Kd = UNDEFINED
L1                   + HRRRR_L2i00          <-> HRRRR_L1_L2i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!145) Kd = kb1_R/kf1_R
L1                   + HRRRR_L2i00           -> HRRRR_L1_L2i00                  ; fb00=kf1_R                     # (R!146) Kd = UNDEFINED
L1                   + HRRRR_L2i00           -> HRRRR_L1_L2i00                  ; fb00=kf1_R                     # (R!147) Kd = UNDEFINED
L1                   + HRRRT_L1i00          <-> HRRRT_L1_L1i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!118) Kd = kb1_R/kf1_R
L1                   + HRRRT_L1i00           -> HRRRT_L1_L1i00                  ; fb00=kf1_R                     # (R!119) Kd = UNDEFINED
L1                   + HRRRT_L1i00          <-  HRRRT_L1_L1i00                  ; bb00=kb1_R                     # (R!223) Kd = UNDEFINED
L1                   + HRRRT_L1i00          <-> HRTRR_L1_L1i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!120) Kd = kb1_T/kf1_T
L1                   + HRRRT_L2i00          <-> HRRRT_L1_L2i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!139) Kd = kb1_R/kf1_R
L1                   + HRRRT_L2i00           -> HRRRT_L1_L2i00                  ; fb00=kf1_R                     # (R!140) Kd = UNDEFINED
L1                   + HRRRT_L2i00          <-> HRTRR_L1_L2i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!141) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1i00          <-> HRRTT_L1_L1i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!112) Kd = kb1_R/kf1_R
L1                   + HRRTT_L1i00          <-  HRRTT_L1_L1i00                  ; bb00=kb1_R                     # (R!213) Kd = UNDEFINED
L1                   + HRRTT_L1i00          <-> HRTRT_L1_L1i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!113) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1i00           -> HRTRT_L1_L1i00                  ; fb02=kf1_T                     # (R!114) Kd = UNDEFINED
L1                   + HRRTT_L2i00          <-> HRRTT_L1_L2i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!133) Kd = kb1_R/kf1_R
L1                   + HRRTT_L2i00          <-> HRTRT_L1_L2i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!134) Kd = kb1_T/kf1_T
L1                   + HRRTT_L2i00           -> HRTRT_L1_L2i00                  ; fb02=kf1_T                     # (R!135) Kd = UNDEFINED
L1                   + HRTTT_L1i00          <-> HRTTT_L1_L1i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!106) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1i00           -> HRTTT_L1_L1i00                  ; fb02=kf1_T                     # (R!107) Kd = UNDEFINED
L1                   + HRTTT_L1i00           -> HRTTT_L1_L1i00                  ; fb02=kf1_T                     # (R!108) Kd = UNDEFINED
L1                   + HRTTT_L2i00          <-> HRTTT_L1_L2i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!127) Kd = kb1_T/kf1_T
L1                   + HRTTT_L2i00           -> HRTTT_L1_L2i00                  ; fb02=kf1_T                     # (R!128) Kd = UNDEFINED
L1                   + HRTTT_L2i00           -> HRTTT_L1_L2i00                  ; fb02=kf1_T                     # (R!129) Kd = UNDEFINED
L1                   + HTRRR_L1i00          <-> HRTRR_L1_L1i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!121) Kd = kb1_R/kf1_R
L1                   + HTRRR_L1i00           -> HRTRR_L1_L1i00                  ; fb00=kf1_R                     # (R!122) Kd = UNDEFINED
L1                   + HTRRR_L1i00           -> HRTRR_L1_L1i00                  ; fb00=kf1_R                     # (R!123) Kd = UNDEFINED
L1                   + HTRRR_L2i00          <-> HTRRR_L1_L2i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!142) Kd = kb1_R/kf1_R
L1                   + HTRRR_L2i00           -> HTRRR_L1_L2i00                  ; fb00=kf1_R                     # (R!144) Kd = UNDEFINED
L1                   + HTRRR_L2i00           -> HTRRR_L1_L2i00                  ; fb00=kf1_R                     # (R!143) Kd = UNDEFINED
L1                   + HTRRT_L1i00          <-> HRTRT_L1_L1i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!115) Kd = kb1_R/kf1_R
L1                   + HTRRT_L1i00           -> HRTRT_L1_L1i00                  ; fb00=kf1_R                     # (R!116) Kd = UNDEFINED
L1                   + HTRRT_L1i00          <-> HTTRR_L1_L1i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!117) Kd = kb1_T/kf1_T
L1                   + HTRRT_L1i00          <-  HTTRR_L1_L1i00                  ; bb02=kb1_T                     # (R!219) Kd = UNDEFINED
L1                   + HTRRT_L2i00          <-> HTRRT_L1_L2i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!136) Kd = kb1_R/kf1_R
L1                   + HTRRT_L2i00           -> HTRRT_L1_L2i00                  ; fb00=kf1_R                     # (R!137) Kd = UNDEFINED
L1                   + HTRRT_L2i00          <-> HTTRR_L1_L2i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!138) Kd = kb1_T/kf1_T
L1                   + HTRTT_L1i00          <-> HRTTT_L1_L1i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!109) Kd = kb1_R/kf1_R
L1                   + HTRTT_L1i00          <-> HTTRT_L1_L1i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!110) Kd = kb1_T/kf1_T
L1                   + HTRTT_L1i00           -> HTTRT_L1_L1i00                  ; fb02=kf1_T                     # (R!111) Kd = UNDEFINED
L1                   + HTRTT_L1i00          <-  HTTRT_L1_L1i00                  ; bb02=kb1_T                     # (R!209) Kd = UNDEFINED
L1                   + HTRTT_L2i00          <-> HTRTT_L1_L2i00                  ; fb00=kf1_R; bb00=kb1_R         # (R!130) Kd = kb1_R/kf1_R
L1                   + HTRTT_L2i00          <-> HTTRT_L1_L2i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!131) Kd = kb1_T/kf1_T
L1                   + HTRTT_L2i00           -> HTTRT_L1_L2i00                  ; fb02=kf1_T                     # (R!132) Kd = UNDEFINED
L1                   + HTTTT_L1i00          <-> HTTTT_L1_L1i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!100) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1i00           -> HTTTT_L1_L1i00                  ; fb02=kf1_T                     # (R!102) Kd = UNDEFINED
L1                   + HTTTT_L1i00           -> HTTTT_L1_L1i00                  ; fb02=kf1_T                     # (R!101) Kd = UNDEFINED
L1                   + HTTTT_L1i00          <-  HTTTT_L1_L1i00                  ; bb02=kb1_T                     # (R!197) Kd = UNDEFINED
L1                   + HTTTT_L2i00          <-> HTTTT_L1_L2i00                  ; fb02=kf1_T; bb02=kb1_T         # (R!103) Kd = kb1_T/kf1_T
L1                   + HTTTT_L2i00           -> HTTTT_L1_L2i00                  ; fb02=kf1_T                     # (R!104) Kd = UNDEFINED
L1                   + HTTTT_L2i00           -> HTTTT_L1_L2i00                  ; fb02=kf1_T                     # (R!105) Kd = UNDEFINED
L2                   + HRRRR_L1i00          <-> HRRRR_L1_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!172) Kd = kb2_R/kf2_R
L2                   + HRRRR_L1i00           -> HRRRR_L1_L2i00                  ; fb01=kf2_R                     # (R!173) Kd = UNDEFINED
L2                   + HRRRR_L1i00           -> HRRRR_L1_L2i00                  ; fb01=kf2_R                     # (R!174) Kd = UNDEFINED
L2                   + HRRRR_L2i00          <-> HRRRR_L2_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!193) Kd = kb2_R/kf2_R
L2                   + HRRRR_L2i00           -> HRRRR_L2_L2i00                  ; fb01=kf2_R                     # (R!194) Kd = UNDEFINED
L2                   + HRRRR_L2i00           -> HRRRR_L2_L2i00                  ; fb01=kf2_R                     # (R!195) Kd = UNDEFINED
L2                   + HRRRR_L2i00          <-  HRRRR_L2_L2i00                  ; bb01=kb2_R                     # (R!282) Kd = UNDEFINED
L2                   + HRRRT_L1i00          <-> HRRRT_L1_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!166) Kd = kb2_R/kf2_R
L2                   + HRRRT_L1i00           -> HRRRT_L1_L2i00                  ; fb01=kf2_R                     # (R!167) Kd = UNDEFINED
L2                   + HRRRT_L1i00          <-> HTRRR_L1_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!168) Kd = kb2_T/kf2_T
L2                   + HRRRT_L2i00          <-> HRRRT_L2_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!187) Kd = kb2_R/kf2_R
L2                   + HRRRT_L2i00           -> HRRRT_L2_L2i00                  ; fb01=kf2_R                     # (R!188) Kd = UNDEFINED
L2                   + HRRRT_L2i00          <-  HRRRT_L2_L2i00                  ; bb01=kb2_R                     # (R!277) Kd = UNDEFINED
L2                   + HRRRT_L2i00          <-> HRTRR_L2_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!189) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1i00          <-> HRRTT_L1_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!160) Kd = kb2_R/kf2_R
L2                   + HRRTT_L1i00          <-> HTRRT_L1_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!161) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1i00           -> HTRRT_L1_L2i00                  ; fb03=kf2_T                     # (R!162) Kd = UNDEFINED
L2                   + HRRTT_L2i00          <-> HRRTT_L2_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!181) Kd = kb2_R/kf2_R
L2                   + HRRTT_L2i00          <-  HRRTT_L2_L2i00                  ; bb01=kb2_R                     # (R!267) Kd = UNDEFINED
L2                   + HRRTT_L2i00          <-> HRTRT_L2_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!182) Kd = kb2_T/kf2_T
L2                   + HRRTT_L2i00           -> HRTRT_L2_L2i00                  ; fb03=kf2_T                     # (R!183) Kd = UNDEFINED
L2                   + HRTTT_L1i00          <-> HTRTT_L1_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!154) Kd = kb2_T/kf2_T
L2                   + HRTTT_L1i00           -> HTRTT_L1_L2i00                  ; fb03=kf2_T                     # (R!156) Kd = UNDEFINED
L2                   + HRTTT_L1i00           -> HTRTT_L1_L2i00                  ; fb03=kf2_T                     # (R!155) Kd = UNDEFINED
L2                   + HRTTT_L2i00          <-> HRTTT_L2_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!175) Kd = kb2_T/kf2_T
L2                   + HRTTT_L2i00           -> HRTTT_L2_L2i00                  ; fb03=kf2_T                     # (R!176) Kd = UNDEFINED
L2                   + HRTTT_L2i00           -> HRTTT_L2_L2i00                  ; fb03=kf2_T                     # (R!177) Kd = UNDEFINED
L2                   + HTRRR_L1i00          <-> HRTRR_L1_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!169) Kd = kb2_R/kf2_R
L2                   + HTRRR_L1i00           -> HRTRR_L1_L2i00                  ; fb01=kf2_R                     # (R!170) Kd = UNDEFINED
L2                   + HTRRR_L1i00           -> HRTRR_L1_L2i00                  ; fb01=kf2_R                     # (R!171) Kd = UNDEFINED
L2                   + HTRRR_L2i00          <-> HRTRR_L2_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!190) Kd = kb2_R/kf2_R
L2                   + HTRRR_L2i00           -> HRTRR_L2_L2i00                  ; fb01=kf2_R                     # (R!191) Kd = UNDEFINED
L2                   + HTRRR_L2i00           -> HRTRR_L2_L2i00                  ; fb01=kf2_R                     # (R!192) Kd = UNDEFINED
L2                   + HTRRT_L1i00          <-> HRTRT_L1_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!163) Kd = kb2_R/kf2_R
L2                   + HTRRT_L1i00           -> HRTRT_L1_L2i00                  ; fb01=kf2_R                     # (R!164) Kd = UNDEFINED
L2                   + HTRRT_L1i00          <-> HTTRR_L1_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!165) Kd = kb2_T/kf2_T
L2                   + HTRRT_L2i00          <-> HRTRT_L2_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!184) Kd = kb2_R/kf2_R
L2                   + HTRRT_L2i00           -> HRTRT_L2_L2i00                  ; fb01=kf2_R                     # (R!185) Kd = UNDEFINED
L2                   + HTRRT_L2i00          <-> HTTRR_L2_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!186) Kd = kb2_T/kf2_T
L2                   + HTRRT_L2i00          <-  HTTRR_L2_L2i00                  ; bb03=kb2_T                     # (R!273) Kd = UNDEFINED
L2                   + HTRTT_L1i00          <-> HRTTT_L1_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!157) Kd = kb2_R/kf2_R
L2                   + HTRTT_L1i00          <-> HTTRT_L1_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!158) Kd = kb2_T/kf2_T
L2                   + HTRTT_L1i00           -> HTTRT_L1_L2i00                  ; fb03=kf2_T                     # (R!159) Kd = UNDEFINED
L2                   + HTRTT_L2i00          <-> HRTTT_L2_L2i00                  ; fb01=kf2_R; bb01=kb2_R         # (R!178) Kd = kb2_R/kf2_R
L2                   + HTRTT_L2i00          <-> HTTRT_L2_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!179) Kd = kb2_T/kf2_T
L2                   + HTRTT_L2i00           -> HTTRT_L2_L2i00                  ; fb03=kf2_T                     # (R!180) Kd = UNDEFINED
L2                   + HTRTT_L2i00          <-  HTTRT_L2_L2i00                  ; bb03=kb2_T                     # (R!263) Kd = UNDEFINED
L2                   + HTTTT_L1i00          <-> HTTTT_L1_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!148) Kd = kb2_T/kf2_T
L2                   + HTTTT_L1i00           -> HTTTT_L1_L2i00                  ; fb03=kf2_T                     # (R!150) Kd = UNDEFINED
L2                   + HTTTT_L1i00           -> HTTTT_L1_L2i00                  ; fb03=kf2_T                     # (R!149) Kd = UNDEFINED
L2                   + HTTTT_L2i00          <-> HTTTT_L2_L2i00                  ; fb03=kf2_T; bb03=kb2_T         # (R!151) Kd = kb2_T/kf2_T
L2                   + HTTTT_L2i00           -> HTTTT_L2_L2i00                  ; fb03=kf2_T                     # (R!152) Kd = UNDEFINED
L2                   + HTTTT_L2i00           -> HTTTT_L2_L2i00                  ; fb03=kf2_T                     # (R!153) Kd = UNDEFINED
L2                   + HTTTT_L2i00          <-  HTTTT_L2_L2i00                  ; bb03=kb2_T                     # (R!255) Kd = UNDEFINED
L1                   + HRRRR_L1_L1i00       <-> HRRRR_L1_L1_L1i00               ; fb00=kf1_R; bb00=kb1_R         # (R!302) Kd = kb1_R/kf1_R
L1                   + HRRRR_L1_L1i00        -> HRRRR_L1_L1_L1i00               ; fb00=kf1_R                     # (R!303) Kd = UNDEFINED
L1                   + HRRRR_L1_L1i00       <-  HRRRR_L1_L1_L1i00               ; bb00=kb1_R                     # (R!439) Kd = UNDEFINED
L1                   + HRRRR_L1_L1i00       <-  HRRRR_L1_L1_L1i00               ; bb00=kb1_R                     # (R!441) Kd = UNDEFINED
L1                   + HRRRR_L1_L2i00       <-> HRRRR_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!324) Kd = kb1_R/kf1_R
L1                   + HRRRR_L1_L2i00        -> HRRRR_L1_L1_L2i00               ; fb00=kf1_R                     # (R!325) Kd = UNDEFINED
L1                   + HRRRR_L1_L2i00       <-  HRRRR_L1_L1_L2i00               ; bb00=kb1_R                     # (R!472) Kd = UNDEFINED
L1                   + HRRRR_L2_L2i00       <-> HRRRR_L1_L2_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!342) Kd = kb1_R/kf1_R
L1                   + HRRRR_L2_L2i00        -> HRRRR_L1_L2_L2i00               ; fb00=kf1_R                     # (R!343) Kd = UNDEFINED
L1                   + HRRRT_L1_L1i00       <-> HRRRT_L1_L1_L1i00               ; fb00=kf1_R; bb00=kb1_R         # (R!298) Kd = kb1_R/kf1_R
L1                   + HRRRT_L1_L1i00       <-  HRRRT_L1_L1_L1i00               ; bb00=kb1_R                     # (R!431) Kd = UNDEFINED
L1                   + HRRRT_L1_L1i00       <-  HRRRT_L1_L1_L1i00               ; bb00=kb1_R                     # (R!433) Kd = UNDEFINED
L1                   + HRRRT_L1_L1i00       <-> HRRTR_L1_L1_L1i00               ; fb02=kf1_T; bb02=kb1_T         # (R!299) Kd = kb1_T/kf1_T
L1                   + HRRRT_L1_L2i00       <-> HRRRT_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!318) Kd = kb1_R/kf1_R
L1                   + HRRRT_L1_L2i00       <-  HRRRT_L1_L1_L2i00               ; bb00=kb1_R                     # (R!465) Kd = UNDEFINED
L1                   + HRRRT_L1_L2i00       <-> HRRTR_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!319) Kd = kb1_T/kf1_T
L1                   + HRRRT_L2_L2i00       <-> HRRRT_L1_L2_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!338) Kd = kb1_R/kf1_R
L1                   + HRRRT_L2_L2i00       <-> HRRTR_L1_L2_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!339) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1_L1i00       <-> HRRTT_L1_L1_L1i00               ; fb02=kf1_T; bb02=kb1_T         # (R!292) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1_L1i00        -> HRRTT_L1_L1_L1i00               ; fb02=kf1_T                     # (R!293) Kd = UNDEFINED
L1                   + HRRTT_L1_L2i00       <-> HRRTT_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!310) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1_L2i00        -> HRRTT_L1_L1_L2i00               ; fb02=kf1_T                     # (R!311) Kd = UNDEFINED
L1                   + HRRTT_L2_L2i00       <-> HRRTT_L1_L2_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!332) Kd = kb1_T/kf1_T
L1                   + HRRTT_L2_L2i00        -> HRRTT_L1_L2_L2i00               ; fb02=kf1_T                     # (R!333) Kd = UNDEFINED
L1                   + HRTRR_L1_L1i00       <-> HRRTR_L1_L1_L1i00               ; fb00=kf1_R; bb00=kb1_R         # (R!300) Kd = kb1_R/kf1_R
L1                   + HRTRR_L1_L1i00        -> HRRTR_L1_L1_L1i00               ; fb00=kf1_R                     # (R!301) Kd = UNDEFINED
L1                   + HRTRR_L1_L1i00       <-  HRRTR_L1_L1_L1i00               ; bb00=kb1_R                     # (R!437) Kd = UNDEFINED
L1                   + HRTRR_L1_L2i00       <-> HRRTR_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!320) Kd = kb1_R/kf1_R
L1                   + HRTRR_L1_L2i00        -> HRRTR_L1_L1_L2i00               ; fb00=kf1_R                     # (R!321) Kd = UNDEFINED
L1                   + HRTRR_L2_L2i00       <-> HRTRR_L1_L2_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!340) Kd = kb1_R/kf1_R
L1                   + HRTRR_L2_L2i00        -> HRTRR_L1_L2_L2i00               ; fb00=kf1_R                     # (R!341) Kd = UNDEFINED
L1                   + HRTRT_L1_L1i00       <-> HRRTT_L1_L1_L1i00               ; fb00=kf1_R; bb00=kb1_R         # (R!294) Kd = kb1_R/kf1_R
L1                   + HRTRT_L1_L1i00       <-  HRRTT_L1_L1_L1i00               ; bb00=kb1_R                     # (R!425) Kd = UNDEFINED
L1                   + HRTRT_L1_L1i00       <-> HRTTR_L1_L1_L1i00               ; fb02=kf1_T; bb02=kb1_T         # (R!295) Kd = kb1_T/kf1_T
L1                   + HRTRT_L1_L1i00       <-  HRTTR_L1_L1_L1i00               ; bb02=kb1_T                     # (R!428) Kd = UNDEFINED
L1                   + HRTRT_L1_L2i00       <-> HRRTT_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!312) Kd = kb1_R/kf1_R
L1                   + HRTRT_L1_L2i00       <-> HRTTR_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!313) Kd = kb1_T/kf1_T
L1                   + HRTRT_L1_L2i00       <-  HRTTR_L1_L1_L2i00               ; bb02=kb1_T                     # (R!456) Kd = UNDEFINED
L1                   + HRTRT_L2_L2i00       <-> HRTRT_L1_L2_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!334) Kd = kb1_R/kf1_R
L1                   + HRTRT_L2_L2i00       <-> HRTTR_L1_L2_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!335) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1_L1i00       <-> HRTTT_L1_L1_L1i00               ; fb02=kf1_T; bb02=kb1_T         # (R!288) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1_L1i00        -> HRTTT_L1_L1_L1i00               ; fb02=kf1_T                     # (R!289) Kd = UNDEFINED
L1                   + HRTTT_L1_L1i00       <-  HRTTT_L1_L1_L1i00               ; bb02=kb1_T                     # (R!415) Kd = UNDEFINED
L1                   + HRTTT_L1_L2i00       <-> HRTTT_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!304) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1_L2i00        -> HRTTT_L1_L1_L2i00               ; fb02=kf1_T                     # (R!305) Kd = UNDEFINED
L1                   + HRTTT_L1_L2i00       <-  HRTTT_L1_L1_L2i00               ; bb02=kb1_T                     # (R!443) Kd = UNDEFINED
L1                   + HRTTT_L2_L2i00       <-> HRTTT_L1_L2_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!328) Kd = kb1_T/kf1_T
L1                   + HRTTT_L2_L2i00        -> HRTTT_L1_L2_L2i00               ; fb02=kf1_T                     # (R!329) Kd = UNDEFINED
L1                   + HTRRR_L1_L2i00       <-> HTRRR_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!322) Kd = kb1_R/kf1_R
L1                   + HTRRR_L1_L2i00        -> HTRRR_L1_L1_L2i00               ; fb00=kf1_R                     # (R!323) Kd = UNDEFINED
L1                   + HTRRR_L1_L2i00       <-  HTRRR_L1_L1_L2i00               ; bb00=kb1_R                     # (R!469) Kd = UNDEFINED
L1                   + HTRRT_L1_L2i00       <-> HTRRT_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!314) Kd = kb1_R/kf1_R
L1                   + HTRRT_L1_L2i00       <-  HTRRT_L1_L1_L2i00               ; bb00=kb1_R                     # (R!459) Kd = UNDEFINED
L1                   + HTRRT_L1_L2i00       <-> HTRTR_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!315) Kd = kb1_T/kf1_T
L1                   + HTRTT_L1_L2i00       <-> HTRTT_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!306) Kd = kb1_T/kf1_T
L1                   + HTRTT_L1_L2i00        -> HTRTT_L1_L1_L2i00               ; fb02=kf1_T                     # (R!307) Kd = UNDEFINED
L1                   + HTTRR_L1_L1i00       <-> HRTTR_L1_L1_L1i00               ; fb00=kf1_R; bb00=kb1_R         # (R!296) Kd = kb1_R/kf1_R
L1                   + HTTRR_L1_L1i00        -> HRTTR_L1_L1_L1i00               ; fb00=kf1_R                     # (R!297) Kd = UNDEFINED
L1                   + HTTRR_L1_L2i00       <-> HTRTR_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!316) Kd = kb1_R/kf1_R
L1                   + HTTRR_L1_L2i00        -> HTRTR_L1_L1_L2i00               ; fb00=kf1_R                     # (R!317) Kd = UNDEFINED
L1                   + HTTRR_L2_L2i00       <-> HTTRR_L1_L2_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!336) Kd = kb1_R/kf1_R
L1                   + HTTRR_L2_L2i00        -> HTTRR_L1_L2_L2i00               ; fb00=kf1_R                     # (R!337) Kd = UNDEFINED
L1                   + HTTRT_L1_L1i00       <-> HRTTT_L1_L1_L1i00               ; fb00=kf1_R; bb00=kb1_R         # (R!290) Kd = kb1_R/kf1_R
L1                   + HTTRT_L1_L1i00       <-> HTTTR_L1_L1_L1i00               ; fb02=kf1_T; bb02=kb1_T         # (R!291) Kd = kb1_T/kf1_T
L1                   + HTTRT_L1_L1i00       <-  HTTTR_L1_L1_L1i00               ; bb02=kb1_T                     # (R!419) Kd = UNDEFINED
L1                   + HTTRT_L1_L1i00       <-  HTTTR_L1_L1_L1i00               ; bb02=kb1_T                     # (R!421) Kd = UNDEFINED
L1                   + HTTRT_L1_L2i00       <-> HTRTT_L1_L1_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!308) Kd = kb1_R/kf1_R
L1                   + HTTRT_L1_L2i00       <-> HTTTR_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!309) Kd = kb1_T/kf1_T
L1                   + HTTRT_L1_L2i00       <-  HTTTR_L1_L1_L2i00               ; bb02=kb1_T                     # (R!450) Kd = UNDEFINED
L1                   + HTTRT_L2_L2i00       <-> HTTRT_L1_L2_L2i00               ; fb00=kf1_R; bb00=kb1_R         # (R!330) Kd = kb1_R/kf1_R
L1                   + HTTRT_L2_L2i00       <-> HTTTR_L1_L2_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!331) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1_L1i00       <-> HTTTT_L1_L1_L1i00               ; fb02=kf1_T; bb02=kb1_T         # (R!284) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1_L1i00        -> HTTTT_L1_L1_L1i00               ; fb02=kf1_T                     # (R!285) Kd = UNDEFINED
L1                   + HTTTT_L1_L1i00       <-  HTTTT_L1_L1_L1i00               ; bb02=kb1_T                     # (R!404) Kd = UNDEFINED
L1                   + HTTTT_L1_L1i00       <-  HTTTT_L1_L1_L1i00               ; bb02=kb1_T                     # (R!406) Kd = UNDEFINED
L1                   + HTTTT_L1_L2i00       <-> HTTTT_L1_L1_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!286) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1_L2i00        -> HTTTT_L1_L1_L2i00               ; fb02=kf1_T                     # (R!287) Kd = UNDEFINED
L1                   + HTTTT_L1_L2i00       <-  HTTTT_L1_L1_L2i00               ; bb02=kb1_T                     # (R!410) Kd = UNDEFINED
L1                   + HTTTT_L2_L2i00       <-> HTTTT_L1_L2_L2i00               ; fb02=kf1_T; bb02=kb1_T         # (R!326) Kd = kb1_T/kf1_T
L1                   + HTTTT_L2_L2i00        -> HTTTT_L1_L2_L2i00               ; fb02=kf1_T                     # (R!327) Kd = UNDEFINED
L2                   + HRRRR_L1_L1i00       <-> HRRRR_L1_L1_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!362) Kd = kb2_R/kf2_R
L2                   + HRRRR_L1_L1i00        -> HRRRR_L1_L1_L2i00               ; fb01=kf2_R                     # (R!363) Kd = UNDEFINED
L2                   + HRRRR_L1_L2i00       <-> HRRRR_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!384) Kd = kb2_R/kf2_R
L2                   + HRRRR_L1_L2i00        -> HRRRR_L1_L2_L2i00               ; fb01=kf2_R                     # (R!385) Kd = UNDEFINED
L2                   + HRRRR_L1_L2i00       <-  HRRRR_L1_L2_L2i00               ; bb01=kb2_R                     # (R!509) Kd = UNDEFINED
L2                   + HRRRR_L2_L2i00       <-> HRRRR_L2_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!402) Kd = kb2_R/kf2_R
L2                   + HRRRR_L2_L2i00        -> HRRRR_L2_L2_L2i00               ; fb01=kf2_R                     # (R!403) Kd = UNDEFINED
L2                   + HRRRR_L2_L2i00       <-  HRRRR_L2_L2_L2i00               ; bb01=kb2_R                     # (R!540) Kd = UNDEFINED
L2                   + HRRRR_L2_L2i00       <-  HRRRR_L2_L2_L2i00               ; bb01=kb2_R                     # (R!542) Kd = UNDEFINED
L2                   + HRRRT_L1_L1i00       <-> HRRRT_L1_L1_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!358) Kd = kb2_R/kf2_R
L2                   + HRRRT_L1_L1i00       <-> HTRRR_L1_L1_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!359) Kd = kb2_T/kf2_T
L2                   + HRRRT_L1_L2i00       <-> HRRRT_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!378) Kd = kb2_R/kf2_R
L2                   + HRRRT_L1_L2i00       <-  HRRRT_L1_L2_L2i00               ; bb01=kb2_R                     # (R!502) Kd = UNDEFINED
L2                   + HRRRT_L1_L2i00       <-> HRTRR_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!379) Kd = kb2_T/kf2_T
L2                   + HRRRT_L2_L2i00       <-> HRRRT_L2_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!398) Kd = kb2_R/kf2_R
L2                   + HRRRT_L2_L2i00       <-  HRRRT_L2_L2_L2i00               ; bb01=kb2_R                     # (R!532) Kd = UNDEFINED
L2                   + HRRRT_L2_L2i00       <-  HRRRT_L2_L2_L2i00               ; bb01=kb2_R                     # (R!534) Kd = UNDEFINED
L2                   + HRRRT_L2_L2i00       <-> HRRTR_L2_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!399) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1_L1i00       <-> HTRRT_L1_L1_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!352) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1_L1i00        -> HTRRT_L1_L1_L2i00               ; fb03=kf2_T                     # (R!353) Kd = UNDEFINED
L2                   + HRRTT_L1_L2i00       <-> HRTRT_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!370) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1_L2i00        -> HRTRT_L1_L2_L2i00               ; fb03=kf2_T                     # (R!371) Kd = UNDEFINED
L2                   + HRRTT_L2_L2i00       <-> HRRTT_L2_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!392) Kd = kb2_T/kf2_T
L2                   + HRRTT_L2_L2i00        -> HRRTT_L2_L2_L2i00               ; fb03=kf2_T                     # (R!393) Kd = UNDEFINED
L2                   + HRTRR_L1_L1i00       <-> HRRTR_L1_L1_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!360) Kd = kb2_R/kf2_R
L2                   + HRTRR_L1_L1i00        -> HRRTR_L1_L1_L2i00               ; fb01=kf2_R                     # (R!361) Kd = UNDEFINED
L2                   + HRTRR_L1_L2i00       <-> HRRTR_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!380) Kd = kb2_R/kf2_R
L2                   + HRTRR_L1_L2i00        -> HRRTR_L1_L2_L2i00               ; fb01=kf2_R                     # (R!381) Kd = UNDEFINED
L2                   + HRTRR_L1_L2i00       <-  HRRTR_L1_L2_L2i00               ; bb01=kb2_R                     # (R!505) Kd = UNDEFINED
L2                   + HRTRR_L2_L2i00       <-> HRRTR_L2_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!400) Kd = kb2_R/kf2_R
L2                   + HRTRR_L2_L2i00        -> HRRTR_L2_L2_L2i00               ; fb01=kf2_R                     # (R!401) Kd = UNDEFINED
L2                   + HRTRR_L2_L2i00       <-  HRRTR_L2_L2_L2i00               ; bb01=kb2_R                     # (R!538) Kd = UNDEFINED
L2                   + HRTRT_L1_L1i00       <-> HRRTT_L1_L1_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!354) Kd = kb2_R/kf2_R
L2                   + HRTRT_L1_L1i00       <-> HTRTR_L1_L1_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!355) Kd = kb2_T/kf2_T
L2                   + HRTRT_L1_L2i00       <-> HRRTT_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!372) Kd = kb2_R/kf2_R
L2                   + HRTRT_L1_L2i00       <-  HRRTT_L1_L2_L2i00               ; bb01=kb2_R                     # (R!491) Kd = UNDEFINED
L2                   + HRTRT_L1_L2i00       <-> HRTTR_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!373) Kd = kb2_T/kf2_T
L2                   + HRTRT_L2_L2i00       <-> HRRTT_L2_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!394) Kd = kb2_R/kf2_R
L2                   + HRTRT_L2_L2i00       <-  HRRTT_L2_L2_L2i00               ; bb01=kb2_R                     # (R!526) Kd = UNDEFINED
L2                   + HRTRT_L2_L2i00       <-> HRTTR_L2_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!395) Kd = kb2_T/kf2_T
L2                   + HRTRT_L2_L2i00       <-  HRTTR_L2_L2_L2i00               ; bb03=kb2_T                     # (R!529) Kd = UNDEFINED
L2                   + HRTTT_L1_L1i00       <-> HTRTT_L1_L1_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!348) Kd = kb2_T/kf2_T
L2                   + HRTTT_L1_L1i00        -> HTRTT_L1_L1_L2i00               ; fb03=kf2_T                     # (R!349) Kd = UNDEFINED
L2                   + HRTTT_L1_L2i00       <-> HRTTT_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!364) Kd = kb2_T/kf2_T
L2                   + HRTTT_L1_L2i00        -> HRTTT_L1_L2_L2i00               ; fb03=kf2_T                     # (R!365) Kd = UNDEFINED
L2                   + HRTTT_L2_L2i00       <-> HRTTT_L2_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!388) Kd = kb2_T/kf2_T
L2                   + HRTTT_L2_L2i00        -> HRTTT_L2_L2_L2i00               ; fb03=kf2_T                     # (R!389) Kd = UNDEFINED
L2                   + HRTTT_L2_L2i00       <-  HRTTT_L2_L2_L2i00               ; bb03=kb2_T                     # (R!516) Kd = UNDEFINED
L2                   + HTRRR_L1_L2i00       <-> HRTRR_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!382) Kd = kb2_R/kf2_R
L2                   + HTRRR_L1_L2i00        -> HRTRR_L1_L2_L2i00               ; fb01=kf2_R                     # (R!383) Kd = UNDEFINED
L2                   + HTRRT_L1_L2i00       <-> HRTRT_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!374) Kd = kb2_R/kf2_R
L2                   + HTRRT_L1_L2i00       <-> HTTRR_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!375) Kd = kb2_T/kf2_T
L2                   + HTRRT_L1_L2i00       <-  HTTRR_L1_L2_L2i00               ; bb03=kb2_T                     # (R!499) Kd = UNDEFINED
L2                   + HTRTT_L1_L2i00       <-> HTTRT_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!366) Kd = kb2_T/kf2_T
L2                   + HTRTT_L1_L2i00        -> HTTRT_L1_L2_L2i00               ; fb03=kf2_T                     # (R!367) Kd = UNDEFINED
L2                   + HTRTT_L1_L2i00       <-  HTTRT_L1_L2_L2i00               ; bb03=kb2_T                     # (R!483) Kd = UNDEFINED
L2                   + HTTRR_L1_L1i00       <-> HRTTR_L1_L1_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!356) Kd = kb2_R/kf2_R
L2                   + HTTRR_L1_L1i00        -> HRTTR_L1_L1_L2i00               ; fb01=kf2_R                     # (R!357) Kd = UNDEFINED
L2                   + HTTRR_L1_L2i00       <-> HRTTR_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!376) Kd = kb2_R/kf2_R
L2                   + HTTRR_L1_L2i00        -> HRTTR_L1_L2_L2i00               ; fb01=kf2_R                     # (R!377) Kd = UNDEFINED
L2                   + HTTRR_L2_L2i00       <-> HRTTR_L2_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!396) Kd = kb2_R/kf2_R
L2                   + HTTRR_L2_L2i00        -> HRTTR_L2_L2_L2i00               ; fb01=kf2_R                     # (R!397) Kd = UNDEFINED
L2                   + HTTRT_L1_L1i00       <-> HRTTT_L1_L1_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!350) Kd = kb2_R/kf2_R
L2                   + HTTRT_L1_L1i00       <-> HTTTR_L1_L1_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!351) Kd = kb2_T/kf2_T
L2                   + HTTRT_L1_L2i00       <-> HRTTT_L1_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!368) Kd = kb2_R/kf2_R
L2                   + HTTRT_L1_L2i00       <-> HTTTR_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!369) Kd = kb2_T/kf2_T
L2                   + HTTRT_L1_L2i00       <-  HTTTR_L1_L2_L2i00               ; bb03=kb2_T                     # (R!487) Kd = UNDEFINED
L2                   + HTTRT_L2_L2i00       <-> HRTTT_L2_L2_L2i00               ; fb01=kf2_R; bb01=kb2_R         # (R!390) Kd = kb2_R/kf2_R
L2                   + HTTRT_L2_L2i00       <-> HTTTR_L2_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!391) Kd = kb2_T/kf2_T
L2                   + HTTRT_L2_L2i00       <-  HTTTR_L2_L2_L2i00               ; bb03=kb2_T                     # (R!520) Kd = UNDEFINED
L2                   + HTTRT_L2_L2i00       <-  HTTTR_L2_L2_L2i00               ; bb03=kb2_T                     # (R!522) Kd = UNDEFINED
L2                   + HTTTT_L1_L1i00       <-> HTTTT_L1_L1_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!344) Kd = kb2_T/kf2_T
L2                   + HTTTT_L1_L1i00        -> HTTTT_L1_L1_L2i00               ; fb03=kf2_T                     # (R!345) Kd = UNDEFINED
L2                   + HTTTT_L1_L2i00       <-> HTTTT_L1_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!346) Kd = kb2_T/kf2_T
L2                   + HTTTT_L1_L2i00        -> HTTTT_L1_L2_L2i00               ; fb03=kf2_T                     # (R!347) Kd = UNDEFINED
L2                   + HTTTT_L1_L2i00       <-  HTTTT_L1_L2_L2i00               ; bb03=kb2_T                     # (R!475) Kd = UNDEFINED
L2                   + HTTTT_L2_L2i00       <-> HTTTT_L2_L2_L2i00               ; fb03=kf2_T; bb03=kb2_T         # (R!386) Kd = kb2_T/kf2_T
L2                   + HTTTT_L2_L2i00        -> HTTTT_L2_L2_L2i00               ; fb03=kf2_T                     # (R!387) Kd = UNDEFINED
L2                   + HTTTT_L2_L2i00       <-  HTTTT_L2_L2_L2i00               ; bb03=kb2_T                     # (R!510) Kd = UNDEFINED
L2                   + HTTTT_L2_L2i00       <-  HTTTT_L2_L2_L2i00               ; bb03=kb2_T                     # (R!512) Kd = UNDEFINED
L1                   + HRRRR_L1_L1_L1i00    <-> HRRRR_L1_L1_L1_L1i00            ; fb00=kf1_R; bb00=kb1_R         # (R!552) Kd = kb1_R/kf1_R
L1                   + HRRRR_L1_L1_L1i00    <-  HRRRR_L1_L1_L1_L1i00            ; bb00=kb1_R                     # (R!652) Kd = UNDEFINED
L1                   + HRRRR_L1_L1_L1i00    <-  HRRRR_L1_L1_L1_L1i00            ; bb00=kb1_R                     # (R!653) Kd = UNDEFINED
L1                   + HRRRR_L1_L1_L1i00    <-  HRRRR_L1_L1_L1_L1i00            ; bb00=kb1_R                     # (R!655) Kd = UNDEFINED
L1                   + HRRRR_L1_L1_L2i00    <-> HRRRR_L1_L1_L1_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!563) Kd = kb1_R/kf1_R
L1                   + HRRRR_L1_L1_L2i00    <-  HRRRR_L1_L1_L1_L2i00            ; bb00=kb1_R                     # (R!682) Kd = UNDEFINED
L1                   + HRRRR_L1_L1_L2i00    <-  HRRRR_L1_L1_L1_L2i00            ; bb00=kb1_R                     # (R!683) Kd = UNDEFINED
L1                   + HRRRR_L1_L2_L2i00    <-> HRRRR_L1_L1_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!575) Kd = kb1_R/kf1_R
L1                   + HRRRR_L1_L2_L2i00    <-  HRRRR_L1_L1_L2_L2i00            ; bb00=kb1_R                     # (R!718) Kd = UNDEFINED
L1                   + HRRRR_L2_L2_L2i00    <-> HRRRR_L1_L2_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!583) Kd = kb1_R/kf1_R
L1                   + HRRRT_L1_L1_L1i00    <-> HRRRT_L1_L1_L1_L1i00            ; fb02=kf1_T; bb02=kb1_T         # (R!550) Kd = kb1_T/kf1_T
L1                   + HRRRT_L1_L1_L2i00    <-> HRRRT_L1_L1_L1_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!560) Kd = kb1_T/kf1_T
L1                   + HRRRT_L1_L2_L2i00    <-> HRRRT_L1_L1_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!572) Kd = kb1_T/kf1_T
L1                   + HRRRT_L2_L2_L2i00    <-> HRRRT_L1_L2_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!581) Kd = kb1_T/kf1_T
L1                   + HRRTR_L1_L1_L1i00    <-> HRRRT_L1_L1_L1_L1i00            ; fb00=kf1_R; bb00=kb1_R         # (R!551) Kd = kb1_R/kf1_R
L1                   + HRRTR_L1_L1_L1i00    <-  HRRRT_L1_L1_L1_L1i00            ; bb00=kb1_R                     # (R!647) Kd = UNDEFINED
L1                   + HRRTR_L1_L1_L1i00    <-  HRRRT_L1_L1_L1_L1i00            ; bb00=kb1_R                     # (R!649) Kd = UNDEFINED
L1                   + HRRTR_L1_L1_L2i00    <-> HRRRT_L1_L1_L1_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!561) Kd = kb1_R/kf1_R
L1                   + HRRTR_L1_L1_L2i00    <-  HRRRT_L1_L1_L1_L2i00            ; bb00=kb1_R                     # (R!674) Kd = UNDEFINED
L1                   + HRRTR_L1_L2_L2i00    <-> HRRRT_L1_L1_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!573) Kd = kb1_R/kf1_R
L1                   + HRRTR_L2_L2_L2i00    <-> HRRTR_L1_L2_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!582) Kd = kb1_R/kf1_R
L1                   + HRRTT_L1_L1_L1i00    <-> HRRTT_L1_L1_L1_L1i00            ; fb02=kf1_T; bb02=kb1_T         # (R!548) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1_L1_L1i00    <-  HRRTT_L1_L1_L1_L1i00            ; bb02=kb1_T                     # (R!642) Kd = UNDEFINED
L1                   + HRRTT_L1_L1_L2i00    <-> HRRTT_L1_L1_L1_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!556) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1_L1_L2i00    <-  HRRTT_L1_L1_L1_L2i00            ; bb02=kb1_T                     # (R!667) Kd = UNDEFINED
L1                   + HRRTT_L1_L2_L2i00    <-> HRRTT_L1_L1_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!568) Kd = kb1_T/kf1_T
L1                   + HRRTT_L1_L2_L2i00    <-  HRRTT_L1_L1_L2_L2i00            ; bb02=kb1_T                     # (R!700) Kd = UNDEFINED
L1                   + HRRTT_L2_L2_L2i00    <-> HRRTT_L1_L2_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!579) Kd = kb1_T/kf1_T
L1                   + HRTRR_L1_L2_L2i00    <-> HRTRR_L1_L1_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!574) Kd = kb1_R/kf1_R
L1                   + HRTRR_L1_L2_L2i00    <-  HRTRR_L1_L1_L2_L2i00            ; bb00=kb1_R                     # (R!715) Kd = UNDEFINED
L1                   + HRTRT_L1_L2_L2i00    <-> HRTRT_L1_L1_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!569) Kd = kb1_T/kf1_T
L1                   + HRTTR_L1_L1_L1i00    <-> HRRTT_L1_L1_L1_L1i00            ; fb00=kf1_R; bb00=kb1_R         # (R!549) Kd = kb1_R/kf1_R
L1                   + HRTTR_L1_L1_L1i00    <-  HRRTT_L1_L1_L1_L1i00            ; bb00=kb1_R                     # (R!644) Kd = UNDEFINED
L1                   + HRTTR_L1_L1_L2i00    <-> HRRTT_L1_L1_L1_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!557) Kd = kb1_R/kf1_R
L1                   + HRTTR_L1_L2_L2i00    <-> HRTRT_L1_L1_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!570) Kd = kb1_R/kf1_R
L1                   + HRTTR_L2_L2_L2i00    <-> HRTTR_L1_L2_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!580) Kd = kb1_R/kf1_R
L1                   + HRTTT_L1_L1_L1i00    <-> HRTTT_L1_L1_L1_L1i00            ; fb02=kf1_T; bb02=kb1_T         # (R!546) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1_L1_L1i00    <-  HRTTT_L1_L1_L1_L1i00            ; bb02=kb1_T                     # (R!637) Kd = UNDEFINED
L1                   + HRTTT_L1_L1_L1i00    <-  HRTTT_L1_L1_L1_L1i00            ; bb02=kb1_T                     # (R!638) Kd = UNDEFINED
L1                   + HRTTT_L1_L1_L2i00    <-> HRTTT_L1_L1_L1_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!553) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1_L1_L2i00    <-  HRTTT_L1_L1_L1_L2i00            ; bb02=kb1_T                     # (R!658) Kd = UNDEFINED
L1                   + HRTTT_L1_L1_L2i00    <-  HRTTT_L1_L1_L1_L2i00            ; bb02=kb1_T                     # (R!659) Kd = UNDEFINED
L1                   + HRTTT_L1_L2_L2i00    <-> HRTTT_L1_L1_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!565) Kd = kb1_T/kf1_T
L1                   + HRTTT_L1_L2_L2i00    <-  HRTTT_L1_L1_L2_L2i00            ; bb02=kb1_T                     # (R!692) Kd = UNDEFINED
L1                   + HRTTT_L2_L2_L2i00    <-> HRTTT_L1_L2_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!577) Kd = kb1_T/kf1_T
L1                   + HTRRR_L1_L1_L2i00    <-> HTRRR_L1_L1_L1_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!562) Kd = kb1_R/kf1_R
L1                   + HTRRR_L1_L1_L2i00    <-  HTRRR_L1_L1_L1_L2i00            ; bb00=kb1_R                     # (R!677) Kd = UNDEFINED
L1                   + HTRRR_L1_L1_L2i00    <-  HTRRR_L1_L1_L1_L2i00            ; bb00=kb1_R                     # (R!678) Kd = UNDEFINED
L1                   + HTRRT_L1_L1_L2i00    <-> HTRRT_L1_L1_L1_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!558) Kd = kb1_T/kf1_T
L1                   + HTRTR_L1_L1_L2i00    <-> HTRRT_L1_L1_L1_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!559) Kd = kb1_R/kf1_R
L1                   + HTRTR_L1_L1_L2i00    <-  HTRRT_L1_L1_L1_L2i00            ; bb00=kb1_R                     # (R!670) Kd = UNDEFINED
L1                   + HTRTT_L1_L1_L2i00    <-> HTRTT_L1_L1_L1_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!554) Kd = kb1_T/kf1_T
L1                   + HTRTT_L1_L1_L2i00    <-  HTRTT_L1_L1_L1_L2i00            ; bb02=kb1_T                     # (R!663) Kd = UNDEFINED
L1                   + HTTRR_L1_L2_L2i00    <-> HTTRR_L1_L1_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!571) Kd = kb1_R/kf1_R
L1                   + HTTRR_L1_L2_L2i00    <-  HTTRR_L1_L1_L2_L2i00            ; bb00=kb1_R                     # (R!707) Kd = UNDEFINED
L1                   + HTTRT_L1_L2_L2i00    <-> HTTRT_L1_L1_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!566) Kd = kb1_T/kf1_T
L1                   + HTTTR_L1_L1_L1i00    <-> HRTTT_L1_L1_L1_L1i00            ; fb00=kf1_R; bb00=kb1_R         # (R!547) Kd = kb1_R/kf1_R
L1                   + HTTTR_L1_L1_L2i00    <-> HTRTT_L1_L1_L1_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!555) Kd = kb1_R/kf1_R
L1                   + HTTTR_L1_L2_L2i00    <-> HTTRT_L1_L1_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!567) Kd = kb1_R/kf1_R
L1                   + HTTTR_L2_L2_L2i00    <-> HTTTR_L1_L2_L2_L2i00            ; fb00=kf1_R; bb00=kb1_R         # (R!578) Kd = kb1_R/kf1_R
L1                   + HTTTT_L1_L1_L1i00    <-> HTTTT_L1_L1_L1_L1i00            ; fb02=kf1_T; bb02=kb1_T         # (R!544) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1_L1_L1i00    <-  HTTTT_L1_L1_L1_L1i00            ; bb02=kb1_T                     # (R!624) Kd = UNDEFINED
L1                   + HTTTT_L1_L1_L1i00    <-  HTTTT_L1_L1_L1_L1i00            ; bb02=kb1_T                     # (R!625) Kd = UNDEFINED
L1                   + HTTTT_L1_L1_L1i00    <-  HTTTT_L1_L1_L1_L1i00            ; bb02=kb1_T                     # (R!627) Kd = UNDEFINED
L1                   + HTTTT_L1_L1_L2i00    <-> HTTTT_L1_L1_L1_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!545) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1_L1_L2i00    <-  HTTTT_L1_L1_L1_L2i00            ; bb02=kb1_T                     # (R!631) Kd = UNDEFINED
L1                   + HTTTT_L1_L1_L2i00    <-  HTTTT_L1_L1_L1_L2i00            ; bb02=kb1_T                     # (R!632) Kd = UNDEFINED
L1                   + HTTTT_L1_L2_L2i00    <-> HTTTT_L1_L1_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!564) Kd = kb1_T/kf1_T
L1                   + HTTTT_L1_L2_L2i00    <-  HTTTT_L1_L1_L2_L2i00            ; bb02=kb1_T                     # (R!686) Kd = UNDEFINED
L1                   + HTTTT_L2_L2_L2i00    <-> HTTTT_L1_L2_L2_L2i00            ; fb02=kf1_T; bb02=kb1_T         # (R!576) Kd = kb1_T/kf1_T
L2                   + HRRRR_L1_L1_L1i00    <-> HRRRR_L1_L1_L1_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!592) Kd = kb2_R/kf2_R
L2                   + HRRRR_L1_L1_L2i00    <-> HRRRR_L1_L1_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!603) Kd = kb2_R/kf2_R
L2                   + HRRRR_L1_L1_L2i00    <-  HRRRR_L1_L1_L2_L2i00            ; bb01=kb2_R                     # (R!720) Kd = UNDEFINED
L2                   + HRRRR_L1_L2_L2i00    <-> HRRRR_L1_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!615) Kd = kb2_R/kf2_R
L2                   + HRRRR_L1_L2_L2i00    <-  HRRRR_L1_L2_L2_L2i00            ; bb01=kb2_R                     # (R!752) Kd = UNDEFINED
L2                   + HRRRR_L1_L2_L2i00    <-  HRRRR_L1_L2_L2_L2i00            ; bb01=kb2_R                     # (R!754) Kd = UNDEFINED
L2                   + HRRRR_L2_L2_L2i00    <-> HRRRR_L2_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!623) Kd = kb2_R/kf2_R
L2                   + HRRRR_L2_L2_L2i00    <-  HRRRR_L2_L2_L2_L2i00            ; bb01=kb2_R                     # (R!778) Kd = UNDEFINED
L2                   + HRRRR_L2_L2_L2i00    <-  HRRRR_L2_L2_L2_L2i00            ; bb01=kb2_R                     # (R!779) Kd = UNDEFINED
L2                   + HRRRR_L2_L2_L2i00    <-  HRRRR_L2_L2_L2_L2i00            ; bb01=kb2_R                     # (R!781) Kd = UNDEFINED
L2                   + HRRRT_L1_L1_L1i00    <-> HTRRR_L1_L1_L1_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!590) Kd = kb2_T/kf2_T
L2                   + HRRRT_L1_L1_L2i00    <-> HRTRR_L1_L1_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!600) Kd = kb2_T/kf2_T
L2                   + HRRRT_L1_L2_L2i00    <-> HRRTR_L1_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!612) Kd = kb2_T/kf2_T
L2                   + HRRRT_L2_L2_L2i00    <-> HRRRT_L2_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!621) Kd = kb2_T/kf2_T
L2                   + HRRTR_L1_L1_L1i00    <-> HRRRT_L1_L1_L1_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!591) Kd = kb2_R/kf2_R
L2                   + HRRTR_L1_L1_L2i00    <-> HRRRT_L1_L1_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!601) Kd = kb2_R/kf2_R
L2                   + HRRTR_L1_L1_L2i00    <-  HRRRT_L1_L1_L2_L2i00            ; bb01=kb2_R                     # (R!713) Kd = UNDEFINED
L2                   + HRRTR_L1_L2_L2i00    <-> HRRRT_L1_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!613) Kd = kb2_R/kf2_R
L2                   + HRRTR_L1_L2_L2i00    <-  HRRRT_L1_L2_L2_L2i00            ; bb01=kb2_R                     # (R!744) Kd = UNDEFINED
L2                   + HRRTR_L1_L2_L2i00    <-  HRRRT_L1_L2_L2_L2i00            ; bb01=kb2_R                     # (R!746) Kd = UNDEFINED
L2                   + HRRTR_L2_L2_L2i00    <-> HRRRT_L2_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!622) Kd = kb2_R/kf2_R
L2                   + HRRTR_L2_L2_L2i00    <-  HRRRT_L2_L2_L2_L2i00            ; bb01=kb2_R                     # (R!773) Kd = UNDEFINED
L2                   + HRRTR_L2_L2_L2i00    <-  HRRRT_L2_L2_L2_L2i00            ; bb01=kb2_R                     # (R!775) Kd = UNDEFINED
L2                   + HRRTT_L1_L1_L1i00    <-> HTRRT_L1_L1_L1_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!588) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1_L1_L2i00    <-> HRTRT_L1_L1_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!596) Kd = kb2_T/kf2_T
L2                   + HRRTT_L1_L2_L2i00    <-> HRRTT_L1_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!608) Kd = kb2_T/kf2_T
L2                   + HRRTT_L2_L2_L2i00    <-> HRRTT_L2_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!619) Kd = kb2_T/kf2_T
L2                   + HRRTT_L2_L2_L2i00    <-  HRRTT_L2_L2_L2_L2i00            ; bb03=kb2_T                     # (R!768) Kd = UNDEFINED
L2                   + HRTRR_L1_L2_L2i00    <-> HRRTR_L1_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!614) Kd = kb2_R/kf2_R
L2                   + HRTRR_L1_L2_L2i00    <-  HRRTR_L1_L2_L2_L2i00            ; bb01=kb2_R                     # (R!750) Kd = UNDEFINED
L2                   + HRTRT_L1_L2_L2i00    <-> HRTTR_L1_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!609) Kd = kb2_T/kf2_T
L2                   + HRTRT_L1_L2_L2i00    <-  HRTTR_L1_L2_L2_L2i00            ; bb03=kb2_T                     # (R!741) Kd = UNDEFINED
L2                   + HRTTR_L1_L1_L1i00    <-> HRRTT_L1_L1_L1_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!589) Kd = kb2_R/kf2_R
L2                   + HRTTR_L1_L1_L2i00    <-> HRRTT_L1_L1_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!597) Kd = kb2_R/kf2_R
L2                   + HRTTR_L1_L1_L2i00    <-  HRRTT_L1_L1_L2_L2i00            ; bb01=kb2_R                     # (R!702) Kd = UNDEFINED
L2                   + HRTTR_L1_L2_L2i00    <-> HRRTT_L1_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!610) Kd = kb2_R/kf2_R
L2                   + HRTTR_L1_L2_L2i00    <-  HRRTT_L1_L2_L2_L2i00            ; bb01=kb2_R                     # (R!738) Kd = UNDEFINED
L2                   + HRTTR_L2_L2_L2i00    <-> HRRTT_L2_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!620) Kd = kb2_R/kf2_R
L2                   + HRTTR_L2_L2_L2i00    <-  HRRTT_L2_L2_L2_L2i00            ; bb01=kb2_R                     # (R!770) Kd = UNDEFINED
L2                   + HRTTT_L1_L1_L1i00    <-> HTRTT_L1_L1_L1_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!586) Kd = kb2_T/kf2_T
L2                   + HRTTT_L1_L1_L2i00    <-> HRTTT_L1_L1_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!593) Kd = kb2_T/kf2_T
L2                   + HRTTT_L1_L2_L2i00    <-> HRTTT_L1_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!605) Kd = kb2_T/kf2_T
L2                   + HRTTT_L1_L2_L2i00    <-  HRTTT_L1_L2_L2_L2i00            ; bb03=kb2_T                     # (R!728) Kd = UNDEFINED
L2                   + HRTTT_L2_L2_L2i00    <-> HRTTT_L2_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!617) Kd = kb2_T/kf2_T
L2                   + HRTTT_L2_L2_L2i00    <-  HRTTT_L2_L2_L2_L2i00            ; bb03=kb2_T                     # (R!763) Kd = UNDEFINED
L2                   + HRTTT_L2_L2_L2i00    <-  HRTTT_L2_L2_L2_L2i00            ; bb03=kb2_T                     # (R!764) Kd = UNDEFINED
L2                   + HTRRR_L1_L1_L2i00    <-> HRTRR_L1_L1_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!602) Kd = kb2_R/kf2_R
L2                   + HTRRT_L1_L1_L2i00    <-> HTTRR_L1_L1_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!598) Kd = kb2_T/kf2_T
L2                   + HTRRT_L1_L1_L2i00    <-  HTTRR_L1_L1_L2_L2i00            ; bb03=kb2_T                     # (R!709) Kd = UNDEFINED
L2                   + HTRTR_L1_L1_L2i00    <-> HRTRT_L1_L1_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!599) Kd = kb2_R/kf2_R
L2                   + HTRTT_L1_L1_L2i00    <-> HTTRT_L1_L1_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!594) Kd = kb2_T/kf2_T
L2                   + HTRTT_L1_L1_L2i00    <-  HTTRT_L1_L1_L2_L2i00            ; bb03=kb2_T                     # (R!697) Kd = UNDEFINED
L2                   + HTTRR_L1_L2_L2i00    <-> HRTTR_L1_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!611) Kd = kb2_R/kf2_R
L2                   + HTTRT_L1_L2_L2i00    <-> HTTTR_L1_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!606) Kd = kb2_T/kf2_T
L2                   + HTTRT_L1_L2_L2i00    <-  HTTTR_L1_L2_L2_L2i00            ; bb03=kb2_T                     # (R!732) Kd = UNDEFINED
L2                   + HTTRT_L1_L2_L2i00    <-  HTTTR_L1_L2_L2_L2i00            ; bb03=kb2_T                     # (R!734) Kd = UNDEFINED
L2                   + HTTTR_L1_L1_L1i00    <-> HRTTT_L1_L1_L1_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!587) Kd = kb2_R/kf2_R
L2                   + HTTTR_L1_L1_L2i00    <-> HRTTT_L1_L1_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!595) Kd = kb2_R/kf2_R
L2                   + HTTTR_L1_L2_L2i00    <-> HRTTT_L1_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!607) Kd = kb2_R/kf2_R
L2                   + HTTTR_L2_L2_L2i00    <-> HRTTT_L2_L2_L2_L2i00            ; fb01=kf2_R; bb01=kb2_R         # (R!618) Kd = kb2_R/kf2_R
L2                   + HTTTT_L1_L1_L1i00    <-> HTTTT_L1_L1_L1_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!584) Kd = kb2_T/kf2_T
L2                   + HTTTT_L1_L1_L2i00    <-> HTTTT_L1_L1_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!585) Kd = kb2_T/kf2_T
L2                   + HTTTT_L1_L1_L2i00    <-  HTTTT_L1_L1_L2_L2i00            ; bb03=kb2_T                     # (R!688) Kd = UNDEFINED
L2                   + HTTTT_L1_L2_L2i00    <-> HTTTT_L1_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!604) Kd = kb2_T/kf2_T
L2                   + HTTTT_L1_L2_L2i00    <-  HTTTT_L1_L2_L2_L2i00            ; bb03=kb2_T                     # (R!722) Kd = UNDEFINED
L2                   + HTTTT_L1_L2_L2i00    <-  HTTTT_L1_L2_L2_L2i00            ; bb03=kb2_T                     # (R!724) Kd = UNDEFINED
L2                   + HTTTT_L2_L2_L2i00    <-> HTTTT_L2_L2_L2_L2i00            ; fb03=kf2_T; bb03=kb2_T         # (R!616) Kd = kb2_T/kf2_T
L2                   + HTTTT_L2_L2_L2i00    <-  HTTTT_L2_L2_L2_L2i00            ; bb03=kb2_T                     # (R!756) Kd = UNDEFINED
L2                   + HTTTT_L2_L2_L2i00    <-  HTTTT_L2_L2_L2_L2i00            ; bb03=kb2_T                     # (R!757) Kd = UNDEFINED
L2                   + HTTTT_L2_L2_L2i00    <-  HTTTT_L2_L2_L2_L2i00            ; bb03=kb2_T                     # (R!759) Kd = UNDEFINED

# REACTION CLASS: AllostericReaction
# ----------------------------------
HRRRR                                        -> HRRRT                           ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!13) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR                                        -> HRRRT                           ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!14) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR                                        -> HRRRT                           ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!15) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRT                                       <-> HRRRR                           ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!12) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT                                        -> HRRTT                           ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!10) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRRRT                                        -> HRRTT                           ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!11) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRRTT                                       <-> HRRRT                           ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!08) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT                                        -> HRRRT                           ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR) # (R!09) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT                                        -> HRTTT                           ; fu04=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!07) Keq = (k_RT * (Gamma ^ (Phi_TR - 1))) / (k_TR * Gamma ^ Phi_TR)
HRTTT                                       <-> HRRTT                           ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!04) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT                                        -> HRRTT                           ; fu05=k_TR * Gamma ^ Phi_TR     # (R!05) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT                                        -> HRRTT                           ; fu05=k_TR * Gamma ^ Phi_TR     # (R!06) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTTT                                       <-> HRTTT                           ; fu06=k_TR; bu06=k_RT           # (R!00) Keq = k_TR / k_RT
HTTTT                                        -> HRTTT                           ; fu06=k_TR                      # (R!02) Keq = k_TR / k_RT
HTTTT                                        -> HRTTT                           ; fu06=k_TR                      # (R!01) Keq = k_TR / k_RT
HTTTT                                        -> HRTTT                           ; fu06=k_TR                      # (R!03) Keq = k_TR / k_RT
HRRRR_L1i00                                  -> HRRRT_L1i00                     ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!80) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L1i00                                  -> HRRRT_L1i00                     ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!81) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L2i00                                  -> HRRRT_L2i00                     ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!98) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L2i00                                  -> HRRRT_L2i00                     ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!99) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRT_L1i00                                 <-> HRRRR_L1i00                     ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!76) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L1i00                                  -> HRRTT_L1i00                     ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!75) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRRRT_L2i00                                 <-> HRRRR_L2i00                     ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!94) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L2i00                                  -> HRRTT_L2i00                     ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!93) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRRTT_L1i00                                 <-> HRRRT_L1i00                     ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!70) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1i00                                  -> HRRRT_L1i00                     ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR) # (R!71) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L2i00                                 <-> HRRRT_L2i00                     ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!88) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L2i00                                  -> HRRRT_L2i00                     ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR) # (R!89) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRTTT_L1i00                                 <-> HRRTT_L1i00                     ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!64) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1i00                                  -> HRRTT_L1i00                     ; fu05=k_TR * Gamma ^ Phi_TR     # (R!66) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1i00                                  -> HRRTT_L1i00                     ; fu05=k_TR * Gamma ^ Phi_TR     # (R!65) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L2i00                                 <-> HRRTT_L2i00                     ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!82) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L2i00                                  -> HRRTT_L2i00                     ; fu05=k_TR * Gamma ^ Phi_TR     # (R!84) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L2i00                                  -> HRRTT_L2i00                     ; fu05=k_TR * Gamma ^ Phi_TR     # (R!83) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRRR_L1i00                                 <-> HRRRR_L1i00                     ; fu07=k_TR * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu07=k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!77) Keq = (k_TR * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRR_L1i00                                  -> HTRRT_L1i00                     ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!78) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HTRRR_L1i00                                  -> HTRRT_L1i00                     ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!79) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HTRRR_L2i00                                 <-> HRRRR_L2i00                     ; fu08=k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu08=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!95) Keq = (k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRR_L2i00                                  -> HTRRT_L2i00                     ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!96) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HTRRR_L2i00                                  -> HTRRT_L2i00                     ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!97) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HTRRT_L1i00                                 <-> HRRRT_L1i00                     ; fu09=k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu09=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!72) Keq = (k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L1i00                                 <-> HTRRR_L1i00                     ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!74) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L1i00                                  -> HTRTT_L1i00                     ; fu04=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!73) Keq = (k_RT * (Gamma ^ (Phi_TR - 1))) / (k_TR * Gamma ^ Phi_TR)
HTRRT_L2i00                                 <-> HRRRT_L2i00                     ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!90) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L2i00                                 <-> HTRRR_L2i00                     ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!92) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L2i00                                  -> HTRTT_L2i00                     ; fu04=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!91) Keq = (k_RT * (Gamma ^ (Phi_TR - 1))) / (k_TR * Gamma ^ Phi_TR)
HTRTT_L1i00                                 <-> HRRTT_L1i00                     ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu11=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!67) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L1i00                                 <-> HTRRT_L1i00                     ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!68) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRTT_L1i00                                  -> HTRRT_L1i00                     ; fu05=k_TR * Gamma ^ Phi_TR     # (R!69) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRTT_L2i00                                 <-> HRRTT_L2i00                     ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!85) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L2i00                                 <-> HTRRT_L2i00                     ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!86) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRTT_L2i00                                  -> HTRRT_L2i00                     ; fu05=k_TR * Gamma ^ Phi_TR     # (R!87) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTTT_L1i00                                 <-> HRTTT_L1i00                     ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!56) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1i00                                 <-> HTRTT_L1i00                     ; fu06=k_TR; bu06=k_RT           # (R!57) Keq = k_TR / k_RT
HTTTT_L1i00                                  -> HTRTT_L1i00                     ; fu06=k_TR                      # (R!58) Keq = k_TR / k_RT
HTTTT_L1i00                                  -> HTRTT_L1i00                     ; fu06=k_TR                      # (R!59) Keq = k_TR / k_RT
HTTTT_L2i00                                 <-> HRTTT_L2i00                     ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!60) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2i00                                 <-> HTRTT_L2i00                     ; fu06=k_TR; bu06=k_RT           # (R!61) Keq = k_TR / k_RT
HTTTT_L2i00                                  -> HTRTT_L2i00                     ; fu06=k_TR                      # (R!62) Keq = k_TR / k_RT
HTTTT_L2i00                                  -> HTRTT_L2i00                     ; fu06=k_TR                      # (R!63) Keq = k_TR / k_RT
HRRRR_L1_L1i00                               -> HRRRT_L1_L1i00                  ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!229) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L1_L1i00                               -> HRTRR_L1_L1i00                  ; fu15=k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!227) Keq = (k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L1_L2i00                               -> HRRRT_L1_L2i00                  ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!253) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L2_L2i00                               -> HRRRT_L2_L2i00                  ; fu00=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!283) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L2_L2i00                               -> HRTRR_L2_L2i00                  ; fu16=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!281) Keq = (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRT_L1_L1i00                              <-> HRRRR_L1_L1i00                  ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!224) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L1_L1i00                               -> HRTRT_L1_L1i00                  ; fu17=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!222) Keq = (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRT_L1_L2i00                              <-> HRRRR_L1_L2i00                  ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!248) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L2_L2i00                              <-> HRRRR_L2_L2i00                  ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!278) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L2_L2i00                               -> HRTRT_L2_L2i00                  ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!276) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRTT_L1_L1i00                              <-> HRRRT_L1_L1i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!214) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1_L1i00                               -> HRRRT_L1_L1i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR) # (R!215) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1_L1i00                               -> HRTTT_L1_L1i00                  ; fu19=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!212) Keq = (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRTT_L1_L2i00                              <-> HRRRT_L1_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!239) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1_L2i00                               -> HRRRT_L1_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR) # (R!240) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L2_L2i00                              <-> HRRRT_L2_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!268) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L2_L2i00                               -> HRRRT_L2_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR) # (R!269) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L2_L2i00                               -> HRTTT_L2_L2i00                  ; fu20=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!266) Keq = (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRTRR_L1_L1i00                              <-> HRRRR_L1_L1i00                  ; fu21=k_TR * (((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu21=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!225) Keq = (k_TR * (((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRR_L1_L1i00                               -> HRTRT_L1_L1i00                  ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!226) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRTRR_L1_L2i00                              <-> HRRRR_L1_L2i00                  ; fu21=k_TR * (((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu21=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!249) Keq = (k_TR * (((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRR_L1_L2i00                               -> HRTRT_L1_L2i00                  ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!250) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRTRR_L2_L2i00                              <-> HRRRR_L2_L2i00                  ; fu22=k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu22=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!279) Keq = (k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRR_L2_L2i00                               -> HRTRT_L2_L2i00                  ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!280) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HRTRT_L1_L1i00                              <-> HRRRT_L1_L1i00                  ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu23=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!216) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L1_L1i00                              <-> HRTRR_L1_L1i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!217) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L1_L2i00                              <-> HRRRT_L1_L2i00                  ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu23=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!241) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L1_L2i00                              <-> HRTRR_L1_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!242) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L2_L2i00                              <-> HRRRT_L2_L2i00                  ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu24=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!270) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L2_L2i00                              <-> HRTRR_L2_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!271) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRTTT_L1_L1i00                              <-> HRRTT_L1_L1i00                  ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!205) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1i00                              <-> HRTRT_L1_L1i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!206) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1_L1i00                               -> HRTRT_L1_L1i00                  ; fu05=k_TR * Gamma ^ Phi_TR     # (R!207) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1_L2i00                              <-> HRRTT_L1_L2i00                  ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!230) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L2i00                              <-> HRTRT_L1_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!231) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1_L2i00                               -> HRTRT_L1_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR     # (R!232) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L2_L2i00                              <-> HRRTT_L2_L2i00                  ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu26=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!259) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L2_L2i00                              <-> HRTRT_L2_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!260) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L2_L2i00                               -> HRTRT_L2_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR     # (R!261) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRRR_L1_L2i00                              <-> HRRRR_L1_L2i00                  ; fu08=k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu08=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!251) Keq = (k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRR_L1_L2i00                               -> HTRRT_L1_L2i00                  ; fu02=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!252) Keq = (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR))
HTRRT_L1_L2i00                              <-> HRRRT_L1_L2i00                  ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!243) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L1_L2i00                              <-> HTRRR_L1_L2i00                  ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!244) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L1_L2i00                              <-> HRRTT_L1_L2i00                  ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!233) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L1_L2i00                              <-> HTRRT_L1_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!234) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRTT_L1_L2i00                               -> HTRRT_L1_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR     # (R!235) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTRR_L1_L1i00                              <-> HRTRR_L1_L1i00                  ; fu09=k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu09=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!218) Keq = (k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L1i00                               -> HRTRR_L1_L1i00                  ; fu09=k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) # (R!220) Keq = (k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L1i00                               -> HTTRT_L1_L1i00                  ; fu04=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!221) Keq = (k_RT * (Gamma ^ (Phi_TR - 1))) / (k_TR * Gamma ^ Phi_TR)
HTTRR_L1_L2i00                              <-> HRTRR_L1_L2i00                  ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!245) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L2i00                              <-> HTRRR_L1_L2i00                  ; fu09=k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu09=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!246) Keq = (k_TR * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L2i00                               -> HTTRT_L1_L2i00                  ; fu04=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!247) Keq = (k_RT * (Gamma ^ (Phi_TR - 1))) / (k_TR * Gamma ^ Phi_TR)
HTTRR_L2_L2i00                              <-> HRTRR_L2_L2i00                  ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!272) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L2_L2i00                               -> HRTRR_L2_L2i00                  ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) # (R!274) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L2_L2i00                               -> HTTRT_L2_L2i00                  ; fu04=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!275) Keq = (k_RT * (Gamma ^ (Phi_TR - 1))) / (k_TR * Gamma ^ Phi_TR)
HTTRT_L1_L1i00                              <-> HRTRT_L1_L1i00                  ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu11=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!208) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L1i00                               -> HRTRT_L1_L1i00                  ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!210) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L1i00                              <-> HTTRR_L1_L1i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!211) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTRT_L1_L2i00                              <-> HRTRT_L1_L2i00                  ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!236) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L2i00                              <-> HTRRT_L1_L2i00                  ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu11=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!237) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L2i00                              <-> HTTRR_L1_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!238) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTRT_L2_L2i00                              <-> HRTRT_L2_L2i00                  ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!262) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L2_L2i00                               -> HRTRT_L2_L2i00                  ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!264) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L2_L2i00                              <-> HTTRR_L2_L2i00                  ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!265) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTTT_L1_L1i00                              <-> HRTTT_L1_L1i00                  ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!196) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1i00                               -> HRTTT_L1_L1i00                  ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!198) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1i00                              <-> HTTRT_L1_L1i00                  ; fu06=k_TR; bu06=k_RT           # (R!199) Keq = k_TR / k_RT
HTTTT_L1_L1i00                               -> HTTRT_L1_L1i00                  ; fu06=k_TR                      # (R!200) Keq = k_TR / k_RT
HTTTT_L1_L2i00                              <-> HRTTT_L1_L2i00                  ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!201) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2i00                              <-> HTRTT_L1_L2i00                  ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!202) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2i00                              <-> HTTRT_L1_L2i00                  ; fu06=k_TR; bu06=k_RT           # (R!203) Keq = k_TR / k_RT
HTTTT_L1_L2i00                               -> HTTRT_L1_L2i00                  ; fu06=k_TR                      # (R!204) Keq = k_TR / k_RT
HTTTT_L2_L2i00                              <-> HRTTT_L2_L2i00                  ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!254) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2i00                               -> HRTTT_L2_L2i00                  ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!256) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2i00                              <-> HTTRT_L2_L2i00                  ; fu06=k_TR; bu06=k_RT           # (R!257) Keq = k_TR / k_RT
HTTTT_L2_L2i00                               -> HTTRT_L2_L2i00                  ; fu06=k_TR                      # (R!258) Keq = k_TR / k_RT
HRRRR_L1_L1_L1i00                            -> HRRTR_L1_L1_L1i00               ; fu15=k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!440) Keq = (k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRR_L1_L1_L1i00                            -> HRRTR_L1_L1_L1i00               ; fu27=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!442) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRR_L1_L1_L2i00                            -> HRRTR_L1_L1_L2i00               ; fu27=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!473) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRR_L1_L2_L2i00                            -> HRTRR_L1_L2_L2i00               ; fu16=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!508) Keq = (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L2_L2_L2i00                            -> HRRTR_L2_L2_L2i00               ; fu16=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!541) Keq = (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRR_L2_L2_L2i00                            -> HRRTR_L2_L2_L2i00               ; fu28=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!543) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRT_L1_L1_L1i00                           <-> HRRRR_L1_L1_L1i00               ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!435) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L1_L1_L1i00                            -> HRRTT_L1_L1_L1i00               ; fu17=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!432) Keq = (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRT_L1_L1_L1i00                            -> HRRTT_L1_L1_L1i00               ; fu29=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!434) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRT_L1_L1_L2i00                           <-> HRRRR_L1_L1_L2i00               ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!467) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L1_L1_L2i00                            -> HRRTT_L1_L1_L2i00               ; fu29=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!466) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRT_L1_L2_L2i00                           <-> HRRRR_L1_L2_L2i00               ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!503) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L1_L2_L2i00                            -> HRTRT_L1_L2_L2i00               ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!501) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRT_L2_L2_L2i00                           <-> HRRRR_L2_L2_L2i00               ; fu01=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu01=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!536) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRRT_L2_L2_L2i00                            -> HRRTT_L2_L2_L2i00               ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!533) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRT_L2_L2_L2i00                            -> HRRTT_L2_L2_L2i00               ; fu30=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!535) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRTR_L1_L1_L1i00                           <-> HRRRR_L1_L1_L1i00               ; fu31=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu31=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!438) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRTR_L1_L1_L1i00                            -> HRTTR_L1_L1_L1i00               ; fu17=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!436) Keq = (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRTR_L1_L1_L2i00                           <-> HRRRR_L1_L1_L2i00               ; fu31=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu31=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!468) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRTR_L1_L2_L2i00                           <-> HRRRR_L1_L2_L2i00               ; fu31=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu31=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!506) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRTR_L1_L2_L2i00                            -> HRTTR_L1_L2_L2i00               ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!504) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRTR_L2_L2_L2i00                           <-> HRRRR_L2_L2_L2i00               ; fu32=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu32=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!539) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRTR_L2_L2_L2i00                            -> HRTTR_L2_L2_L2i00               ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!537) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRTT_L1_L1_L1i00                           <-> HRRRT_L1_L1_L1i00               ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!426) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L1i00                           <-> HRRTR_L1_L1_L1i00               ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!427) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1_L1_L1i00                            -> HRTTT_L1_L1_L1i00               ; fu19=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!424) Keq = (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRTT_L1_L1_L2i00                           <-> HRRRT_L1_L1_L2i00               ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!454) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L2i00                           <-> HRRTR_L1_L1_L2i00               ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!455) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1_L2_L2i00                           <-> HRRRT_L1_L2_L2i00               ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!492) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L2_L2i00                           <-> HRRTR_L1_L2_L2i00               ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!493) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L1_L2_L2i00                            -> HRTTT_L1_L2_L2i00               ; fu20=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!490) Keq = (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRTT_L2_L2_L2i00                           <-> HRRRT_L2_L2_L2i00               ; fu34=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu34=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!527) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRRTT_L2_L2_L2i00                           <-> HRRTR_L2_L2_L2i00               ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!528) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRRTT_L2_L2_L2i00                            -> HRTTT_L2_L2_L2i00               ; fu20=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!525) Keq = (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRTRR_L1_L2_L2i00                           <-> HRRRR_L1_L2_L2i00               ; fu22=k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu22=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!507) Keq = (k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L1_L2_L2i00                           <-> HRRRT_L1_L2_L2i00               ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu24=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!494) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L1_L2_L2i00                           <-> HRTRR_L1_L2_L2i00               ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!495) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L1_L1i00                           <-> HRRTR_L1_L1_L1i00               ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu23=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!429) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L1_L1i00                            -> HRRTR_L1_L1_L1i00               ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) # (R!430) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L1_L2i00                           <-> HRRTR_L1_L1_L2i00               ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu23=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!457) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L1_L2i00                            -> HRRTR_L1_L1_L2i00               ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) # (R!458) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L2_L2i00                           <-> HRRTR_L1_L2_L2i00               ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu24=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!496) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L2_L2i00                           <-> HRTRR_L1_L2_L2i00               ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu23=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!497) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L2_L2_L2i00                           <-> HRRTR_L2_L2_L2i00               ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu24=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!530) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L2_L2_L2i00                            -> HRRTR_L2_L2_L2i00               ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) # (R!531) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1i00                           <-> HRRTT_L1_L1_L1i00               ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!416) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1i00                            -> HRRTT_L1_L1_L1i00               ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!417) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1i00                           <-> HRTTR_L1_L1_L1i00               ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!418) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1_L1_L2i00                           <-> HRRTT_L1_L1_L2i00               ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!444) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L2i00                            -> HRRTT_L1_L1_L2i00               ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!445) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L2i00                           <-> HRTTR_L1_L1_L2i00               ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!446) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L1_L2_L2i00                           <-> HRRTT_L1_L2_L2i00               ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu26=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!479) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L2_L2i00                           <-> HRTRT_L1_L2_L2i00               ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!480) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L2_L2i00                           <-> HRTTR_L1_L2_L2i00               ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!481) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HRTTT_L2_L2_L2i00                           <-> HRRTT_L2_L2_L2i00               ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu26=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!517) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L2_L2_L2i00                            -> HRRTT_L2_L2_L2i00               ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) # (R!518) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L2_L2_L2i00                           <-> HRTTR_L2_L2_L2i00               ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!519) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTRRR_L1_L1_L2i00                           <-> HRRRR_L1_L1_L2i00               ; fu08=k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu08=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!470) Keq = (k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRR_L1_L1_L2i00                            -> HTRTR_L1_L1_L2i00               ; fu17=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!471) Keq = (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HTRRT_L1_L1_L2i00                           <-> HRRRT_L1_L1_L2i00               ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!460) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L1_L1_L2i00                           <-> HTRRR_L1_L1_L2i00               ; fu03=k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR); bu03=k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!462) Keq = (k_TR * (Gamma ^ Phi_TR * Gamma ^ Phi_TR)) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L1_L1_L2i00                            -> HTRTT_L1_L1_L2i00               ; fu19=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!461) Keq = (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HTRTR_L1_L1_L2i00                           <-> HRRTR_L1_L1_L2i00               ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!463) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRTR_L1_L1_L2i00                           <-> HTRRR_L1_L1_L2i00               ; fu23=k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu23=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!464) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L1_L1_L2i00                           <-> HRRTT_L1_L1_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!447) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L1_L1_L2i00                           <-> HTRRT_L1_L1_L2i00               ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!448) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HTRTT_L1_L1_L2i00                           <-> HTRTR_L1_L1_L2i00               ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!449) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTRR_L1_L2_L2i00                           <-> HRTRR_L1_L2_L2i00               ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!498) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L2_L2i00                            -> HRTRR_L1_L2_L2i00               ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) # (R!500) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L2_L2i00                           <-> HRTRT_L1_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!482) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L2_L2i00                            -> HRTRT_L1_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!484) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L2_L2i00                           <-> HTTRR_L1_L2_L2i00               ; fu05=k_TR * Gamma ^ Phi_TR; bu05=k_RT * (Gamma ^ (Phi_TR - 1)) # (R!485) Keq = (k_TR * Gamma ^ Phi_TR) / (k_RT * (Gamma ^ (Phi_TR - 1)))
HTTTR_L1_L1_L1i00                           <-> HRTTR_L1_L1_L1i00               ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu11=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!420) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L1_L1i00                            -> HRTTR_L1_L1_L1i00               ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!422) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L1_L1i00                            -> HRTTR_L1_L1_L1i00               ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!423) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L1_L2i00                           <-> HRTTR_L1_L1_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!451) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L1_L2i00                           <-> HTRTR_L1_L1_L2i00               ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu11=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!452) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L1_L2i00                            -> HTRTR_L1_L1_L2i00               ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!453) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L2_L2i00                           <-> HRTTR_L1_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!486) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L2_L2i00                            -> HRTTR_L1_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!488) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L2_L2i00                           <-> HTTRR_L1_L2_L2i00               ; fu11=k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu11=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!489) Keq = (k_TR * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L2_L2_L2i00                           <-> HRTTR_L2_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!521) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L2_L2_L2i00                            -> HRTTR_L2_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!523) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L2_L2_L2i00                            -> HRTTR_L2_L2_L2i00               ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!524) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTT_L1_L1_L1i00                           <-> HRTTT_L1_L1_L1i00               ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!405) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1i00                            -> HRTTT_L1_L1_L1i00               ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!408) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1i00                            -> HRTTT_L1_L1_L1i00               ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!407) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1i00                           <-> HTTTR_L1_L1_L1i00               ; fu06=k_TR; bu06=k_RT           # (R!409) Keq = k_TR / k_RT
HTTTT_L1_L1_L2i00                           <-> HRTTT_L1_L1_L2i00               ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!411) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2i00                           <-> HTRTT_L1_L1_L2i00               ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!412) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2i00                            -> HTRTT_L1_L1_L2i00               ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!413) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2i00                           <-> HTTTR_L1_L1_L2i00               ; fu06=k_TR; bu06=k_RT           # (R!414) Keq = k_TR / k_RT
HTTTT_L1_L2_L2i00                           <-> HRTTT_L1_L2_L2i00               ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!474) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2i00                            -> HRTTT_L1_L2_L2i00               ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!476) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2i00                           <-> HTTRT_L1_L2_L2i00               ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!477) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2i00                           <-> HTTTR_L1_L2_L2i00               ; fu06=k_TR; bu06=k_RT           # (R!478) Keq = k_TR / k_RT
HTTTT_L2_L2_L2i00                           <-> HRTTT_L2_L2_L2i00               ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!511) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2i00                            -> HRTTT_L2_L2_L2i00               ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!514) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2i00                            -> HRTTT_L2_L2_L2i00               ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!513) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2i00                           <-> HTTTR_L2_L2_L2i00               ; fu06=k_TR; bu06=k_RT           # (R!515) Keq = k_TR / k_RT
HRRRR_L1_L1_L1_L1i00                         -> HRRRT_L1_L1_L1_L1i00            ; fu27=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!656) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRR_L1_L1_L1_L1i00                         -> HRRRT_L1_L1_L1_L1i00            ; fu15=k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!654) Keq = (k_RT * ((((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRR_L1_L1_L1_L1i00                         -> HRRRT_L1_L1_L1_L1i00            ; fu35=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!657) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRR_L1_L1_L1_L2i00                         -> HRRRT_L1_L1_L1_L2i00            ; fu27=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!684) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRR_L1_L1_L1_L2i00                         -> HRRRT_L1_L1_L1_L2i00            ; fu35=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!685) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRR_L1_L1_L2_L2i00                         -> HRRRT_L1_L1_L2_L2i00            ; fu35=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!721) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRR_L1_L1_L2_L2i00                         -> HRTRR_L1_L1_L2_L2i00            ; fu16=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!719) Keq = (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR))
HRRRR_L1_L2_L2_L2i00                         -> HRRTR_L1_L2_L2_L2i00            ; fu16=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!753) Keq = (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRR_L1_L2_L2_L2i00                         -> HRRTR_L1_L2_L2_L2i00            ; fu28=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!755) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRR_L2_L2_L2_L2i00                         -> HRRRT_L2_L2_L2_L2i00            ; fu16=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!780) Keq = (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRR_L2_L2_L2_L2i00                         -> HRRRT_L2_L2_L2_L2i00            ; fu28=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!782) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRR_L2_L2_L2_L2i00                         -> HRRRT_L2_L2_L2_L2i00            ; fu36=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!783) Keq = (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRT_L1_L1_L1_L1i00                        <-> HRRRR_L1_L1_L1_L1i00            ; fu37=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu37=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!651) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRRT_L1_L1_L1_L1i00                         -> HRRTT_L1_L1_L1_L1i00            ; fu17=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!648) Keq = (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRT_L1_L1_L1_L1i00                         -> HRRTT_L1_L1_L1_L1i00            ; fu29=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!650) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRT_L1_L1_L1_L2i00                        <-> HRRRR_L1_L1_L1_L2i00            ; fu37=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu37=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!676) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRRT_L1_L1_L1_L2i00                         -> HRRTT_L1_L1_L1_L2i00            ; fu29=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!675) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRRT_L1_L1_L2_L2i00                        <-> HRRRR_L1_L1_L2_L2i00            ; fu37=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu37=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!714) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRRT_L1_L1_L2_L2i00                         -> HRTRT_L1_L1_L2_L2i00            ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!712) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRRT_L1_L2_L2_L2i00                        <-> HRRRR_L1_L2_L2_L2i00            ; fu37=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu37=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!748) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRRT_L1_L2_L2_L2i00                         -> HRRTT_L1_L2_L2_L2i00            ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!745) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRT_L1_L2_L2_L2i00                         -> HRRTT_L1_L2_L2_L2i00            ; fu30=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!747) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRT_L2_L2_L2_L2i00                        <-> HRRRR_L2_L2_L2_L2i00            ; fu38=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu38=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!777) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRRRT_L2_L2_L2_L2i00                         -> HRRTT_L2_L2_L2_L2i00            ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!774) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRRT_L2_L2_L2_L2i00                         -> HRRTT_L2_L2_L2_L2i00            ; fu30=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!776) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRTR_L1_L2_L2_L2i00                        <-> HRRRR_L1_L2_L2_L2i00            ; fu32=k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu32=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!751) Keq = (k_TR * (((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRRTR_L1_L2_L2_L2i00                         -> HRTTR_L1_L2_L2_L2i00            ; fu18=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!749) Keq = (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR))
HRRTT_L1_L1_L1_L1i00                        <-> HRRRT_L1_L1_L1_L1i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!645) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L1_L1i00                         -> HRRRT_L1_L1_L1_L1i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!646) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L1_L1i00                         -> HRTTT_L1_L1_L1_L1i00            ; fu19=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!643) Keq = (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRRTT_L1_L1_L1_L2i00                        <-> HRRRT_L1_L1_L1_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!668) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L1_L2i00                         -> HRRRT_L1_L1_L1_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!669) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L2_L2i00                        <-> HRRRT_L1_L1_L2_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!703) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L2_L2i00                         -> HRRRT_L1_L1_L2_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!704) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L1_L2_L2i00                         -> HRTTT_L1_L1_L2_L2i00            ; fu20=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!701) Keq = (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRTT_L1_L2_L2_L2i00                        <-> HRRRT_L1_L2_L2_L2i00            ; fu34=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu34=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!739) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L2_L2_L2i00                        <-> HRRTR_L1_L2_L2_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!740) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRRTT_L1_L2_L2_L2i00                         -> HRTTT_L1_L2_L2_L2i00            ; fu20=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!737) Keq = (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRRTT_L2_L2_L2_L2i00                        <-> HRRRT_L2_L2_L2_L2i00            ; fu34=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu34=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!771) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRRTT_L2_L2_L2_L2i00                         -> HRRRT_L2_L2_L2_L2i00            ; fu34=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) # (R!772) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRRTT_L2_L2_L2_L2i00                         -> HRTTT_L2_L2_L2_L2i00            ; fu20=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!769) Keq = (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)))
HRTRR_L1_L1_L2_L2i00                        <-> HRRRR_L1_L1_L2_L2i00            ; fu22=k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu22=k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!716) Keq = (k_TR * (((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRR_L1_L1_L2_L2i00                         -> HRTRT_L1_L1_L2_L2i00            ; fu29=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!717) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HRTRT_L1_L1_L2_L2i00                        <-> HRRRT_L1_L1_L2_L2i00            ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu24=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!705) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTRT_L1_L1_L2_L2i00                        <-> HRTRR_L1_L1_L2_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!706) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTR_L1_L2_L2_L2i00                        <-> HRRTR_L1_L2_L2_L2i00            ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR); bu24=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!742) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTR_L1_L2_L2_L2i00                         -> HRRTR_L1_L2_L2_L2i00            ; fu24=k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR) # (R!743) Keq = (k_TR * ((Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) * Gamma ^ Phi_TR)) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1_L1i00                        <-> HRRTT_L1_L1_L1_L1i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!639) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1_L1i00                         -> HRRTT_L1_L1_L1_L1i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!640) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1_L1i00                         -> HRRTT_L1_L1_L1_L1i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!641) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1_L2i00                        <-> HRRTT_L1_L1_L1_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!660) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1_L2i00                         -> HRRTT_L1_L1_L1_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!662) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L1_L2i00                         -> HRRTT_L1_L1_L1_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!661) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L2_L2i00                        <-> HRRTT_L1_L1_L2_L2i00            ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu26=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!693) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L2_L2i00                        <-> HRTRT_L1_L1_L2_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!694) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L1_L2_L2i00                         -> HRTRT_L1_L1_L2_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!695) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L2_L2_L2i00                        <-> HRRTT_L1_L2_L2_L2i00            ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu26=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!729) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L2_L2_L2i00                         -> HRRTT_L1_L2_L2_L2i00            ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) # (R!730) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L1_L2_L2_L2i00                        <-> HRTTR_L1_L2_L2_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!731) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HRTTT_L2_L2_L2_L2i00                        <-> HRRTT_L2_L2_L2_L2i00            ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)); bu26=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))) # (R!765) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L2_L2_L2_L2i00                         -> HRRTT_L2_L2_L2_L2i00            ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) # (R!766) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HRTTT_L2_L2_L2_L2i00                         -> HRRTT_L2_L2_L2_L2i00            ; fu26=k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) # (R!767) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1))))
HTRRR_L1_L1_L1_L2i00                        <-> HRRRR_L1_L1_L1_L2i00            ; fu08=k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu08=k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!679) Keq = (k_TR * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRR_L1_L1_L1_L2i00                         -> HTRRT_L1_L1_L1_L2i00            ; fu17=k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!680) Keq = (k_RT * (((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HTRRR_L1_L1_L1_L2i00                         -> HTRRT_L1_L1_L1_L2i00            ; fu29=k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!681) Keq = (k_RT * (((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HTRRT_L1_L1_L1_L2i00                        <-> HRRRT_L1_L1_L1_L2i00            ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!671) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTRRT_L1_L1_L1_L2i00                        <-> HTRRR_L1_L1_L1_L2i00            ; fu33=k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu33=k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!673) Keq = (k_TR * ((Gamma ^ Phi_TR * Gamma ^ Phi_TR) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * (((Gamma ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HTRRT_L1_L1_L1_L2i00                         -> HTRTT_L1_L1_L1_L2i00            ; fu19=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!672) Keq = (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HTRTT_L1_L1_L1_L2i00                        <-> HRRTT_L1_L1_L1_L2i00            ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!664) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTRTT_L1_L1_L1_L2i00                        <-> HTRRT_L1_L1_L1_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!665) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HTRTT_L1_L1_L1_L2i00                         -> HTRRT_L1_L1_L1_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) # (R!666) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HTTRR_L1_L1_L2_L2i00                        <-> HRTRR_L1_L1_L2_L2i00            ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR); bu10=k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))) # (R!708) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L1_L2_L2i00                         -> HRTRR_L1_L1_L2_L2i00            ; fu10=k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR) # (R!710) Keq = (k_TR * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * (((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) * (Gamma ^ (Phi_TR - 1))))
HTTRR_L1_L1_L2_L2i00                         -> HTTRT_L1_L1_L2_L2i00            ; fu19=k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!711) Keq = (k_RT * ((((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1)))) / (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)))
HTTRT_L1_L1_L2_L2i00                        <-> HRTRT_L1_L1_L2_L2i00            ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!696) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L1_L2_L2i00                         -> HRTRT_L1_L1_L2_L2i00            ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!698) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTRT_L1_L1_L2_L2i00                        <-> HTTRR_L1_L1_L2_L2i00            ; fu25=k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)); bu25=k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))) # (R!699) Keq = (k_TR * (Gamma ^ Phi_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR))) / (k_RT * ((Gamma ^ (Phi_TR - 1)) * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1))))
HTTTR_L1_L2_L2_L2i00                        <-> HRTTR_L1_L2_L2_L2i00            ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR); bu12=k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))) # (R!733) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L2_L2_L2i00                         -> HRTTR_L1_L2_L2_L2i00            ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!735) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTR_L1_L2_L2_L2i00                         -> HRTTR_L1_L2_L2_L2i00            ; fu12=k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR) # (R!736) Keq = (k_TR * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) * Gamma ^ Phi_TR)) / (k_RT * ((((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) * (Gamma ^ (Phi_TR - 1))))
HTTTT_L1_L1_L1_L1i00                        <-> HRTTT_L1_L1_L1_L1i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!626) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L1i00                         -> HRTTT_L1_L1_L1_L1i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!629) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L1i00                         -> HRTTT_L1_L1_L1_L1i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!628) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L1i00                         -> HRTTT_L1_L1_L1_L1i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!630) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L2i00                        <-> HRTTT_L1_L1_L1_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!633) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L2i00                        <-> HTRTT_L1_L1_L1_L2i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!634) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L2i00                         -> HTRTT_L1_L1_L1_L2i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!635) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L1_L2i00                         -> HTRTT_L1_L1_L1_L2i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!636) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2_L2i00                        <-> HRTTT_L1_L1_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!687) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2_L2i00                         -> HRTTT_L1_L1_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!689) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2_L2i00                        <-> HTTRT_L1_L1_L2_L2i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!690) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L1_L2_L2i00                         -> HTTRT_L1_L1_L2_L2i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR) # (R!691) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2_L2i00                        <-> HRTTT_L1_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!723) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2_L2i00                         -> HRTTT_L1_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!726) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2_L2i00                         -> HRTTT_L1_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!725) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L1_L2_L2_L2i00                        <-> HTTTR_L1_L2_L2_L2i00            ; fu13=k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR); bu13=k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)) # (R!727) Keq = (k_TR * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ Phi_TR)) / (k_RT * (((kf1_R / kb1_R) / (kf1_T / kb1_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2_L2i00                        <-> HRTTT_L2_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR); bu14=k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)) # (R!758) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2_L2i00                         -> HRTTT_L2_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!760) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2_L2i00                         -> HRTTT_L2_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!761) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))
HTTTT_L2_L2_L2_L2i00                         -> HRTTT_L2_L2_L2_L2i00            ; fu14=k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR) # (R!762) Keq = (k_TR * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ Phi_TR)) / (k_RT * (((kf2_R / kb2_R) / (kf2_T / kb2_T)) ^ (Phi_TR - 1)))


# INITIAL CONCENTRATIONS (compiled from MODEL section)
# ----------------------------------------------------
INIT:
HTTTT = 1
L1 = 0
L2 = 0


# STIMULI (from Stimulus objects)
# ------------------------------------
EQN:
null -> L1; k_source_Stm00_L1=L1_clamp*1000
L1 -> null; k_sink_Stm00_L1=1000
null -> L2; k_source_Stm01_L2=L2_clamp*1000
L2 -> null; k_sink_Stm01_L2=1000

CONFIG:
t_final = 10000


# COMPILED PROBES (from Probe objects)
# ------------------------------------
PROBE:
probe p_R0 = "HTTTT + HTTTT_L1i00 + HTTTT_L2i00 + HTTTT_L1_L1i00 + HTTTT_L1_L2i00 + HTTTT_L2_L2i00 + HTTTT_L1_L1_L1i00 + HTTTT_L1_L1_L2i00 + HTTTT_L1_L2_L2i00 + HTTTT_L2_L2_L2i00 + HTTTT_L1_L1_L1_L1i00 + HTTTT_L1_L1_L1_L2i00 + HTTTT_L1_L1_L2_L2i00 + HTTTT_L1_L2_L2_L2i00 + HTTTT_L2_L2_L2_L2i00"
probe p_R1 = "HRTTT + HRTTT_L1i00 + HTRTT_L1i00 + HRTTT_L2i00 + HTRTT_L2i00 + HRTTT_L1_L1i00 + HTTRT_L1_L1i00 + HRTTT_L1_L2i00 + HTRTT_L1_L2i00 + HTTRT_L1_L2i00 + HRTTT_L2_L2i00 + HTTRT_L2_L2i00 + HRTTT_L1_L1_L1i00 + HTTTR_L1_L1_L1i00 + HRTTT_L1_L1_L2i00 + HTRTT_L1_L1_L2i00 + HTTTR_L1_L1_L2i00 + HRTTT_L1_L2_L2i00 + HTTRT_L1_L2_L2i00 + HTTTR_L1_L2_L2i00 + HRTTT_L2_L2_L2i00 + HTTTR_L2_L2_L2i00 + HRTTT_L1_L1_L1_L1i00 + HRTTT_L1_L1_L1_L2i00 + HTRTT_L1_L1_L1_L2i00 + HRTTT_L1_L1_L2_L2i00 + HTTRT_L1_L1_L2_L2i00 + HRTTT_L1_L2_L2_L2i00 + HTTTR_L1_L2_L2_L2i00 + HRTTT_L2_L2_L2_L2i00"
probe p_R2 = "HRRTT + HRRTT_L1i00 + HTRRT_L1i00 + HRRTT_L2i00 + HTRRT_L2i00 + HRRTT_L1_L1i00 + HRTRT_L1_L1i00 + HTTRR_L1_L1i00 + HRRTT_L1_L2i00 + HRTRT_L1_L2i00 + HTRRT_L1_L2i00 + HTTRR_L1_L2i00 + HRRTT_L2_L2i00 + HRTRT_L2_L2i00 + HTTRR_L2_L2i00 + HRRTT_L1_L1_L1i00 + HRTTR_L1_L1_L1i00 + HRRTT_L1_L1_L2i00 + HRTTR_L1_L1_L2i00 + HTRRT_L1_L1_L2i00 + HTRTR_L1_L1_L2i00 + HRRTT_L1_L2_L2i00 + HRTRT_L1_L2_L2i00 + HRTTR_L1_L2_L2i00 + HTTRR_L1_L2_L2i00 + HRRTT_L2_L2_L2i00 + HRTTR_L2_L2_L2i00 + HRRTT_L1_L1_L1_L1i00 + HRRTT_L1_L1_L1_L2i00 + HTRRT_L1_L1_L1_L2i00 + HRRTT_L1_L1_L2_L2i00 + HRTRT_L1_L1_L2_L2i00 + HTTRR_L1_L1_L2_L2i00 + HRRTT_L1_L2_L2_L2i00 + HRTTR_L1_L2_L2_L2i00 + HRRTT_L2_L2_L2_L2i00"
probe p_R3 = "HRRRT + HRRRT_L1i00 + HTRRR_L1i00 + HRRRT_L2i00 + HTRRR_L2i00 + HRRRT_L1_L1i00 + HRTRR_L1_L1i00 + HRRRT_L1_L2i00 + HRTRR_L1_L2i00 + HTRRR_L1_L2i00 + HRRRT_L2_L2i00 + HRTRR_L2_L2i00 + HRRRT_L1_L1_L1i00 + HRRTR_L1_L1_L1i00 + HRRRT_L1_L1_L2i00 + HRRTR_L1_L1_L2i00 + HTRRR_L1_L1_L2i00 + HRRRT_L1_L2_L2i00 + HRRTR_L1_L2_L2i00 + HRTRR_L1_L2_L2i00 + HRRRT_L2_L2_L2i00 + HRRTR_L2_L2_L2i00 + HRRRT_L1_L1_L1_L1i00 + HRRRT_L1_L1_L1_L2i00 + HTRRR_L1_L1_L1_L2i00 + HRRRT_L1_L1_L2_L2i00 + HRTRR_L1_L1_L2_L2i00 + HRRRT_L1_L2_L2_L2i00 + HRRTR_L1_L2_L2_L2i00 + HRRRT_L2_L2_L2_L2i00"
probe p_R4 = "HRRRR + HRRRR_L1i00 + HRRRR_L2i00 + HRRRR_L1_L1i00 + HRRRR_L1_L2i00 + HRRRR_L2_L2i00 + HRRRR_L1_L1_L1i00 + HRRRR_L1_L1_L2i00 + HRRRR_L1_L2_L2i00 + HRRRR_L2_L2_L2i00 + HRRRR_L1_L1_L1_L1i00 + HRRRR_L1_L1_L1_L2i00 + HRRRR_L1_L1_L2_L2i00 + HRRRR_L1_L2_L2_L2i00 + HRRRR_L2_L2_L2_L2i00"
probe p_L1x0 = "HTTTT + HRTTT + HRRTT + HRRRT + HRRRR + HTTTT_L2i00 + HRTTT_L2i00 + HTRTT_L2i00 + HRRTT_L2i00 + HTRRT_L2i00 + HRRRT_L2i00 + HTRRR_L2i00 + HRRRR_L2i00 + HTTTT_L2_L2i00 + HRTTT_L2_L2i00 + HTTRT_L2_L2i00 + HRRTT_L2_L2i00 + HRTRT_L2_L2i00 + HTTRR_L2_L2i00 + HRRRT_L2_L2i00 + HRTRR_L2_L2i00 + HRRRR_L2_L2i00 + HTTTT_L2_L2_L2i00 + HRTTT_L2_L2_L2i00 + HTTTR_L2_L2_L2i00 + HRRTT_L2_L2_L2i00 + HRTTR_L2_L2_L2i00 + HRRRT_L2_L2_L2i00 + HRRTR_L2_L2_L2i00 + HRRRR_L2_L2_L2i00 + HTTTT_L2_L2_L2_L2i00 + HRTTT_L2_L2_L2_L2i00 + HRRTT_L2_L2_L2_L2i00 + HRRRT_L2_L2_L2_L2i00 + HRRRR_L2_L2_L2_L2i00"
probe p_L1x1 = "HTTTT_L1i00 + HRTTT_L1i00 + HTRTT_L1i00 + HRRTT_L1i00 + HTRRT_L1i00 + HRRRT_L1i00 + HTRRR_L1i00 + HRRRR_L1i00 + HTTTT_L1_L2i00 + HRTTT_L1_L2i00 + HTRTT_L1_L2i00 + HTTRT_L1_L2i00 + HRRTT_L1_L2i00 + HRTRT_L1_L2i00 + HTRRT_L1_L2i00 + HTTRR_L1_L2i00 + HRRRT_L1_L2i00 + HRTRR_L1_L2i00 + HTRRR_L1_L2i00 + HRRRR_L1_L2i00 + HTTTT_L1_L2_L2i00 + HRTTT_L1_L2_L2i00 + HTTRT_L1_L2_L2i00 + HTTTR_L1_L2_L2i00 + HRRTT_L1_L2_L2i00 + HRTRT_L1_L2_L2i00 + HRTTR_L1_L2_L2i00 + HTTRR_L1_L2_L2i00 + HRRRT_L1_L2_L2i00 + HRRTR_L1_L2_L2i00 + HRTRR_L1_L2_L2i00 + HRRRR_L1_L2_L2i00 + HTTTT_L1_L2_L2_L2i00 + HRTTT_L1_L2_L2_L2i00 + HTTTR_L1_L2_L2_L2i00 + HRRTT_L1_L2_L2_L2i00 + HRTTR_L1_L2_L2_L2i00 + HRRRT_L1_L2_L2_L2i00 + HRRTR_L1_L2_L2_L2i00 + HRRRR_L1_L2_L2_L2i00"
probe p_L1x2 = "HTTTT_L1_L1i00 + HRTTT_L1_L1i00 + HTTRT_L1_L1i00 + HRRTT_L1_L1i00 + HRTRT_L1_L1i00 + HTTRR_L1_L1i00 + HRRRT_L1_L1i00 + HRTRR_L1_L1i00 + HRRRR_L1_L1i00 + HTTTT_L1_L1_L2i00 + HRTTT_L1_L1_L2i00 + HTRTT_L1_L1_L2i00 + HTTTR_L1_L1_L2i00 + HRRTT_L1_L1_L2i00 + HRTTR_L1_L1_L2i00 + HTRRT_L1_L1_L2i00 + HTRTR_L1_L1_L2i00 + HRRRT_L1_L1_L2i00 + HRRTR_L1_L1_L2i00 + HTRRR_L1_L1_L2i00 + HRRRR_L1_L1_L2i00 + HTTTT_L1_L1_L2_L2i00 + HRTTT_L1_L1_L2_L2i00 + HTTRT_L1_L1_L2_L2i00 + HRRTT_L1_L1_L2_L2i00 + HRTRT_L1_L1_L2_L2i00 + HTTRR_L1_L1_L2_L2i00 + HRRRT_L1_L1_L2_L2i00 + HRTRR_L1_L1_L2_L2i00 + HRRRR_L1_L1_L2_L2i00"
probe p_L1x3 = "HTTTT_L1_L1_L1i00 + HRTTT_L1_L1_L1i00 + HTTTR_L1_L1_L1i00 + HRRTT_L1_L1_L1i00 + HRTTR_L1_L1_L1i00 + HRRRT_L1_L1_L1i00 + HRRTR_L1_L1_L1i00 + HRRRR_L1_L1_L1i00 + HTTTT_L1_L1_L1_L2i00 + HRTTT_L1_L1_L1_L2i00 + HTRTT_L1_L1_L1_L2i00 + HRRTT_L1_L1_L1_L2i00 + HTRRT_L1_L1_L1_L2i00 + HRRRT_L1_L1_L1_L2i00 + HTRRR_L1_L1_L1_L2i00 + HRRRR_L1_L1_L1_L2i00"
probe p_L1x4 = "HTTTT_L1_L1_L1_L1i00 + HRTTT_L1_L1_L1_L1i00 + HRRTT_L1_L1_L1_L1i00 + HRRRT_L1_L1_L1_L1i00 + HRRRR_L1_L1_L1_L1i00"
probe L1
probe L2


# CONFIG (from CONFIG section)
# ----------------------------
CONFIG:
t_final = 10000
t_vector = [0:1:tf]
ode_event_times = ~
matlab_ode_solver = ode15s
matlab_odeset_options = odeset('InitialStep', 1e-15, 'AbsTol', 1e-48, 'RelTol', 1e-5)
SS_timescale = 100
SS_RelTol = 1e-3
SS_AbsTol = 1e-6
