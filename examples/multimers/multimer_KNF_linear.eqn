# Facile model created by Allosteric Network Compiler (ANC)
# ANC version 1.01 released 2011/08/26
# Thu Aug 25 00:44:22 EDT 2011



# PARAMETERS
# ----------
parameter k_TR = 1
parameter k_RT = 100
parameter Gamma_S01 = 200
parameter Gamma_S12 = 150
parameter Gamma_S23 = 250
parameter Phi_TR = 0.2
parameter kf_T = 1
parameter kb_T = 10
parameter kf_R = 10
parameter kb_R = 1


# REACTION CLASS: BindingReaction
# -------------------------------
HRRRR                + L                    <-> HRRRR_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!92) Kd = kb_R/kf_R
HRRRR                + L                    <-> HRRRR_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!93) Kd = kb_R/kf_R
HRRRR                + L                    <-> HRRRR_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!94) Kd = kb_R/kf_R
HRRRR                + L                    <-> HRRRR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!95) Kd = kb_R/kf_R
HRRRT                + L                    <-> HRRRT_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!76) Kd = kb_R/kf_R
HRRRT                + L                    <-> HRRRT_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!77) Kd = kb_R/kf_R
HRRRT                + L                    <-> HRRRT_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!78) Kd = kb_R/kf_R
HRRRT                + L                    <-> HRRRT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!79) Kd = kb_T/kf_T
HRRTR                + L                    <-> HRRTR_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!80) Kd = kb_R/kf_R
HRRTR                + L                    <-> HRRTR_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!81) Kd = kb_R/kf_R
HRRTR                + L                    <-> HRRTR_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!82) Kd = kb_T/kf_T
HRRTR                + L                    <-> HRRTR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!83) Kd = kb_R/kf_R
HRRTT                + L                    <-> HRRTT_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!52) Kd = kb_R/kf_R
HRRTT                + L                    <-> HRRTT_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!53) Kd = kb_R/kf_R
HRRTT                + L                    <-> HRRTT_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!54) Kd = kb_T/kf_T
HRRTT                + L                    <-> HRRTT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!55) Kd = kb_T/kf_T
HRTRR                + L                    <-> HRTRR_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!84) Kd = kb_R/kf_R
HRTRR                + L                    <-> HRTRR_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!85) Kd = kb_T/kf_T
HRTRR                + L                    <-> HRTRR_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!86) Kd = kb_R/kf_R
HRTRR                + L                    <-> HRTRR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!87) Kd = kb_R/kf_R
HRTRT                + L                    <-> HRTRT_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!56) Kd = kb_R/kf_R
HRTRT                + L                    <-> HRTRT_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!57) Kd = kb_T/kf_T
HRTRT                + L                    <-> HRTRT_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!58) Kd = kb_R/kf_R
HRTRT                + L                    <-> HRTRT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!59) Kd = kb_T/kf_T
HRTTR                + L                    <-> HRTTR_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!60) Kd = kb_R/kf_R
HRTTR                + L                    <-> HRTTR_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!61) Kd = kb_T/kf_T
HRTTR                + L                    <-> HRTTR_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!62) Kd = kb_T/kf_T
HRTTR                + L                    <-> HRTTR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!63) Kd = kb_R/kf_R
HRTTT                + L                    <-> HRTTT_Li00                      ; fb00=kf_R; bb00=kb_R           # (R!36) Kd = kb_R/kf_R
HRTTT                + L                    <-> HRTTT_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!37) Kd = kb_T/kf_T
HRTTT                + L                    <-> HRTTT_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!38) Kd = kb_T/kf_T
HRTTT                + L                    <-> HRTTT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!39) Kd = kb_T/kf_T
HTRRR                + L                    <-> HTRRR_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!88) Kd = kb_T/kf_T
HTRRR                + L                    <-> HTRRR_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!89) Kd = kb_R/kf_R
HTRRR                + L                    <-> HTRRR_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!90) Kd = kb_R/kf_R
HTRRR                + L                    <-> HTRRR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!91) Kd = kb_R/kf_R
HTRRT                + L                    <-> HTRRT_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!64) Kd = kb_T/kf_T
HTRRT                + L                    <-> HTRRT_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!65) Kd = kb_R/kf_R
HTRRT                + L                    <-> HTRRT_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!66) Kd = kb_R/kf_R
HTRRT                + L                    <-> HTRRT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!67) Kd = kb_T/kf_T
HTRTR                + L                    <-> HTRTR_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!68) Kd = kb_T/kf_T
HTRTR                + L                    <-> HTRTR_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!69) Kd = kb_R/kf_R
HTRTR                + L                    <-> HTRTR_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!70) Kd = kb_T/kf_T
HTRTR                + L                    <-> HTRTR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!71) Kd = kb_R/kf_R
HTRTT                + L                    <-> HTRTT_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!40) Kd = kb_T/kf_T
HTRTT                + L                    <-> HTRTT_Li01                      ; fb00=kf_R; bb00=kb_R           # (R!41) Kd = kb_R/kf_R
HTRTT                + L                    <-> HTRTT_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!42) Kd = kb_T/kf_T
HTRTT                + L                    <-> HTRTT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!43) Kd = kb_T/kf_T
HTTRR                + L                    <-> HTTRR_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!72) Kd = kb_T/kf_T
HTTRR                + L                    <-> HTTRR_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!73) Kd = kb_T/kf_T
HTTRR                + L                    <-> HTTRR_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!74) Kd = kb_R/kf_R
HTTRR                + L                    <-> HTTRR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!75) Kd = kb_R/kf_R
HTTRT                + L                    <-> HTTRT_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!44) Kd = kb_T/kf_T
HTTRT                + L                    <-> HTTRT_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!45) Kd = kb_T/kf_T
HTTRT                + L                    <-> HTTRT_Li02                      ; fb00=kf_R; bb00=kb_R           # (R!46) Kd = kb_R/kf_R
HTTRT                + L                    <-> HTTRT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!47) Kd = kb_T/kf_T
HTTTR                + L                    <-> HTTTR_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!48) Kd = kb_T/kf_T
HTTTR                + L                    <-> HTTTR_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!49) Kd = kb_T/kf_T
HTTTR                + L                    <-> HTTTR_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!50) Kd = kb_T/kf_T
HTTTR                + L                    <-> HTTTR_Li03                      ; fb00=kf_R; bb00=kb_R           # (R!51) Kd = kb_R/kf_R
HTTTT                + L                    <-> HTTTT_Li00                      ; fb01=kf_T; bb01=kb_T           # (R!32) Kd = kb_T/kf_T
HTTTT                + L                    <-> HTTTT_Li01                      ; fb01=kf_T; bb01=kb_T           # (R!33) Kd = kb_T/kf_T
HTTTT                + L                    <-> HTTTT_Li02                      ; fb01=kf_T; bb01=kb_T           # (R!34) Kd = kb_T/kf_T
HTTTT                + L                    <-> HTTTT_Li03                      ; fb01=kf_T; bb01=kb_T           # (R!35) Kd = kb_T/kf_T
L                    + HRRRR_Li00           <-> HRRRR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!404) Kd = kb_R/kf_R
L                    + HRRRR_Li00           <-> HRRRR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!405) Kd = kb_R/kf_R
L                    + HRRRR_Li00           <-> HRRRR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!406) Kd = kb_R/kf_R
L                    + HRRRR_Li01           <-> HRRRR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!407) Kd = kb_R/kf_R
L                    + HRRRR_Li01           <-> HRRRR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!408) Kd = kb_R/kf_R
L                    + HRRRR_Li01           <-> HRRRR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!409) Kd = kb_R/kf_R
L                    + HRRRR_Li02           <-> HRRRR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!410) Kd = kb_R/kf_R
L                    + HRRRR_Li02           <-> HRRRR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!411) Kd = kb_R/kf_R
L                    + HRRRR_Li02           <-> HRRRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!412) Kd = kb_R/kf_R
L                    + HRRRR_Li03           <-> HRRRR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!413) Kd = kb_R/kf_R
L                    + HRRRR_Li03           <-> HRRRR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!414) Kd = kb_R/kf_R
L                    + HRRRR_Li03           <-> HRRRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!415) Kd = kb_R/kf_R
L                    + HRRRT_Li00           <-> HRRRT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!356) Kd = kb_R/kf_R
L                    + HRRRT_Li00           <-> HRRRT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!357) Kd = kb_R/kf_R
L                    + HRRRT_Li00           <-> HRRRT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!358) Kd = kb_T/kf_T
L                    + HRRRT_Li01           <-> HRRRT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!359) Kd = kb_R/kf_R
L                    + HRRRT_Li01           <-> HRRRT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!360) Kd = kb_R/kf_R
L                    + HRRRT_Li01           <-> HRRRT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!361) Kd = kb_T/kf_T
L                    + HRRRT_Li02           <-> HRRRT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!362) Kd = kb_R/kf_R
L                    + HRRRT_Li02           <-> HRRRT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!363) Kd = kb_R/kf_R
L                    + HRRRT_Li02           <-> HRRRT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!364) Kd = kb_T/kf_T
L                    + HRRRT_Li03           <-> HRRRT_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!365) Kd = kb_R/kf_R
L                    + HRRRT_Li03           <-> HRRRT_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!366) Kd = kb_R/kf_R
L                    + HRRRT_Li03           <-> HRRRT_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!367) Kd = kb_R/kf_R
L                    + HRRTR_Li00           <-> HRRTR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!368) Kd = kb_R/kf_R
L                    + HRRTR_Li00           <-> HRRTR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!369) Kd = kb_T/kf_T
L                    + HRRTR_Li00           <-> HRRTR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!370) Kd = kb_R/kf_R
L                    + HRRTR_Li01           <-> HRRTR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!371) Kd = kb_R/kf_R
L                    + HRRTR_Li01           <-> HRRTR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!372) Kd = kb_T/kf_T
L                    + HRRTR_Li01           <-> HRRTR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!373) Kd = kb_R/kf_R
L                    + HRRTR_Li02           <-> HRRTR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!374) Kd = kb_R/kf_R
L                    + HRRTR_Li02           <-> HRRTR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!375) Kd = kb_R/kf_R
L                    + HRRTR_Li02           <-> HRRTR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!376) Kd = kb_R/kf_R
L                    + HRRTR_Li03           <-> HRRTR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!377) Kd = kb_R/kf_R
L                    + HRRTR_Li03           <-> HRRTR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!378) Kd = kb_R/kf_R
L                    + HRRTR_Li03           <-> HRRTR_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!379) Kd = kb_T/kf_T
L                    + HRRTT_Li00           <-> HRRTT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!284) Kd = kb_R/kf_R
L                    + HRRTT_Li00           <-> HRRTT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!285) Kd = kb_T/kf_T
L                    + HRRTT_Li00           <-> HRRTT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!286) Kd = kb_T/kf_T
L                    + HRRTT_Li01           <-> HRRTT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!287) Kd = kb_R/kf_R
L                    + HRRTT_Li01           <-> HRRTT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!288) Kd = kb_T/kf_T
L                    + HRRTT_Li01           <-> HRRTT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!289) Kd = kb_T/kf_T
L                    + HRRTT_Li02           <-> HRRTT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!290) Kd = kb_R/kf_R
L                    + HRRTT_Li02           <-> HRRTT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!291) Kd = kb_R/kf_R
L                    + HRRTT_Li02           <-> HRRTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!292) Kd = kb_T/kf_T
L                    + HRRTT_Li03           <-> HRRTT_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!293) Kd = kb_R/kf_R
L                    + HRRTT_Li03           <-> HRRTT_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!294) Kd = kb_R/kf_R
L                    + HRRTT_Li03           <-> HRRTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!295) Kd = kb_T/kf_T
L                    + HRTRR_Li00           <-> HRTRR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!380) Kd = kb_T/kf_T
L                    + HRTRR_Li00           <-> HRTRR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!381) Kd = kb_R/kf_R
L                    + HRTRR_Li00           <-> HRTRR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!382) Kd = kb_R/kf_R
L                    + HRTRR_Li01           <-> HRTRR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!383) Kd = kb_R/kf_R
L                    + HRTRR_Li01           <-> HRTRR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!384) Kd = kb_R/kf_R
L                    + HRTRR_Li01           <-> HRTRR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!385) Kd = kb_R/kf_R
L                    + HRTRR_Li02           <-> HRTRR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!386) Kd = kb_R/kf_R
L                    + HRTRR_Li02           <-> HRTRR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!387) Kd = kb_T/kf_T
L                    + HRTRR_Li02           <-> HRTRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!388) Kd = kb_R/kf_R
L                    + HRTRR_Li03           <-> HRTRR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!389) Kd = kb_R/kf_R
L                    + HRTRR_Li03           <-> HRTRR_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!390) Kd = kb_T/kf_T
L                    + HRTRR_Li03           <-> HRTRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!391) Kd = kb_R/kf_R
L                    + HRTRT_Li00           <-> HRTRT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!296) Kd = kb_T/kf_T
L                    + HRTRT_Li00           <-> HRTRT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!297) Kd = kb_R/kf_R
L                    + HRTRT_Li00           <-> HRTRT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!298) Kd = kb_T/kf_T
L                    + HRTRT_Li01           <-> HRTRT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!299) Kd = kb_R/kf_R
L                    + HRTRT_Li01           <-> HRTRT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!300) Kd = kb_R/kf_R
L                    + HRTRT_Li01           <-> HRTRT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!301) Kd = kb_T/kf_T
L                    + HRTRT_Li02           <-> HRTRT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!302) Kd = kb_R/kf_R
L                    + HRTRT_Li02           <-> HRTRT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!303) Kd = kb_T/kf_T
L                    + HRTRT_Li02           <-> HRTRT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!304) Kd = kb_T/kf_T
L                    + HRTRT_Li03           <-> HRTRT_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!305) Kd = kb_R/kf_R
L                    + HRTRT_Li03           <-> HRTRT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!306) Kd = kb_T/kf_T
L                    + HRTRT_Li03           <-> HRTRT_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!307) Kd = kb_R/kf_R
L                    + HRTTR_Li00           <-> HRTTR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!308) Kd = kb_T/kf_T
L                    + HRTTR_Li00           <-> HRTTR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!309) Kd = kb_T/kf_T
L                    + HRTTR_Li00           <-> HRTTR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!310) Kd = kb_R/kf_R
L                    + HRTTR_Li01           <-> HRTTR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!311) Kd = kb_R/kf_R
L                    + HRTTR_Li01           <-> HRTTR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!312) Kd = kb_T/kf_T
L                    + HRTTR_Li01           <-> HRTTR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!313) Kd = kb_R/kf_R
L                    + HRTTR_Li02           <-> HRTTR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!314) Kd = kb_R/kf_R
L                    + HRTTR_Li02           <-> HRTTR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!315) Kd = kb_T/kf_T
L                    + HRTTR_Li02           <-> HRTTR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!316) Kd = kb_R/kf_R
L                    + HRTTR_Li03           <-> HRTTR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!317) Kd = kb_R/kf_R
L                    + HRTTR_Li03           <-> HRTTR_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!318) Kd = kb_T/kf_T
L                    + HRTTR_Li03           <-> HRTTR_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!319) Kd = kb_T/kf_T
L                    + HRTTT_Li00           <-> HRTTT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!236) Kd = kb_T/kf_T
L                    + HRTTT_Li00           <-> HRTTT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!237) Kd = kb_T/kf_T
L                    + HRTTT_Li00           <-> HRTTT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!238) Kd = kb_T/kf_T
L                    + HRTTT_Li01           <-> HRTTT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!239) Kd = kb_R/kf_R
L                    + HRTTT_Li01           <-> HRTTT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!240) Kd = kb_T/kf_T
L                    + HRTTT_Li01           <-> HRTTT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!241) Kd = kb_T/kf_T
L                    + HRTTT_Li02           <-> HRTTT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!242) Kd = kb_R/kf_R
L                    + HRTTT_Li02           <-> HRTTT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!243) Kd = kb_T/kf_T
L                    + HRTTT_Li02           <-> HRTTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!244) Kd = kb_T/kf_T
L                    + HRTTT_Li03           <-> HRTTT_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!245) Kd = kb_R/kf_R
L                    + HRTTT_Li03           <-> HRTTT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!246) Kd = kb_T/kf_T
L                    + HRTTT_Li03           <-> HRTTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!247) Kd = kb_T/kf_T
L                    + HTRRR_Li00           <-> HTRRR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!392) Kd = kb_R/kf_R
L                    + HTRRR_Li00           <-> HTRRR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!393) Kd = kb_R/kf_R
L                    + HTRRR_Li00           <-> HTRRR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!394) Kd = kb_R/kf_R
L                    + HTRRR_Li01           <-> HTRRR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!395) Kd = kb_T/kf_T
L                    + HTRRR_Li01           <-> HTRRR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!396) Kd = kb_R/kf_R
L                    + HTRRR_Li01           <-> HTRRR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!397) Kd = kb_R/kf_R
L                    + HTRRR_Li02           <-> HTRRR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!398) Kd = kb_T/kf_T
L                    + HTRRR_Li02           <-> HTRRR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!399) Kd = kb_R/kf_R
L                    + HTRRR_Li02           <-> HTRRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!400) Kd = kb_R/kf_R
L                    + HTRRR_Li03           <-> HTRRR_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!401) Kd = kb_T/kf_T
L                    + HTRRR_Li03           <-> HTRRR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!402) Kd = kb_R/kf_R
L                    + HTRRR_Li03           <-> HTRRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!403) Kd = kb_R/kf_R
L                    + HTRRT_Li00           <-> HTRRT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!320) Kd = kb_R/kf_R
L                    + HTRRT_Li00           <-> HTRRT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!321) Kd = kb_R/kf_R
L                    + HTRRT_Li00           <-> HTRRT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!322) Kd = kb_T/kf_T
L                    + HTRRT_Li01           <-> HTRRT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!323) Kd = kb_T/kf_T
L                    + HTRRT_Li01           <-> HTRRT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!324) Kd = kb_R/kf_R
L                    + HTRRT_Li01           <-> HTRRT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!325) Kd = kb_T/kf_T
L                    + HTRRT_Li02           <-> HTRRT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!326) Kd = kb_T/kf_T
L                    + HTRRT_Li02           <-> HTRRT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!327) Kd = kb_R/kf_R
L                    + HTRRT_Li02           <-> HTRRT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!328) Kd = kb_T/kf_T
L                    + HTRRT_Li03           <-> HTRRT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!329) Kd = kb_T/kf_T
L                    + HTRRT_Li03           <-> HTRRT_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!330) Kd = kb_R/kf_R
L                    + HTRRT_Li03           <-> HTRRT_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!331) Kd = kb_R/kf_R
L                    + HTRTR_Li00           <-> HTRTR_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!332) Kd = kb_R/kf_R
L                    + HTRTR_Li00           <-> HTRTR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!333) Kd = kb_T/kf_T
L                    + HTRTR_Li00           <-> HTRTR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!334) Kd = kb_R/kf_R
L                    + HTRTR_Li01           <-> HTRTR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!335) Kd = kb_T/kf_T
L                    + HTRTR_Li01           <-> HTRTR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!336) Kd = kb_T/kf_T
L                    + HTRTR_Li01           <-> HTRTR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!337) Kd = kb_R/kf_R
L                    + HTRTR_Li02           <-> HTRTR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!338) Kd = kb_T/kf_T
L                    + HTRTR_Li02           <-> HTRTR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!339) Kd = kb_R/kf_R
L                    + HTRTR_Li02           <-> HTRTR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!340) Kd = kb_R/kf_R
L                    + HTRTR_Li03           <-> HTRTR_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!341) Kd = kb_T/kf_T
L                    + HTRTR_Li03           <-> HTRTR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!342) Kd = kb_R/kf_R
L                    + HTRTR_Li03           <-> HTRTR_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!343) Kd = kb_T/kf_T
L                    + HTRTT_Li00           <-> HTRTT_L_Li00                    ; fb00=kf_R; bb00=kb_R           # (R!248) Kd = kb_R/kf_R
L                    + HTRTT_Li00           <-> HTRTT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!249) Kd = kb_T/kf_T
L                    + HTRTT_Li00           <-> HTRTT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!250) Kd = kb_T/kf_T
L                    + HTRTT_Li01           <-> HTRTT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!251) Kd = kb_T/kf_T
L                    + HTRTT_Li01           <-> HTRTT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!252) Kd = kb_T/kf_T
L                    + HTRTT_Li01           <-> HTRTT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!253) Kd = kb_T/kf_T
L                    + HTRTT_Li02           <-> HTRTT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!254) Kd = kb_T/kf_T
L                    + HTRTT_Li02           <-> HTRTT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!255) Kd = kb_R/kf_R
L                    + HTRTT_Li02           <-> HTRTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!256) Kd = kb_T/kf_T
L                    + HTRTT_Li03           <-> HTRTT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!257) Kd = kb_T/kf_T
L                    + HTRTT_Li03           <-> HTRTT_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!258) Kd = kb_R/kf_R
L                    + HTRTT_Li03           <-> HTRTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!259) Kd = kb_T/kf_T
L                    + HTTRR_Li00           <-> HTTRR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!344) Kd = kb_T/kf_T
L                    + HTTRR_Li00           <-> HTTRR_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!345) Kd = kb_R/kf_R
L                    + HTTRR_Li00           <-> HTTRR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!346) Kd = kb_R/kf_R
L                    + HTTRR_Li01           <-> HTTRR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!347) Kd = kb_T/kf_T
L                    + HTTRR_Li01           <-> HTTRR_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!348) Kd = kb_R/kf_R
L                    + HTTRR_Li01           <-> HTTRR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!349) Kd = kb_R/kf_R
L                    + HTTRR_Li02           <-> HTTRR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!350) Kd = kb_T/kf_T
L                    + HTTRR_Li02           <-> HTTRR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!351) Kd = kb_T/kf_T
L                    + HTTRR_Li02           <-> HTTRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!352) Kd = kb_R/kf_R
L                    + HTTRR_Li03           <-> HTTRR_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!353) Kd = kb_T/kf_T
L                    + HTTRR_Li03           <-> HTTRR_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!354) Kd = kb_T/kf_T
L                    + HTTRR_Li03           <-> HTTRR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!355) Kd = kb_R/kf_R
L                    + HTTRT_Li00           <-> HTTRT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!260) Kd = kb_T/kf_T
L                    + HTTRT_Li00           <-> HTTRT_L_Li01                    ; fb00=kf_R; bb00=kb_R           # (R!261) Kd = kb_R/kf_R
L                    + HTTRT_Li00           <-> HTTRT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!262) Kd = kb_T/kf_T
L                    + HTTRT_Li01           <-> HTTRT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!263) Kd = kb_T/kf_T
L                    + HTTRT_Li01           <-> HTTRT_L_Li03                    ; fb00=kf_R; bb00=kb_R           # (R!264) Kd = kb_R/kf_R
L                    + HTTRT_Li01           <-> HTTRT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!265) Kd = kb_T/kf_T
L                    + HTTRT_Li02           <-> HTTRT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!266) Kd = kb_T/kf_T
L                    + HTTRT_Li02           <-> HTTRT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!267) Kd = kb_T/kf_T
L                    + HTTRT_Li02           <-> HTTRT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!268) Kd = kb_T/kf_T
L                    + HTTRT_Li03           <-> HTTRT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!269) Kd = kb_T/kf_T
L                    + HTTRT_Li03           <-> HTTRT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!270) Kd = kb_T/kf_T
L                    + HTTRT_Li03           <-> HTTRT_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!271) Kd = kb_R/kf_R
L                    + HTTTR_Li00           <-> HTTTR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!272) Kd = kb_T/kf_T
L                    + HTTTR_Li00           <-> HTTTR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!273) Kd = kb_T/kf_T
L                    + HTTTR_Li00           <-> HTTTR_L_Li02                    ; fb00=kf_R; bb00=kb_R           # (R!274) Kd = kb_R/kf_R
L                    + HTTTR_Li01           <-> HTTTR_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!275) Kd = kb_T/kf_T
L                    + HTTTR_Li01           <-> HTTTR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!276) Kd = kb_T/kf_T
L                    + HTTTR_Li01           <-> HTTTR_L_Li04                    ; fb00=kf_R; bb00=kb_R           # (R!277) Kd = kb_R/kf_R
L                    + HTTTR_Li02           <-> HTTTR_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!278) Kd = kb_T/kf_T
L                    + HTTTR_Li02           <-> HTTTR_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!279) Kd = kb_T/kf_T
L                    + HTTTR_Li02           <-> HTTTR_L_Li05                    ; fb00=kf_R; bb00=kb_R           # (R!280) Kd = kb_R/kf_R
L                    + HTTTR_Li03           <-> HTTTR_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!281) Kd = kb_T/kf_T
L                    + HTTTR_Li03           <-> HTTTR_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!282) Kd = kb_T/kf_T
L                    + HTTTR_Li03           <-> HTTTR_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!283) Kd = kb_T/kf_T
L                    + HTTTT_Li00           <-> HTTTT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!224) Kd = kb_T/kf_T
L                    + HTTTT_Li00           <-> HTTTT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!225) Kd = kb_T/kf_T
L                    + HTTTT_Li00           <-> HTTTT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!226) Kd = kb_T/kf_T
L                    + HTTTT_Li01           <-> HTTTT_L_Li00                    ; fb01=kf_T; bb01=kb_T           # (R!227) Kd = kb_T/kf_T
L                    + HTTTT_Li01           <-> HTTTT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!228) Kd = kb_T/kf_T
L                    + HTTTT_Li01           <-> HTTTT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!229) Kd = kb_T/kf_T
L                    + HTTTT_Li02           <-> HTTTT_L_Li01                    ; fb01=kf_T; bb01=kb_T           # (R!230) Kd = kb_T/kf_T
L                    + HTTTT_Li02           <-> HTTTT_L_Li03                    ; fb01=kf_T; bb01=kb_T           # (R!231) Kd = kb_T/kf_T
L                    + HTTTT_Li02           <-> HTTTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!232) Kd = kb_T/kf_T
L                    + HTTTT_Li03           <-> HTTTT_L_Li02                    ; fb01=kf_T; bb01=kb_T           # (R!233) Kd = kb_T/kf_T
L                    + HTTTT_Li03           <-> HTTTT_L_Li04                    ; fb01=kf_T; bb01=kb_T           # (R!234) Kd = kb_T/kf_T
L                    + HTTTT_Li03           <-> HTTTT_L_Li05                    ; fb01=kf_T; bb01=kb_T           # (R!235) Kd = kb_T/kf_T
L                    + HRRRR_L_Li00         <-> HRRRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!788) Kd = kb_R/kf_R
L                    + HRRRR_L_Li00         <-> HRRRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!789) Kd = kb_R/kf_R
L                    + HRRRR_L_Li01         <-> HRRRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!790) Kd = kb_R/kf_R
L                    + HRRRR_L_Li01         <-> HRRRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!791) Kd = kb_R/kf_R
L                    + HRRRR_L_Li02         <-> HRRRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!792) Kd = kb_R/kf_R
L                    + HRRRR_L_Li02         <-> HRRRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!793) Kd = kb_R/kf_R
L                    + HRRRR_L_Li03         <-> HRRRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!794) Kd = kb_R/kf_R
L                    + HRRRR_L_Li03         <-> HRRRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!795) Kd = kb_R/kf_R
L                    + HRRRR_L_Li04         <-> HRRRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!796) Kd = kb_R/kf_R
L                    + HRRRR_L_Li04         <-> HRRRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!797) Kd = kb_R/kf_R
L                    + HRRRR_L_Li05         <-> HRRRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!798) Kd = kb_R/kf_R
L                    + HRRRR_L_Li05         <-> HRRRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!799) Kd = kb_R/kf_R
L                    + HRRRT_L_Li00         <-> HRRRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!740) Kd = kb_R/kf_R
L                    + HRRRT_L_Li00         <-> HRRRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!741) Kd = kb_T/kf_T
L                    + HRRRT_L_Li01         <-> HRRRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!742) Kd = kb_R/kf_R
L                    + HRRRT_L_Li01         <-> HRRRT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!743) Kd = kb_T/kf_T
L                    + HRRRT_L_Li02         <-> HRRRT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!744) Kd = kb_R/kf_R
L                    + HRRRT_L_Li02         <-> HRRRT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!745) Kd = kb_R/kf_R
L                    + HRRRT_L_Li03         <-> HRRRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!746) Kd = kb_R/kf_R
L                    + HRRRT_L_Li03         <-> HRRRT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!747) Kd = kb_T/kf_T
L                    + HRRRT_L_Li04         <-> HRRRT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!748) Kd = kb_R/kf_R
L                    + HRRRT_L_Li04         <-> HRRRT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!749) Kd = kb_R/kf_R
L                    + HRRRT_L_Li05         <-> HRRRT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!750) Kd = kb_R/kf_R
L                    + HRRRT_L_Li05         <-> HRRRT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!751) Kd = kb_R/kf_R
L                    + HRRTR_L_Li00         <-> HRRTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!752) Kd = kb_T/kf_T
L                    + HRRTR_L_Li00         <-> HRRTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!753) Kd = kb_R/kf_R
L                    + HRRTR_L_Li01         <-> HRRTR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!754) Kd = kb_R/kf_R
L                    + HRRTR_L_Li01         <-> HRRTR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!755) Kd = kb_R/kf_R
L                    + HRRTR_L_Li02         <-> HRRTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!756) Kd = kb_R/kf_R
L                    + HRRTR_L_Li02         <-> HRRTR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!757) Kd = kb_T/kf_T
L                    + HRRTR_L_Li03         <-> HRRTR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!758) Kd = kb_R/kf_R
L                    + HRRTR_L_Li03         <-> HRRTR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!759) Kd = kb_R/kf_R
L                    + HRRTR_L_Li04         <-> HRRTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!760) Kd = kb_R/kf_R
L                    + HRRTR_L_Li04         <-> HRRTR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!761) Kd = kb_T/kf_T
L                    + HRRTR_L_Li05         <-> HRRTR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!762) Kd = kb_R/kf_R
L                    + HRRTR_L_Li05         <-> HRRTR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!763) Kd = kb_R/kf_R
L                    + HRRTT_L_Li00         <-> HRRTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!668) Kd = kb_T/kf_T
L                    + HRRTT_L_Li00         <-> HRRTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!669) Kd = kb_T/kf_T
L                    + HRRTT_L_Li01         <-> HRRTT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!670) Kd = kb_R/kf_R
L                    + HRRTT_L_Li01         <-> HRRTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!671) Kd = kb_T/kf_T
L                    + HRRTT_L_Li02         <-> HRRTT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!672) Kd = kb_R/kf_R
L                    + HRRTT_L_Li02         <-> HRRTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!673) Kd = kb_T/kf_T
L                    + HRRTT_L_Li03         <-> HRRTT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!674) Kd = kb_R/kf_R
L                    + HRRTT_L_Li03         <-> HRRTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!675) Kd = kb_T/kf_T
L                    + HRRTT_L_Li04         <-> HRRTT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!676) Kd = kb_R/kf_R
L                    + HRRTT_L_Li04         <-> HRRTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!677) Kd = kb_T/kf_T
L                    + HRRTT_L_Li05         <-> HRRTT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!678) Kd = kb_R/kf_R
L                    + HRRTT_L_Li05         <-> HRRTT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!679) Kd = kb_R/kf_R
L                    + HRTRR_L_Li00         <-> HRTRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!764) Kd = kb_R/kf_R
L                    + HRTRR_L_Li00         <-> HRTRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!765) Kd = kb_R/kf_R
L                    + HRTRR_L_Li01         <-> HRTRR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!766) Kd = kb_T/kf_T
L                    + HRTRR_L_Li01         <-> HRTRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!767) Kd = kb_R/kf_R
L                    + HRTRR_L_Li02         <-> HRTRR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!768) Kd = kb_T/kf_T
L                    + HRTRR_L_Li02         <-> HRTRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!769) Kd = kb_R/kf_R
L                    + HRTRR_L_Li03         <-> HRTRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!770) Kd = kb_R/kf_R
L                    + HRTRR_L_Li03         <-> HRTRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!771) Kd = kb_R/kf_R
L                    + HRTRR_L_Li04         <-> HRTRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!772) Kd = kb_R/kf_R
L                    + HRTRR_L_Li04         <-> HRTRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!773) Kd = kb_R/kf_R
L                    + HRTRR_L_Li05         <-> HRTRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!774) Kd = kb_R/kf_R
L                    + HRTRR_L_Li05         <-> HRTRR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!775) Kd = kb_T/kf_T
L                    + HRTRT_L_Li00         <-> HRTRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!680) Kd = kb_R/kf_R
L                    + HRTRT_L_Li00         <-> HRTRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!681) Kd = kb_T/kf_T
L                    + HRTRT_L_Li01         <-> HRTRT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!682) Kd = kb_T/kf_T
L                    + HRTRT_L_Li01         <-> HRTRT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!683) Kd = kb_T/kf_T
L                    + HRTRT_L_Li02         <-> HRTRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!684) Kd = kb_T/kf_T
L                    + HRTRT_L_Li02         <-> HRTRT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!685) Kd = kb_R/kf_R
L                    + HRTRT_L_Li03         <-> HRTRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!686) Kd = kb_R/kf_R
L                    + HRTRT_L_Li03         <-> HRTRT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!687) Kd = kb_T/kf_T
L                    + HRTRT_L_Li04         <-> HRTRT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!688) Kd = kb_R/kf_R
L                    + HRTRT_L_Li04         <-> HRTRT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!689) Kd = kb_R/kf_R
L                    + HRTRT_L_Li05         <-> HRTRT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!690) Kd = kb_R/kf_R
L                    + HRTRT_L_Li05         <-> HRTRT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!691) Kd = kb_T/kf_T
L                    + HRTTR_L_Li00         <-> HRTTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!692) Kd = kb_T/kf_T
L                    + HRTTR_L_Li00         <-> HRTTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!693) Kd = kb_R/kf_R
L                    + HRTTR_L_Li01         <-> HRTTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!694) Kd = kb_T/kf_T
L                    + HRTTR_L_Li01         <-> HRTTR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!695) Kd = kb_R/kf_R
L                    + HRTTR_L_Li02         <-> HRTTR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!696) Kd = kb_T/kf_T
L                    + HRTTR_L_Li02         <-> HRTTR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!697) Kd = kb_T/kf_T
L                    + HRTTR_L_Li03         <-> HRTTR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!698) Kd = kb_R/kf_R
L                    + HRTTR_L_Li03         <-> HRTTR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!699) Kd = kb_R/kf_R
L                    + HRTTR_L_Li04         <-> HRTTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!700) Kd = kb_R/kf_R
L                    + HRTTR_L_Li04         <-> HRTTR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!701) Kd = kb_T/kf_T
L                    + HRTTR_L_Li05         <-> HRTTR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!702) Kd = kb_R/kf_R
L                    + HRTTR_L_Li05         <-> HRTTR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!703) Kd = kb_T/kf_T
L                    + HRTTT_L_Li00         <-> HRTTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!620) Kd = kb_T/kf_T
L                    + HRTTT_L_Li00         <-> HRTTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!621) Kd = kb_T/kf_T
L                    + HRTTT_L_Li01         <-> HRTTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!622) Kd = kb_T/kf_T
L                    + HRTTT_L_Li01         <-> HRTTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!623) Kd = kb_T/kf_T
L                    + HRTTT_L_Li02         <-> HRTTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!624) Kd = kb_T/kf_T
L                    + HRTTT_L_Li02         <-> HRTTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!625) Kd = kb_T/kf_T
L                    + HRTTT_L_Li03         <-> HRTTT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!626) Kd = kb_R/kf_R
L                    + HRTTT_L_Li03         <-> HRTTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!627) Kd = kb_T/kf_T
L                    + HRTTT_L_Li04         <-> HRTTT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!628) Kd = kb_R/kf_R
L                    + HRTTT_L_Li04         <-> HRTTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!629) Kd = kb_T/kf_T
L                    + HRTTT_L_Li05         <-> HRTTT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!630) Kd = kb_R/kf_R
L                    + HRTTT_L_Li05         <-> HRTTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!631) Kd = kb_T/kf_T
L                    + HTRRR_L_Li00         <-> HTRRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!776) Kd = kb_R/kf_R
L                    + HTRRR_L_Li00         <-> HTRRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!777) Kd = kb_R/kf_R
L                    + HTRRR_L_Li01         <-> HTRRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!778) Kd = kb_R/kf_R
L                    + HTRRR_L_Li01         <-> HTRRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!779) Kd = kb_R/kf_R
L                    + HTRRR_L_Li02         <-> HTRRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!780) Kd = kb_R/kf_R
L                    + HTRRR_L_Li02         <-> HTRRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!781) Kd = kb_R/kf_R
L                    + HTRRR_L_Li03         <-> HTRRR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!782) Kd = kb_T/kf_T
L                    + HTRRR_L_Li03         <-> HTRRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!783) Kd = kb_R/kf_R
L                    + HTRRR_L_Li04         <-> HTRRR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!784) Kd = kb_T/kf_T
L                    + HTRRR_L_Li04         <-> HTRRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!785) Kd = kb_R/kf_R
L                    + HTRRR_L_Li05         <-> HTRRR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!786) Kd = kb_T/kf_T
L                    + HTRRR_L_Li05         <-> HTRRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!787) Kd = kb_R/kf_R
L                    + HTRRT_L_Li00         <-> HTRRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!704) Kd = kb_R/kf_R
L                    + HTRRT_L_Li00         <-> HTRRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!705) Kd = kb_T/kf_T
L                    + HTRRT_L_Li01         <-> HTRRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!706) Kd = kb_R/kf_R
L                    + HTRRT_L_Li01         <-> HTRRT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!707) Kd = kb_T/kf_T
L                    + HTRRT_L_Li02         <-> HTRRT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!708) Kd = kb_R/kf_R
L                    + HTRRT_L_Li02         <-> HTRRT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!709) Kd = kb_R/kf_R
L                    + HTRRT_L_Li03         <-> HTRRT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!710) Kd = kb_T/kf_T
L                    + HTRRT_L_Li03         <-> HTRRT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!711) Kd = kb_T/kf_T
L                    + HTRRT_L_Li04         <-> HTRRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!712) Kd = kb_T/kf_T
L                    + HTRRT_L_Li04         <-> HTRRT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!713) Kd = kb_R/kf_R
L                    + HTRRT_L_Li05         <-> HTRRT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!714) Kd = kb_T/kf_T
L                    + HTRRT_L_Li05         <-> HTRRT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!715) Kd = kb_R/kf_R
L                    + HTRTR_L_Li00         <-> HTRTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!716) Kd = kb_T/kf_T
L                    + HTRTR_L_Li00         <-> HTRTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!717) Kd = kb_R/kf_R
L                    + HTRTR_L_Li01         <-> HTRTR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!718) Kd = kb_R/kf_R
L                    + HTRTR_L_Li01         <-> HTRTR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!719) Kd = kb_R/kf_R
L                    + HTRTR_L_Li02         <-> HTRTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!720) Kd = kb_R/kf_R
L                    + HTRTR_L_Li02         <-> HTRTR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!721) Kd = kb_T/kf_T
L                    + HTRTR_L_Li03         <-> HTRTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!722) Kd = kb_T/kf_T
L                    + HTRTR_L_Li03         <-> HTRTR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!723) Kd = kb_R/kf_R
L                    + HTRTR_L_Li04         <-> HTRTR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!724) Kd = kb_T/kf_T
L                    + HTRTR_L_Li04         <-> HTRTR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!725) Kd = kb_T/kf_T
L                    + HTRTR_L_Li05         <-> HTRTR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!726) Kd = kb_T/kf_T
L                    + HTRTR_L_Li05         <-> HTRTR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!727) Kd = kb_R/kf_R
L                    + HTRTT_L_Li00         <-> HTRTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!632) Kd = kb_T/kf_T
L                    + HTRTT_L_Li00         <-> HTRTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!633) Kd = kb_T/kf_T
L                    + HTRTT_L_Li01         <-> HTRTT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!634) Kd = kb_R/kf_R
L                    + HTRTT_L_Li01         <-> HTRTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!635) Kd = kb_T/kf_T
L                    + HTRTT_L_Li02         <-> HTRTT_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!636) Kd = kb_R/kf_R
L                    + HTRTT_L_Li02         <-> HTRTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!637) Kd = kb_T/kf_T
L                    + HTRTT_L_Li03         <-> HTRTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!638) Kd = kb_T/kf_T
L                    + HTRTT_L_Li03         <-> HTRTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!639) Kd = kb_T/kf_T
L                    + HTRTT_L_Li04         <-> HTRTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!640) Kd = kb_T/kf_T
L                    + HTRTT_L_Li04         <-> HTRTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!641) Kd = kb_T/kf_T
L                    + HTRTT_L_Li05         <-> HTRTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!642) Kd = kb_T/kf_T
L                    + HTRTT_L_Li05         <-> HTRTT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!643) Kd = kb_R/kf_R
L                    + HTTRR_L_Li00         <-> HTTRR_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!728) Kd = kb_R/kf_R
L                    + HTTRR_L_Li00         <-> HTTRR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!729) Kd = kb_R/kf_R
L                    + HTTRR_L_Li01         <-> HTTRR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!730) Kd = kb_T/kf_T
L                    + HTTRR_L_Li01         <-> HTTRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!731) Kd = kb_R/kf_R
L                    + HTTRR_L_Li02         <-> HTTRR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!732) Kd = kb_T/kf_T
L                    + HTTRR_L_Li02         <-> HTTRR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!733) Kd = kb_R/kf_R
L                    + HTTRR_L_Li03         <-> HTTRR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!734) Kd = kb_T/kf_T
L                    + HTTRR_L_Li03         <-> HTTRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!735) Kd = kb_R/kf_R
L                    + HTTRR_L_Li04         <-> HTTRR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!736) Kd = kb_T/kf_T
L                    + HTTRR_L_Li04         <-> HTTRR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!737) Kd = kb_R/kf_R
L                    + HTTRR_L_Li05         <-> HTTRR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!738) Kd = kb_T/kf_T
L                    + HTTRR_L_Li05         <-> HTTRR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!739) Kd = kb_T/kf_T
L                    + HTTRT_L_Li00         <-> HTTRT_L_L_Li00                  ; fb00=kf_R; bb00=kb_R           # (R!644) Kd = kb_R/kf_R
L                    + HTTRT_L_Li00         <-> HTTRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!645) Kd = kb_T/kf_T
L                    + HTTRT_L_Li01         <-> HTTRT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!646) Kd = kb_T/kf_T
L                    + HTTRT_L_Li01         <-> HTTRT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!647) Kd = kb_T/kf_T
L                    + HTTRT_L_Li02         <-> HTTRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!648) Kd = kb_T/kf_T
L                    + HTTRT_L_Li02         <-> HTTRT_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!649) Kd = kb_R/kf_R
L                    + HTTRT_L_Li03         <-> HTTRT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!650) Kd = kb_T/kf_T
L                    + HTTRT_L_Li03         <-> HTTRT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!651) Kd = kb_T/kf_T
L                    + HTTRT_L_Li04         <-> HTTRT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!652) Kd = kb_T/kf_T
L                    + HTTRT_L_Li04         <-> HTTRT_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!653) Kd = kb_R/kf_R
L                    + HTTRT_L_Li05         <-> HTTRT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!654) Kd = kb_T/kf_T
L                    + HTTRT_L_Li05         <-> HTTRT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!655) Kd = kb_T/kf_T
L                    + HTTTR_L_Li00         <-> HTTTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!656) Kd = kb_T/kf_T
L                    + HTTTR_L_Li00         <-> HTTTR_L_L_Li01                  ; fb00=kf_R; bb00=kb_R           # (R!657) Kd = kb_R/kf_R
L                    + HTTTR_L_Li01         <-> HTTTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!658) Kd = kb_T/kf_T
L                    + HTTTR_L_Li01         <-> HTTTR_L_L_Li02                  ; fb00=kf_R; bb00=kb_R           # (R!659) Kd = kb_R/kf_R
L                    + HTTTR_L_Li02         <-> HTTTR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!660) Kd = kb_T/kf_T
L                    + HTTTR_L_Li02         <-> HTTTR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!661) Kd = kb_T/kf_T
L                    + HTTTR_L_Li03         <-> HTTTR_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!662) Kd = kb_T/kf_T
L                    + HTTTR_L_Li03         <-> HTTTR_L_L_Li03                  ; fb00=kf_R; bb00=kb_R           # (R!663) Kd = kb_R/kf_R
L                    + HTTTR_L_Li04         <-> HTTTR_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!664) Kd = kb_T/kf_T
L                    + HTTTR_L_Li04         <-> HTTTR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!665) Kd = kb_T/kf_T
L                    + HTTTR_L_Li05         <-> HTTTR_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!666) Kd = kb_T/kf_T
L                    + HTTTR_L_Li05         <-> HTTTR_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!667) Kd = kb_T/kf_T
L                    + HTTTT_L_Li00         <-> HTTTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!608) Kd = kb_T/kf_T
L                    + HTTTT_L_Li00         <-> HTTTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!609) Kd = kb_T/kf_T
L                    + HTTTT_L_Li01         <-> HTTTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!610) Kd = kb_T/kf_T
L                    + HTTTT_L_Li01         <-> HTTTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!611) Kd = kb_T/kf_T
L                    + HTTTT_L_Li02         <-> HTTTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!612) Kd = kb_T/kf_T
L                    + HTTTT_L_Li02         <-> HTTTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!613) Kd = kb_T/kf_T
L                    + HTTTT_L_Li03         <-> HTTTT_L_L_Li00                  ; fb01=kf_T; bb01=kb_T           # (R!614) Kd = kb_T/kf_T
L                    + HTTTT_L_Li03         <-> HTTTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!615) Kd = kb_T/kf_T
L                    + HTTTT_L_Li04         <-> HTTTT_L_L_Li01                  ; fb01=kf_T; bb01=kb_T           # (R!616) Kd = kb_T/kf_T
L                    + HTTTT_L_Li04         <-> HTTTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!617) Kd = kb_T/kf_T
L                    + HTTTT_L_Li05         <-> HTTTT_L_L_Li02                  ; fb01=kf_T; bb01=kb_T           # (R!618) Kd = kb_T/kf_T
L                    + HTTTT_L_Li05         <-> HTTTT_L_L_Li03                  ; fb01=kf_T; bb01=kb_T           # (R!619) Kd = kb_T/kf_T
L                    + HRRRR_L_L_Li00       <-> HRRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!988) Kd = kb_R/kf_R
L                    + HRRRR_L_L_Li01       <-> HRRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!989) Kd = kb_R/kf_R
L                    + HRRRR_L_L_Li02       <-> HRRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!990) Kd = kb_R/kf_R
L                    + HRRRR_L_L_Li03       <-> HRRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!991) Kd = kb_R/kf_R
L                    + HRRRT_L_L_Li00       <-> HRRRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!972) Kd = kb_T/kf_T
L                    + HRRRT_L_L_Li01       <-> HRRRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!973) Kd = kb_R/kf_R
L                    + HRRRT_L_L_Li02       <-> HRRRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!974) Kd = kb_R/kf_R
L                    + HRRRT_L_L_Li03       <-> HRRRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!975) Kd = kb_R/kf_R
L                    + HRRTR_L_L_Li00       <-> HRRTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!976) Kd = kb_R/kf_R
L                    + HRRTR_L_L_Li01       <-> HRRTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!977) Kd = kb_T/kf_T
L                    + HRRTR_L_L_Li02       <-> HRRTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!978) Kd = kb_R/kf_R
L                    + HRRTR_L_L_Li03       <-> HRRTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!979) Kd = kb_R/kf_R
L                    + HRRTT_L_L_Li00       <-> HRRTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!948) Kd = kb_T/kf_T
L                    + HRRTT_L_L_Li01       <-> HRRTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!949) Kd = kb_T/kf_T
L                    + HRRTT_L_L_Li02       <-> HRRTT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!950) Kd = kb_R/kf_R
L                    + HRRTT_L_L_Li03       <-> HRRTT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!951) Kd = kb_R/kf_R
L                    + HRTRR_L_L_Li00       <-> HRTRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!980) Kd = kb_R/kf_R
L                    + HRTRR_L_L_Li01       <-> HRTRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!981) Kd = kb_R/kf_R
L                    + HRTRR_L_L_Li02       <-> HRTRR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!982) Kd = kb_T/kf_T
L                    + HRTRR_L_L_Li03       <-> HRTRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!983) Kd = kb_R/kf_R
L                    + HRTRT_L_L_Li00       <-> HRTRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!952) Kd = kb_T/kf_T
L                    + HRTRT_L_L_Li01       <-> HRTRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!953) Kd = kb_R/kf_R
L                    + HRTRT_L_L_Li02       <-> HRTRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!954) Kd = kb_T/kf_T
L                    + HRTRT_L_L_Li03       <-> HRTRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!955) Kd = kb_R/kf_R
L                    + HRTTR_L_L_Li00       <-> HRTTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!956) Kd = kb_R/kf_R
L                    + HRTTR_L_L_Li01       <-> HRTTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!957) Kd = kb_T/kf_T
L                    + HRTTR_L_L_Li02       <-> HRTTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!958) Kd = kb_T/kf_T
L                    + HRTTR_L_L_Li03       <-> HRTTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!959) Kd = kb_R/kf_R
L                    + HRTTT_L_L_Li00       <-> HRTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!932) Kd = kb_T/kf_T
L                    + HRTTT_L_L_Li01       <-> HRTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!933) Kd = kb_T/kf_T
L                    + HRTTT_L_L_Li02       <-> HRTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!934) Kd = kb_T/kf_T
L                    + HRTTT_L_L_Li03       <-> HRTTT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!935) Kd = kb_R/kf_R
L                    + HTRRR_L_L_Li00       <-> HTRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!984) Kd = kb_R/kf_R
L                    + HTRRR_L_L_Li01       <-> HTRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!985) Kd = kb_R/kf_R
L                    + HTRRR_L_L_Li02       <-> HTRRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!986) Kd = kb_R/kf_R
L                    + HTRRR_L_L_Li03       <-> HTRRR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!987) Kd = kb_T/kf_T
L                    + HTRRT_L_L_Li00       <-> HTRRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!960) Kd = kb_T/kf_T
L                    + HTRRT_L_L_Li01       <-> HTRRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!961) Kd = kb_R/kf_R
L                    + HTRRT_L_L_Li02       <-> HTRRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!962) Kd = kb_R/kf_R
L                    + HTRRT_L_L_Li03       <-> HTRRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!963) Kd = kb_T/kf_T
L                    + HTRTR_L_L_Li00       <-> HTRTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!964) Kd = kb_R/kf_R
L                    + HTRTR_L_L_Li01       <-> HTRTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!965) Kd = kb_T/kf_T
L                    + HTRTR_L_L_Li02       <-> HTRTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!966) Kd = kb_R/kf_R
L                    + HTRTR_L_L_Li03       <-> HTRTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!967) Kd = kb_T/kf_T
L                    + HTRTT_L_L_Li00       <-> HTRTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!936) Kd = kb_T/kf_T
L                    + HTRTT_L_L_Li01       <-> HTRTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!937) Kd = kb_T/kf_T
L                    + HTRTT_L_L_Li02       <-> HTRTT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!938) Kd = kb_R/kf_R
L                    + HTRTT_L_L_Li03       <-> HTRTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!939) Kd = kb_T/kf_T
L                    + HTTRR_L_L_Li00       <-> HTTRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!968) Kd = kb_R/kf_R
L                    + HTTRR_L_L_Li01       <-> HTTRR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!969) Kd = kb_R/kf_R
L                    + HTTRR_L_L_Li02       <-> HTTRR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!970) Kd = kb_T/kf_T
L                    + HTTRR_L_L_Li03       <-> HTTRR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!971) Kd = kb_T/kf_T
L                    + HTTRT_L_L_Li00       <-> HTTRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!940) Kd = kb_T/kf_T
L                    + HTTRT_L_L_Li01       <-> HTTRT_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!941) Kd = kb_R/kf_R
L                    + HTTRT_L_L_Li02       <-> HTTRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!942) Kd = kb_T/kf_T
L                    + HTTRT_L_L_Li03       <-> HTTRT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!943) Kd = kb_T/kf_T
L                    + HTTTR_L_L_Li00       <-> HTTTR_L_L_L_Li00                ; fb00=kf_R; bb00=kb_R           # (R!944) Kd = kb_R/kf_R
L                    + HTTTR_L_L_Li01       <-> HTTTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!945) Kd = kb_T/kf_T
L                    + HTTTR_L_L_Li02       <-> HTTTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!946) Kd = kb_T/kf_T
L                    + HTTTR_L_L_Li03       <-> HTTTR_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!947) Kd = kb_T/kf_T
L                    + HTTTT_L_L_Li00       <-> HTTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!928) Kd = kb_T/kf_T
L                    + HTTTT_L_L_Li01       <-> HTTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!929) Kd = kb_T/kf_T
L                    + HTTTT_L_L_Li02       <-> HTTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!930) Kd = kb_T/kf_T
L                    + HTTTT_L_L_Li03       <-> HTTTT_L_L_L_Li00                ; fb01=kf_T; bb01=kb_T           # (R!931) Kd = kb_T/kf_T

# REACTION CLASS: AllostericReaction
# ----------------------------------
HRRRT                                       <-> HRRRR                           ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!28) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRTR                                       <-> HRRRR                           ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!29) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTT                                       <-> HRRRT                           ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!16) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT                                       <-> HRRTR                           ; fu03=k_TR; bu03=k_RT           # (R!17) Keq = k_TR / k_RT
HRTRR                                       <-> HRRRR                           ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!30) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT                                       <-> HRRRT                           ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!18) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT                                       <-> HRTRR                           ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!19) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR                                       <-> HRRTR                           ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!20) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR                                       <-> HRTRR                           ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!21) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTT                                       <-> HRRTT                           ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!04) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT                                       <-> HRTRT                           ; fu03=k_TR; bu03=k_RT           # (R!05) Keq = k_TR / k_RT
HRTTT                                       <-> HRTTR                           ; fu03=k_TR; bu03=k_RT           # (R!06) Keq = k_TR / k_RT
HTRRR                                       <-> HRRRR                           ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!31) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT                                       <-> HRRRT                           ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!22) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT                                       <-> HTRRR                           ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!23) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRTR                                       <-> HRRTR                           ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!24) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR                                       <-> HTRRR                           ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!25) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTT                                       <-> HRRTT                           ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!07) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT                                       <-> HTRRT                           ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!08) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT                                       <-> HTRTR                           ; fu03=k_TR; bu03=k_RT           # (R!09) Keq = k_TR / k_RT
HTTRR                                       <-> HRTRR                           ; fu03=k_TR; bu03=k_RT           # (R!26) Keq = k_TR / k_RT
HTTRR                                       <-> HTRRR                           ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!27) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT                                       <-> HRTRT                           ; fu03=k_TR; bu03=k_RT           # (R!10) Keq = k_TR / k_RT
HTTRT                                       <-> HTRRT                           ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!11) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT                                       <-> HTTRR                           ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!12) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR                                       <-> HRTTR                           ; fu03=k_TR; bu03=k_RT           # (R!13) Keq = k_TR / k_RT
HTTTR                                       <-> HTRTR                           ; fu03=k_TR; bu03=k_RT           # (R!14) Keq = k_TR / k_RT
HTTTR                                       <-> HTTRR                           ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!15) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTT                                       <-> HRTTT                           ; fu03=k_TR; bu03=k_RT           # (R!00) Keq = k_TR / k_RT
HTTTT                                       <-> HTRTT                           ; fu03=k_TR; bu03=k_RT           # (R!01) Keq = k_TR / k_RT
HTTTT                                       <-> HTTRT                           ; fu03=k_TR; bu03=k_RT           # (R!02) Keq = k_TR / k_RT
HTTTT                                       <-> HTTTR                           ; fu03=k_TR; bu03=k_RT           # (R!03) Keq = k_TR / k_RT
HRRRT_Li00                                  <-> HRRRR_Li00                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!208) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_Li01                                  <-> HRRRR_Li01                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!209) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_Li02                                  <-> HRRRR_Li02                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!210) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_Li03                                  <-> HRRRR_Li03                      ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!211) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTR_Li00                                  <-> HRRRR_Li00                      ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!212) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_Li01                                  <-> HRRRR_Li01                      ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!213) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_Li02                                  <-> HRRRR_Li02                      ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!214) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_Li03                                  <-> HRRRR_Li03                      ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!215) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTT_Li00                                  <-> HRRRT_Li00                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!160) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_Li00                                  <-> HRRTR_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!161) Keq = k_TR / k_RT
HRRTT_Li01                                  <-> HRRRT_Li01                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!162) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_Li01                                  <-> HRRTR_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!163) Keq = k_TR / k_RT
HRRTT_Li02                                  <-> HRRRT_Li02                      ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!164) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_Li02                                  <-> HRRTR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!165) Keq = k_TR / k_RT
HRRTT_Li03                                  <-> HRRRT_Li03                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!166) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_Li03                                  <-> HRRTR_Li03                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!167) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTRR_Li00                                  <-> HRRRR_Li00                      ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!216) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_Li01                                  <-> HRRRR_Li01                      ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!217) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_Li02                                  <-> HRRRR_Li02                      ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!218) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_Li03                                  <-> HRRRR_Li03                      ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!219) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_Li00                                  <-> HRRRT_Li00                      ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!168) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_Li00                                  <-> HRTRR_Li00                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!169) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_Li01                                  <-> HRRRT_Li01                      ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!170) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_Li01                                  <-> HRTRR_Li01                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!171) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_Li02                                  <-> HRRRT_Li02                      ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!172) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_Li02                                  <-> HRTRR_Li02                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!173) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_Li03                                  <-> HRRRT_Li03                      ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!174) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_Li03                                  <-> HRTRR_Li03                      ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!175) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_Li00                                  <-> HRRTR_Li00                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!176) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_Li00                                  <-> HRTRR_Li00                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!177) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR_Li01                                  <-> HRRTR_Li01                      ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!178) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_Li01                                  <-> HRTRR_Li01                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!179) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR_Li02                                  <-> HRRTR_Li02                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!180) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_Li02                                  <-> HRTRR_Li02                      ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!181) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTR_Li03                                  <-> HRRTR_Li03                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!182) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_Li03                                  <-> HRTRR_Li03                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!183) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTT_Li00                                  <-> HRRTT_Li00                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!112) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_Li00                                  <-> HRTRT_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!113) Keq = k_TR / k_RT
HRTTT_Li00                                  <-> HRTTR_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!114) Keq = k_TR / k_RT
HRTTT_Li01                                  <-> HRRTT_Li01                      ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!115) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_Li01                                  <-> HRTRT_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!116) Keq = k_TR / k_RT
HRTTT_Li01                                  <-> HRTTR_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!117) Keq = k_TR / k_RT
HRTTT_Li02                                  <-> HRRTT_Li02                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!118) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_Li02                                  <-> HRTRT_Li02                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!119) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_Li02                                  <-> HRTTR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!120) Keq = k_TR / k_RT
HRTTT_Li03                                  <-> HRRTT_Li03                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!121) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_Li03                                  <-> HRTRT_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!122) Keq = k_TR / k_RT
HRTTT_Li03                                  <-> HRTTR_Li03                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!123) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRRR_Li00                                  <-> HRRRR_Li00                      ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!220) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_Li01                                  <-> HRRRR_Li01                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!221) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRR_Li02                                  <-> HRRRR_Li02                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!222) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRR_Li03                                  <-> HRRRR_Li03                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!223) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_Li00                                  <-> HRRRT_Li00                      ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!184) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_Li00                                  <-> HTRRR_Li00                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!185) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_Li01                                  <-> HRRRT_Li01                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!186) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_Li01                                  <-> HTRRR_Li01                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!187) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_Li02                                  <-> HRRRT_Li02                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!188) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_Li02                                  <-> HTRRR_Li02                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!189) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_Li03                                  <-> HRRRT_Li03                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!190) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_Li03                                  <-> HTRRR_Li03                      ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!191) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTR_Li00                                  <-> HRRTR_Li00                      ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!192) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_Li00                                  <-> HTRRR_Li00                      ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!193) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_Li01                                  <-> HRRTR_Li01                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!194) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_Li01                                  <-> HTRRR_Li01                      ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!195) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_Li02                                  <-> HRRTR_Li02                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!196) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_Li02                                  <-> HTRRR_Li02                      ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!197) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_Li03                                  <-> HRRTR_Li03                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!198) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_Li03                                  <-> HTRRR_Li03                      ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!199) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTT_Li00                                  <-> HRRTT_Li00                      ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!124) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_Li00                                  <-> HTRRT_Li00                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!125) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_Li00                                  <-> HTRTR_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!126) Keq = k_TR / k_RT
HTRTT_Li01                                  <-> HRRTT_Li01                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!127) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_Li01                                  <-> HTRRT_Li01                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!128) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_Li01                                  <-> HTRTR_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!129) Keq = k_TR / k_RT
HTRTT_Li02                                  <-> HRRTT_Li02                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!130) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_Li02                                  <-> HTRRT_Li02                      ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!131) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_Li02                                  <-> HTRTR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!132) Keq = k_TR / k_RT
HTRTT_Li03                                  <-> HRRTT_Li03                      ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!133) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_Li03                                  <-> HTRRT_Li03                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!134) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_Li03                                  <-> HTRTR_Li03                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!135) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_Li00                                  <-> HRTRR_Li00                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!200) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_Li00                                  <-> HTRRR_Li00                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!201) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRR_Li01                                  <-> HRTRR_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!202) Keq = k_TR / k_RT
HTTRR_Li01                                  <-> HTRRR_Li01                      ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!203) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRR_Li02                                  <-> HRTRR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!204) Keq = k_TR / k_RT
HTTRR_Li02                                  <-> HTRRR_Li02                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!205) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRR_Li03                                  <-> HRTRR_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!206) Keq = k_TR / k_RT
HTTRR_Li03                                  <-> HTRRR_Li03                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!207) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_Li00                                  <-> HRTRT_Li00                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!136) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_Li00                                  <-> HTRRT_Li00                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!137) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_Li00                                  <-> HTTRR_Li00                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!138) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_Li01                                  <-> HRTRT_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!139) Keq = k_TR / k_RT
HTTRT_Li01                                  <-> HTRRT_Li01                      ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!140) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_Li01                                  <-> HTTRR_Li01                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!141) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_Li02                                  <-> HRTRT_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!142) Keq = k_TR / k_RT
HTTRT_Li02                                  <-> HTRRT_Li02                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!143) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_Li02                                  <-> HTTRR_Li02                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!144) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_Li03                                  <-> HRTRT_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!145) Keq = k_TR / k_RT
HTTRT_Li03                                  <-> HTRRT_Li03                      ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!146) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_Li03                                  <-> HTTRR_Li03                      ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!147) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTTR_Li00                                  <-> HRTTR_Li00                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!148) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_Li00                                  <-> HTRTR_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!149) Keq = k_TR / k_RT
HTTTR_Li00                                  <-> HTTRR_Li00                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!150) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR_Li01                                  <-> HRTTR_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!151) Keq = k_TR / k_RT
HTTTR_Li01                                  <-> HTRTR_Li01                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!152) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_Li01                                  <-> HTTRR_Li01                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!153) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR_Li02                                  <-> HRTTR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!154) Keq = k_TR / k_RT
HTTTR_Li02                                  <-> HTRTR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!155) Keq = k_TR / k_RT
HTTTR_Li02                                  <-> HTTRR_Li02                      ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!156) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTR_Li03                                  <-> HRTTR_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!157) Keq = k_TR / k_RT
HTTTR_Li03                                  <-> HTRTR_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!158) Keq = k_TR / k_RT
HTTTR_Li03                                  <-> HTTRR_Li03                      ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!159) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTT_Li00                                  <-> HRTTT_Li00                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!96) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_Li00                                  <-> HTRTT_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!97) Keq = k_TR / k_RT
HTTTT_Li00                                  <-> HTTRT_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!98) Keq = k_TR / k_RT
HTTTT_Li00                                  <-> HTTTR_Li00                      ; fu03=k_TR; bu03=k_RT           # (R!99) Keq = k_TR / k_RT
HTTTT_Li01                                  <-> HRTTT_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!100) Keq = k_TR / k_RT
HTTTT_Li01                                  <-> HTRTT_Li01                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!101) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_Li01                                  <-> HTTRT_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!102) Keq = k_TR / k_RT
HTTTT_Li01                                  <-> HTTTR_Li01                      ; fu03=k_TR; bu03=k_RT           # (R!103) Keq = k_TR / k_RT
HTTTT_Li02                                  <-> HRTTT_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!104) Keq = k_TR / k_RT
HTTTT_Li02                                  <-> HTRTT_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!105) Keq = k_TR / k_RT
HTTTT_Li02                                  <-> HTTRT_Li02                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!106) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_Li02                                  <-> HTTTR_Li02                      ; fu03=k_TR; bu03=k_RT           # (R!107) Keq = k_TR / k_RT
HTTTT_Li03                                  <-> HRTTT_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!108) Keq = k_TR / k_RT
HTTTT_Li03                                  <-> HTRTT_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!109) Keq = k_TR / k_RT
HTTTT_Li03                                  <-> HTTRT_Li03                      ; fu03=k_TR; bu03=k_RT           # (R!110) Keq = k_TR / k_RT
HTTTT_Li03                                  <-> HTTTR_Li03                      ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!111) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRRT_L_Li00                                <-> HRRRR_L_Li00                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!584) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_L_Li01                                <-> HRRRR_L_Li01                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!585) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_L_Li02                                <-> HRRRR_L_Li02                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!586) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRRT_L_Li03                                <-> HRRRR_L_Li03                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!587) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_L_Li04                                <-> HRRRR_L_Li04                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!588) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRRT_L_Li05                                <-> HRRRR_L_Li05                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!589) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTR_L_Li00                                <-> HRRRR_L_Li00                    ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!590) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_Li01                                <-> HRRRR_L_Li01                    ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!591) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_Li02                                <-> HRRRR_L_Li02                    ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!592) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_Li03                                <-> HRRRR_L_Li03                    ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!593) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_Li04                                <-> HRRRR_L_Li04                    ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!594) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_Li05                                <-> HRRRR_L_Li05                    ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!595) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTT_L_Li00                                <-> HRRRT_L_Li00                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!512) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_L_Li00                                <-> HRRTR_L_Li00                    ; fu03=k_TR; bu03=k_RT           # (R!513) Keq = k_TR / k_RT
HRRTT_L_Li01                                <-> HRRRT_L_Li01                    ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!514) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_Li01                                <-> HRRTR_L_Li01                    ; fu03=k_TR; bu03=k_RT           # (R!515) Keq = k_TR / k_RT
HRRTT_L_Li02                                <-> HRRRT_L_Li02                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!516) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_L_Li02                                <-> HRRTR_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!517) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRTT_L_Li03                                <-> HRRRT_L_Li03                    ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!518) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_Li03                                <-> HRRTR_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!519) Keq = k_TR / k_RT
HRRTT_L_Li04                                <-> HRRRT_L_Li04                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!520) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_L_Li04                                <-> HRRTR_L_Li04                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!521) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRTT_L_Li05                                <-> HRRRT_L_Li05                    ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!522) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_Li05                                <-> HRRTR_L_Li05                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!523) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTRR_L_Li00                                <-> HRRRR_L_Li00                    ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!596) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_Li01                                <-> HRRRR_L_Li01                    ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!597) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_Li02                                <-> HRRRR_L_Li02                    ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!598) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_Li03                                <-> HRRRR_L_Li03                    ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!599) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_Li04                                <-> HRRRR_L_Li04                    ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!600) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_Li05                                <-> HRRRR_L_Li05                    ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!601) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li00                                <-> HRRRT_L_Li00                    ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!524) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li00                                <-> HRTRR_L_Li00                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!525) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_L_Li01                                <-> HRRRT_L_Li01                    ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!526) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li01                                <-> HRTRR_L_Li01                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!527) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_L_Li02                                <-> HRRRT_L_Li02                    ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!528) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li02                                <-> HRTRR_L_Li02                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!529) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTRT_L_Li03                                <-> HRRRT_L_Li03                    ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!530) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li03                                <-> HRTRR_L_Li03                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!531) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_L_Li04                                <-> HRRRT_L_Li04                    ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!532) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li04                                <-> HRTRR_L_Li04                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!533) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTRT_L_Li05                                <-> HRRRT_L_Li05                    ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!534) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_Li05                                <-> HRTRR_L_Li05                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!535) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_Li00                                <-> HRRTR_L_Li00                    ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!536) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_Li00                                <-> HRTRR_L_Li00                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!537) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR_L_Li01                                <-> HRRTR_L_Li01                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!538) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_L_Li01                                <-> HRTRR_L_Li01                    ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!539) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTR_L_Li02                                <-> HRRTR_L_Li02                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!540) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_L_Li02                                <-> HRTRR_L_Li02                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!541) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR_L_Li03                                <-> HRRTR_L_Li03                    ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!542) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_Li03                                <-> HRTRR_L_Li03                    ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!543) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTR_L_Li04                                <-> HRRTR_L_Li04                    ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!544) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_Li04                                <-> HRTRR_L_Li04                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!545) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR_L_Li05                                <-> HRRTR_L_Li05                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!546) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_L_Li05                                <-> HRTRR_L_Li05                    ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!547) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTT_L_Li00                                <-> HRRTT_L_Li00                    ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!440) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_Li00                                <-> HRTRT_L_Li00                    ; fu03=k_TR; bu03=k_RT           # (R!441) Keq = k_TR / k_RT
HRTTT_L_Li00                                <-> HRTTR_L_Li00                    ; fu03=k_TR; bu03=k_RT           # (R!442) Keq = k_TR / k_RT
HRTTT_L_Li01                                <-> HRRTT_L_Li01                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!443) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_L_Li01                                <-> HRTRT_L_Li01                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!444) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_Li01                                <-> HRTTR_L_Li01                    ; fu03=k_TR; bu03=k_RT           # (R!445) Keq = k_TR / k_RT
HRTTT_L_Li02                                <-> HRRTT_L_Li02                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!446) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_L_Li02                                <-> HRTRT_L_Li02                    ; fu03=k_TR; bu03=k_RT           # (R!447) Keq = k_TR / k_RT
HRTTT_L_Li02                                <-> HRTTR_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!448) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_Li03                                <-> HRRTT_L_Li03                    ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!449) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_Li03                                <-> HRTRT_L_Li03                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!450) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_Li03                                <-> HRTTR_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!451) Keq = k_TR / k_RT
HRTTT_L_Li04                                <-> HRRTT_L_Li04                    ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!452) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_Li04                                <-> HRTRT_L_Li04                    ; fu03=k_TR; bu03=k_RT           # (R!453) Keq = k_TR / k_RT
HRTTT_L_Li04                                <-> HRTTR_L_Li04                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!454) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_Li05                                <-> HRRTT_L_Li05                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!455) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_L_Li05                                <-> HRTRT_L_Li05                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!456) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_Li05                                <-> HRTTR_L_Li05                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!457) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRRR_L_Li00                                <-> HRRRR_L_Li00                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!602) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_L_Li01                                <-> HRRRR_L_Li01                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!603) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_L_Li02                                <-> HRRRR_L_Li02                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!604) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_L_Li03                                <-> HRRRR_L_Li03                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!605) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRR_L_Li04                                <-> HRRRR_L_Li04                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!606) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRR_L_Li05                                <-> HRRRR_L_Li05                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!607) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_L_Li00                                <-> HRRRT_L_Li00                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!548) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_Li00                                <-> HTRRR_L_Li00                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!549) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_L_Li01                                <-> HRRRT_L_Li01                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!550) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_Li01                                <-> HTRRR_L_Li01                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!551) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_L_Li02                                <-> HRRRT_L_Li02                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!552) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_Li02                                <-> HTRRR_L_Li02                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!553) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRRT_L_Li03                                <-> HRRRT_L_Li03                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!554) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_L_Li03                                <-> HTRRR_L_Li03                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!555) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_L_Li04                                <-> HRRRT_L_Li04                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!556) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_L_Li04                                <-> HTRRR_L_Li04                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!557) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRRT_L_Li05                                <-> HRRRT_L_Li05                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!558) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_L_Li05                                <-> HTRRR_L_Li05                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!559) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTR_L_Li00                                <-> HRRTR_L_Li00                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!560) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_Li00                                <-> HTRRR_L_Li00                    ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!561) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_Li01                                <-> HRRTR_L_Li01                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!562) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_Li01                                <-> HTRRR_L_Li01                    ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!563) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_Li02                                <-> HRRTR_L_Li02                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!564) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_Li02                                <-> HTRRR_L_Li02                    ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!565) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_Li03                                <-> HRRTR_L_Li03                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!566) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_L_Li03                                <-> HTRRR_L_Li03                    ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!567) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_Li04                                <-> HRRTR_L_Li04                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!568) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_L_Li04                                <-> HTRRR_L_Li04                    ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!569) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_Li05                                <-> HRRTR_L_Li05                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!570) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_L_Li05                                <-> HTRRR_L_Li05                    ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!571) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTT_L_Li00                                <-> HRRTT_L_Li00                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!458) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_Li00                                <-> HTRRT_L_Li00                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!459) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_L_Li00                                <-> HTRTR_L_Li00                    ; fu03=k_TR; bu03=k_RT           # (R!460) Keq = k_TR / k_RT
HTRTT_L_Li01                                <-> HRRTT_L_Li01                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!461) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_Li01                                <-> HTRRT_L_Li01                    ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!462) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_Li01                                <-> HTRTR_L_Li01                    ; fu03=k_TR; bu03=k_RT           # (R!463) Keq = k_TR / k_RT
HTRTT_L_Li02                                <-> HRRTT_L_Li02                    ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!464) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_Li02                                <-> HTRRT_L_Li02                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!465) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_L_Li02                                <-> HTRTR_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!466) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRTT_L_Li03                                <-> HRRTT_L_Li03                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!467) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_L_Li03                                <-> HTRRT_L_Li03                    ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!468) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_Li03                                <-> HTRTR_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!469) Keq = k_TR / k_RT
HTRTT_L_Li04                                <-> HRRTT_L_Li04                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!470) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_L_Li04                                <-> HTRRT_L_Li04                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!471) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_L_Li04                                <-> HTRTR_L_Li04                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!472) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRTT_L_Li05                                <-> HRRTT_L_Li05                    ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!473) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_L_Li05                                <-> HTRRT_L_Li05                    ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!474) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_Li05                                <-> HTRTR_L_Li05                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!475) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_Li00                                <-> HRTRR_L_Li00                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!572) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_Li00                                <-> HTRRR_L_Li00                    ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!573) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRR_L_Li01                                <-> HRTRR_L_Li01                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!574) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_Li01                                <-> HTRRR_L_Li01                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!575) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRR_L_Li02                                <-> HRTRR_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!576) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_Li02                                <-> HTRRR_L_Li02                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!577) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRR_L_Li03                                <-> HRTRR_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!578) Keq = k_TR / k_RT
HTTRR_L_Li03                                <-> HTRRR_L_Li03                    ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!579) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRR_L_Li04                                <-> HRTRR_L_Li04                    ; fu03=k_TR; bu03=k_RT           # (R!580) Keq = k_TR / k_RT
HTTRR_L_Li04                                <-> HTRRR_L_Li04                    ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!581) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRR_L_Li05                                <-> HRTRR_L_Li05                    ; fu03=k_TR; bu03=k_RT           # (R!582) Keq = k_TR / k_RT
HTTRR_L_Li05                                <-> HTRRR_L_Li05                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!583) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_L_Li00                                <-> HRTRT_L_Li00                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!476) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_Li00                                <-> HTRRT_L_Li00                    ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!477) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_Li00                                <-> HTTRR_L_Li00                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!478) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_L_Li01                                <-> HRTRT_L_Li01                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!479) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_Li01                                <-> HTRRT_L_Li01                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!480) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_L_Li01                                <-> HTTRR_L_Li01                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!481) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_L_Li02                                <-> HRTRT_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!482) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_Li02                                <-> HTRRT_L_Li02                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!483) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_L_Li02                                <-> HTTRR_L_Li02                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!484) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTRT_L_Li03                                <-> HRTRT_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!485) Keq = k_TR / k_RT
HTTRT_L_Li03                                <-> HTRRT_L_Li03                    ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!486) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_Li03                                <-> HTTRR_L_Li03                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!487) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_L_Li04                                <-> HRTRT_L_Li04                    ; fu03=k_TR; bu03=k_RT           # (R!488) Keq = k_TR / k_RT
HTTRT_L_Li04                                <-> HTRRT_L_Li04                    ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!489) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_Li04                                <-> HTTRR_L_Li04                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!490) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTRT_L_Li05                                <-> HRTRT_L_Li05                    ; fu03=k_TR; bu03=k_RT           # (R!491) Keq = k_TR / k_RT
HTTRT_L_Li05                                <-> HTRRT_L_Li05                    ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!492) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_L_Li05                                <-> HTTRR_L_Li05                    ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!493) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTTR_L_Li00                                <-> HRTTR_L_Li00                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!494) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_Li00                                <-> HTRTR_L_Li00                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!495) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_Li00                                <-> HTTRR_L_Li00                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!496) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR_L_Li01                                <-> HRTTR_L_Li01                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!497) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_Li01                                <-> HTRTR_L_Li01                    ; fu03=k_TR; bu03=k_RT           # (R!498) Keq = k_TR / k_RT
HTTTR_L_Li01                                <-> HTTRR_L_Li01                    ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!499) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTR_L_Li02                                <-> HRTTR_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!500) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_Li02                                <-> HTRTR_L_Li02                    ; fu03=k_TR; bu03=k_RT           # (R!501) Keq = k_TR / k_RT
HTTTR_L_Li02                                <-> HTTRR_L_Li02                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!502) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR_L_Li03                                <-> HRTTR_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!503) Keq = k_TR / k_RT
HTTTR_L_Li03                                <-> HTRTR_L_Li03                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!504) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_Li03                                <-> HTTRR_L_Li03                    ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!505) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTR_L_Li04                                <-> HRTTR_L_Li04                    ; fu03=k_TR; bu03=k_RT           # (R!506) Keq = k_TR / k_RT
HTTTR_L_Li04                                <-> HTRTR_L_Li04                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!507) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_Li04                                <-> HTTRR_L_Li04                    ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!508) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR_L_Li05                                <-> HRTTR_L_Li05                    ; fu03=k_TR; bu03=k_RT           # (R!509) Keq = k_TR / k_RT
HTTTR_L_Li05                                <-> HTRTR_L_Li05                    ; fu03=k_TR; bu03=k_RT           # (R!510) Keq = k_TR / k_RT
HTTTR_L_Li05                                <-> HTTRR_L_Li05                    ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!511) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTT_L_Li00                                <-> HRTTT_L_Li00                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!416) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li00                                <-> HTRTT_L_Li00                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!417) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li00                                <-> HTTRT_L_Li00                    ; fu03=k_TR; bu03=k_RT           # (R!418) Keq = k_TR / k_RT
HTTTT_L_Li00                                <-> HTTTR_L_Li00                    ; fu03=k_TR; bu03=k_RT           # (R!419) Keq = k_TR / k_RT
HTTTT_L_Li01                                <-> HRTTT_L_Li01                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!420) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li01                                <-> HTRTT_L_Li01                    ; fu03=k_TR; bu03=k_RT           # (R!421) Keq = k_TR / k_RT
HTTTT_L_Li01                                <-> HTTRT_L_Li01                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!422) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li01                                <-> HTTTR_L_Li01                    ; fu03=k_TR; bu03=k_RT           # (R!423) Keq = k_TR / k_RT
HTTTT_L_Li02                                <-> HRTTT_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!424) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li02                                <-> HTRTT_L_Li02                    ; fu03=k_TR; bu03=k_RT           # (R!425) Keq = k_TR / k_RT
HTTTT_L_Li02                                <-> HTTRT_L_Li02                    ; fu03=k_TR; bu03=k_RT           # (R!426) Keq = k_TR / k_RT
HTTTT_L_Li02                                <-> HTTTR_L_Li02                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!427) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li03                                <-> HRTTT_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!428) Keq = k_TR / k_RT
HTTTT_L_Li03                                <-> HTRTT_L_Li03                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!429) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li03                                <-> HTTRT_L_Li03                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!430) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li03                                <-> HTTTR_L_Li03                    ; fu03=k_TR; bu03=k_RT           # (R!431) Keq = k_TR / k_RT
HTTTT_L_Li04                                <-> HRTTT_L_Li04                    ; fu03=k_TR; bu03=k_RT           # (R!432) Keq = k_TR / k_RT
HTTTT_L_Li04                                <-> HTRTT_L_Li04                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!433) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li04                                <-> HTTRT_L_Li04                    ; fu03=k_TR; bu03=k_RT           # (R!434) Keq = k_TR / k_RT
HTTTT_L_Li04                                <-> HTTTR_L_Li04                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!435) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li05                                <-> HRTTT_L_Li05                    ; fu03=k_TR; bu03=k_RT           # (R!436) Keq = k_TR / k_RT
HTTTT_L_Li05                                <-> HTRTT_L_Li05                    ; fu03=k_TR; bu03=k_RT           # (R!437) Keq = k_TR / k_RT
HTTTT_L_Li05                                <-> HTTRT_L_Li05                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!438) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_Li05                                <-> HTTTR_L_Li05                    ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!439) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRRT_L_L_Li00                              <-> HRRRR_L_L_Li00                  ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!912) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRRRT_L_L_Li01                              <-> HRRRR_L_L_Li01                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!913) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRRT_L_L_Li02                              <-> HRRRR_L_L_Li02                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!914) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRRT_L_L_Li03                              <-> HRRRR_L_L_Li03                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!915) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTR_L_L_Li00                              <-> HRRRR_L_L_Li00                  ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!916) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_L_Li01                              <-> HRRRR_L_L_Li01                  ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!917) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_L_Li02                              <-> HRRRR_L_L_Li02                  ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!918) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTR_L_L_Li03                              <-> HRRRR_L_L_Li03                  ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!919) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTT_L_L_Li00                              <-> HRRRT_L_L_Li00                  ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!864) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_L_Li00                              <-> HRRTR_L_L_Li00                  ; fu03=k_TR; bu03=k_RT           # (R!865) Keq = k_TR / k_RT
HRRTT_L_L_Li01                              <-> HRRRT_L_L_Li01                  ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!866) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HRRTT_L_L_Li01                              <-> HRRTR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!867) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRTT_L_L_Li02                              <-> HRRRT_L_L_Li02                  ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!868) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_L_Li02                              <-> HRRTR_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!869) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRTT_L_L_Li03                              <-> HRRRT_L_L_Li03                  ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!870) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_L_Li03                              <-> HRRTR_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!871) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTRR_L_L_Li00                              <-> HRRRR_L_L_Li00                  ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!920) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_L_Li01                              <-> HRRRR_L_L_Li01                  ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!921) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_L_Li02                              <-> HRRRR_L_L_Li02                  ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!922) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRR_L_L_Li03                              <-> HRRRR_L_L_Li03                  ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!923) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_Li00                              <-> HRRRT_L_L_Li00                  ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!872) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_Li00                              <-> HRTRR_L_L_Li00                  ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!873) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTRT_L_L_Li01                              <-> HRRRT_L_L_Li01                  ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!874) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_Li01                              <-> HRTRR_L_L_Li01                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!875) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTRT_L_L_Li02                              <-> HRRRT_L_L_Li02                  ; fu04=k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR); bu04=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!876) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * Gamma_S12 ^ Phi_TR)) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_Li02                              <-> HRTRR_L_L_Li02                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!877) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTRT_L_L_Li03                              <-> HRRRT_L_L_Li03                  ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!878) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_Li03                              <-> HRTRR_L_L_Li03                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!879) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_L_Li00                              <-> HRRTR_L_L_Li00                  ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!880) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_L_Li00                              <-> HRTRR_L_L_Li00                  ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!881) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTR_L_L_Li01                              <-> HRRTR_L_L_Li01                  ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!882) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_L_Li01                              <-> HRTRR_L_L_Li01                  ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!883) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HRTTR_L_L_Li02                              <-> HRRTR_L_L_Li02                  ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!884) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTR_L_L_Li02                              <-> HRTRR_L_L_Li02                  ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!885) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTR_L_L_Li03                              <-> HRRTR_L_L_Li03                  ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!886) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_L_Li03                              <-> HRTRR_L_L_Li03                  ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!887) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTT_L_L_Li00                              <-> HRRTT_L_L_Li00                  ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!816) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_L_Li00                              <-> HRTRT_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!817) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_L_Li00                              <-> HRTTR_L_L_Li00                  ; fu03=k_TR; bu03=k_RT           # (R!818) Keq = k_TR / k_RT
HRTTT_L_L_Li01                              <-> HRRTT_L_L_Li01                  ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!819) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_L_Li01                              <-> HRTRT_L_L_Li01                  ; fu03=k_TR; bu03=k_RT           # (R!820) Keq = k_TR / k_RT
HRTTT_L_L_Li01                              <-> HRTTR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!821) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_L_Li02                              <-> HRRTT_L_L_Li02                  ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!822) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HRTTT_L_L_Li02                              <-> HRTRT_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!823) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_L_Li02                              <-> HRTTR_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!824) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_L_Li03                              <-> HRRTT_L_L_Li03                  ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!825) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_L_Li03                              <-> HRTRT_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!826) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_L_Li03                              <-> HRTTR_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!827) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRRR_L_L_Li00                              <-> HRRRR_L_L_Li00                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!924) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_L_L_Li01                              <-> HRRRR_L_L_Li01                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!925) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_L_L_Li02                              <-> HRRRR_L_L_Li02                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!926) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRR_L_L_Li03                              <-> HRRRR_L_L_Li03                  ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!927) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_L_L_Li00                              <-> HRRRT_L_L_Li00                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!888) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_L_Li00                              <-> HTRRR_L_L_Li00                  ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!889) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTRRT_L_L_Li01                              <-> HRRRT_L_L_Li01                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!890) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_L_Li01                              <-> HTRRR_L_L_Li01                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!891) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRRT_L_L_Li02                              <-> HRRRT_L_L_Li02                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!892) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_L_Li02                              <-> HTRRR_L_L_Li02                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!893) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRRT_L_L_Li03                              <-> HRRRT_L_L_Li03                  ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!894) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRRT_L_L_Li03                              <-> HTRRR_L_L_Li03                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!895) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTR_L_L_Li00                              <-> HRRTR_L_L_Li00                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!896) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_L_Li00                              <-> HTRRR_L_L_Li00                  ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!897) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_L_Li01                              <-> HRRTR_L_L_Li01                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!898) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_L_Li01                              <-> HTRRR_L_L_Li01                  ; fu01=k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR); bu01=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!899) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * Gamma_S23 ^ Phi_TR)) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_L_Li02                              <-> HRRTR_L_L_Li02                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!900) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_L_Li02                              <-> HTRRR_L_L_Li02                  ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!901) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTR_L_L_Li03                              <-> HRRTR_L_L_Li03                  ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!902) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTR_L_L_Li03                              <-> HTRRR_L_L_Li03                  ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!903) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTT_L_L_Li00                              <-> HRRTT_L_L_Li00                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!828) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_L_Li00                              <-> HTRRT_L_L_Li00                  ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!829) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_L_Li00                              <-> HTRTR_L_L_Li00                  ; fu03=k_TR; bu03=k_RT           # (R!830) Keq = k_TR / k_RT
HTRTT_L_L_Li01                              <-> HRRTT_L_L_Li01                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!831) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_L_Li01                              <-> HTRRT_L_L_Li01                  ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!832) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTRTT_L_L_Li01                              <-> HTRTR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!833) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRTT_L_L_Li02                              <-> HRRTT_L_L_Li02                  ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!834) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_L_Li02                              <-> HTRRT_L_L_Li02                  ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!835) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_L_Li02                              <-> HTRTR_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!836) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRTT_L_L_Li03                              <-> HRRTT_L_L_Li03                  ; fu05=k_TR * Gamma_S01 ^ Phi_TR; bu05=k_RT * (Gamma_S01 ^ (Phi_TR - 1)) # (R!837) Keq = (k_TR * Gamma_S01 ^ Phi_TR) / (k_RT * (Gamma_S01 ^ (Phi_TR - 1)))
HTRTT_L_L_Li03                              <-> HTRRT_L_L_Li03                  ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!838) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_L_Li03                              <-> HTRTR_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!839) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_L_Li00                              <-> HRTRR_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!904) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_L_Li00                              <-> HTRRR_L_L_Li00                  ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!905) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRR_L_L_Li01                              <-> HRTRR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!906) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_L_Li01                              <-> HTRRR_L_L_Li01                  ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!907) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRR_L_L_Li02                              <-> HRTRR_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!908) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_L_Li02                              <-> HTRRR_L_L_Li02                  ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!909) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRR_L_L_Li03                              <-> HRTRR_L_L_Li03                  ; fu03=k_TR; bu03=k_RT           # (R!910) Keq = k_TR / k_RT
HTTRR_L_L_Li03                              <-> HTRRR_L_L_Li03                  ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!911) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_L_Li00                              <-> HRTRT_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!840) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_L_Li00                              <-> HTRRT_L_L_Li00                  ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!841) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_L_Li00                              <-> HTTRR_L_L_Li00                  ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!842) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTRT_L_L_Li01                              <-> HRTRT_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!843) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_L_Li01                              <-> HTRRT_L_L_Li01                  ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!844) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_L_Li01                              <-> HTTRR_L_L_Li01                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!845) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTRT_L_L_Li02                              <-> HRTRT_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!846) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_L_Li02                              <-> HTRRT_L_L_Li02                  ; fu02=k_TR * Gamma_S12 ^ Phi_TR; bu02=k_RT * (Gamma_S12 ^ (Phi_TR - 1)) # (R!847) Keq = (k_TR * Gamma_S12 ^ Phi_TR) / (k_RT * (Gamma_S12 ^ (Phi_TR - 1)))
HTTRT_L_L_Li02                              <-> HTTRR_L_L_Li02                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!848) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTRT_L_L_Li03                              <-> HRTRT_L_L_Li03                  ; fu03=k_TR; bu03=k_RT           # (R!849) Keq = k_TR / k_RT
HTTRT_L_L_Li03                              <-> HTRRT_L_L_Li03                  ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!850) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_L_Li03                              <-> HTTRR_L_L_Li03                  ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!851) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTTR_L_L_Li00                              <-> HRTTR_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!852) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_Li00                              <-> HTRTR_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!853) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_Li00                              <-> HTTRR_L_L_Li00                  ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!854) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTR_L_L_Li01                              <-> HRTTR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!855) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_Li01                              <-> HTRTR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!856) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_Li01                              <-> HTTRR_L_L_Li01                  ; fu00=k_TR * Gamma_S23 ^ Phi_TR; bu00=k_RT * (Gamma_S23 ^ (Phi_TR - 1)) # (R!857) Keq = (k_TR * Gamma_S23 ^ Phi_TR) / (k_RT * (Gamma_S23 ^ (Phi_TR - 1)))
HTTTR_L_L_Li02                              <-> HRTTR_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!858) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_Li02                              <-> HTRTR_L_L_Li02                  ; fu03=k_TR; bu03=k_RT           # (R!859) Keq = k_TR / k_RT
HTTTR_L_L_Li02                              <-> HTTRR_L_L_Li02                  ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!860) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTR_L_L_Li03                              <-> HRTTR_L_L_Li03                  ; fu03=k_TR; bu03=k_RT           # (R!861) Keq = k_TR / k_RT
HTTTR_L_L_Li03                              <-> HTRTR_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!862) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_Li03                              <-> HTTRR_L_L_Li03                  ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!863) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTT_L_L_Li00                              <-> HRTTT_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!800) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li00                              <-> HTRTT_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!801) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li00                              <-> HTTRT_L_L_Li00                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!802) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li00                              <-> HTTTR_L_L_Li00                  ; fu03=k_TR; bu03=k_RT           # (R!803) Keq = k_TR / k_RT
HTTTT_L_L_Li01                              <-> HRTTT_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!804) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li01                              <-> HTRTT_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!805) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li01                              <-> HTTRT_L_L_Li01                  ; fu03=k_TR; bu03=k_RT           # (R!806) Keq = k_TR / k_RT
HTTTT_L_L_Li01                              <-> HTTTR_L_L_Li01                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!807) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li02                              <-> HRTTT_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!808) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li02                              <-> HTRTT_L_L_Li02                  ; fu03=k_TR; bu03=k_RT           # (R!809) Keq = k_TR / k_RT
HTTTT_L_L_Li02                              <-> HTTRT_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!810) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li02                              <-> HTTTR_L_L_Li02                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!811) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li03                              <-> HRTTT_L_L_Li03                  ; fu03=k_TR; bu03=k_RT           # (R!812) Keq = k_TR / k_RT
HTTTT_L_L_Li03                              <-> HTRTT_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!813) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li03                              <-> HTTRT_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!814) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_Li03                              <-> HTTTR_L_L_Li03                  ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!815) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRRRT_L_L_L_Li00                            <-> HRRRR_L_L_L_Li00                ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1020) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTR_L_L_L_Li00                            <-> HRRRR_L_L_L_Li00                ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!1021) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HRRTT_L_L_L_Li00                            <-> HRRRT_L_L_L_Li00                ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1008) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRRTT_L_L_L_Li00                            <-> HRRTR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!1009) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTRR_L_L_L_Li00                            <-> HRRRR_L_L_L_Li00                ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!1022) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_L_Li00                            <-> HRRRT_L_L_L_Li00                ; fu10=k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR); bu10=k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!1010) Keq = (k_TR * ((Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S12 ^ Phi_TR)) / (k_RT * (((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S12 ^ (Phi_TR - 1))))
HRTRT_L_L_L_Li00                            <-> HRTRR_L_L_L_Li00                ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1011) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_L_L_Li00                            <-> HRRTR_L_L_L_Li00                ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1012) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTR_L_L_L_Li00                            <-> HRTRR_L_L_L_Li00                ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!1013) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HRTTT_L_L_L_Li00                            <-> HRRTT_L_L_L_Li00                ; fu11=k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu11=k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!996) Keq = (k_TR * (Gamma_S01 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S01 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HRTTT_L_L_L_Li00                            <-> HRTRT_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!997) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HRTTT_L_L_L_Li00                            <-> HRTTR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!998) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTRRR_L_L_L_Li00                            <-> HRRRR_L_L_L_Li00                ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!1023) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_L_L_Li00                            <-> HRRRT_L_L_L_Li00                ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!1014) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRRT_L_L_L_Li00                            <-> HTRRR_L_L_L_Li00                ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1015) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTR_L_L_L_Li00                            <-> HRRTR_L_L_L_Li00                ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!1016) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTR_L_L_L_Li00                            <-> HTRRR_L_L_L_Li00                ; fu07=k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR); bu07=k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!1017) Keq = (k_TR * ((Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) * Gamma_S23 ^ Phi_TR)) / (k_RT * (((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) * (Gamma_S23 ^ (Phi_TR - 1))))
HTRTT_L_L_L_Li00                            <-> HRRTT_L_L_L_Li00                ; fu13=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR); bu13=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))) # (R!999) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S01 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S01 ^ (Phi_TR - 1))))
HTRTT_L_L_L_Li00                            <-> HTRRT_L_L_L_Li00                ; fu08=k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu08=k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1000) Keq = (k_TR * (Gamma_S12 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S12 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTRTT_L_L_L_Li00                            <-> HTRTR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!1001) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_L_L_Li00                            <-> HRTRR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!1018) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRR_L_L_L_Li00                            <-> HTRRR_L_L_L_Li00                ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!1019) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_L_L_Li00                            <-> HRTRT_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!1002) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTRT_L_L_L_Li00                            <-> HTRRT_L_L_L_Li00                ; fu14=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR); bu14=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))) # (R!1003) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S12 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S12 ^ (Phi_TR - 1))))
HTTRT_L_L_L_Li00                            <-> HTTRR_L_L_L_Li00                ; fu06=k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)); bu06=k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))) # (R!1004) Keq = (k_TR * (Gamma_S23 ^ Phi_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR))) / (k_RT * ((Gamma_S23 ^ (Phi_TR - 1)) * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1))))
HTTTR_L_L_L_Li00                            <-> HRTTR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!1005) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_L_Li00                            <-> HTRTR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!1006) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTR_L_L_L_Li00                            <-> HTTRR_L_L_L_Li00                ; fu12=k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR); bu12=k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))) # (R!1007) Keq = (k_TR * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR) * Gamma_S23 ^ Phi_TR)) / (k_RT * ((((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) * (Gamma_S23 ^ (Phi_TR - 1))))
HTTTT_L_L_L_Li00                            <-> HRTTT_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!992) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_L_Li00                            <-> HTRTT_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!993) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_L_Li00                            <-> HTTRT_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!994) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))
HTTTT_L_L_L_Li00                            <-> HTTTR_L_L_L_Li00                ; fu09=k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR); bu09=k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)) # (R!995) Keq = (k_TR * (((kf_R / kb_R) / (kf_T / kb_T)) ^ Phi_TR)) / (k_RT * (((kf_R / kb_R) / (kf_T / kb_T)) ^ (Phi_TR - 1)))


# INITIAL CONCENTRATIONS (compiled from MODEL section)
# ----------------------------------------------------
INIT:
HTTTT = 10


# STIMULI (from Stimulus objects)
# ------------------------------------
EQN:
null -> L; k_source_Stm00_L="(0.01*1000 +(event_flags(1) && ~event_flags(80))*0.00258925411794167*1000+(event_flags(2) && ~event_flags(79))*0.00325967780666946*1000+(event_flags(3) && ~event_flags(78))*0.00410369122507766*1000+(event_flags(4) && ~event_flags(77))*0.00516624116540701*1000+(event_flags(5) && ~event_flags(76))*0.006503912286588*1000+(event_flags(6) && ~event_flags(75))*0.00818794045366594*1000+(event_flags(7) && ~event_flags(74))*0.0103080063073775*1000+(event_flags(8) && ~event_flags(73))*0.0129770110852921*1000+(event_flags(9) && ~event_flags(72))*0.0163370890244088*1000+(event_flags(10) && ~event_flags(71))*0.0205671765275719*1000+(event_flags(11) && ~event_flags(70))*0.0258925411794168*1000+(event_flags(12) && ~event_flags(69))*0.0325967780666946*1000+(event_flags(13) && ~event_flags(68))*0.0410369122507767*1000+(event_flags(14) && ~event_flags(67))*0.0516624116540701*1000+(event_flags(15) && ~event_flags(66))*0.06503912286588*1000+(event_flags(16) && ~event_flags(65))*0.0818794045366594*1000+(event_flags(17) && ~event_flags(64))*0.103080063073775*1000+(event_flags(18) && ~event_flags(63))*0.129770110852921*1000+(event_flags(19) && ~event_flags(62))*0.163370890244088*1000+(event_flags(20) && ~event_flags(61))*0.205671765275719*1000+(event_flags(21) && ~event_flags(60))*0.258925411794168*1000+(event_flags(22) && ~event_flags(59))*0.325967780666947*1000+(event_flags(23) && ~event_flags(58))*0.410369122507767*1000+(event_flags(24) && ~event_flags(57))*0.516624116540702*1000+(event_flags(25) && ~event_flags(56))*0.6503912286588*1000+(event_flags(26) && ~event_flags(55))*0.818794045366595*1000+(event_flags(27) && ~event_flags(54))*1.03080063073775*1000+(event_flags(28) && ~event_flags(53))*1.29770110852921*1000+(event_flags(29) && ~event_flags(52))*1.63370890244089*1000+(event_flags(30) && ~event_flags(51))*2.05671765275719*1000+(event_flags(31) && ~event_flags(50))*2.58925411794168*1000+(event_flags(32) && ~event_flags(49))*3.25967780666947*1000+(event_flags(33) && ~event_flags(48))*4.10369122507767*1000+(event_flags(34) && ~event_flags(47))*5.16624116540702*1000+(event_flags(35) && ~event_flags(46))*6.50391228658801*1000+(event_flags(36) && ~event_flags(45))*8.18794045366595*1000+(event_flags(37) && ~event_flags(44))*10.3080063073775*1000+(event_flags(38) && ~event_flags(43))*12.9770110852921*1000+(event_flags(39) && ~event_flags(42))*16.3370890244089*1000+(event_flags(40) && ~event_flags(41))*20.5671765275719*1000)"
L -> null; k_sink_Stm00_L=1000

CONFIG:
ode_event_times = ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 
t_final = 10000


# COMPILED PROBES (from Probe objects)
# ------------------------------------
PROBE:
probe p_R0 = "HTTTT + HTTTT_Li00 + HTTTT_Li01 + HTTTT_Li02 + HTTTT_Li03 + HTTTT_L_Li00 + HTTTT_L_Li01 + HTTTT_L_Li02 + HTTTT_L_Li03 + HTTTT_L_Li04 + HTTTT_L_Li05 + HTTTT_L_L_Li00 + HTTTT_L_L_Li01 + HTTTT_L_L_Li02 + HTTTT_L_L_Li03 + HTTTT_L_L_L_Li00"
probe p_R1 = "HRTTT + HTRTT + HTTRT + HTTTR + HRTTT_Li00 + HRTTT_Li01 + HRTTT_Li02 + HRTTT_Li03 + HTRTT_Li00 + HTRTT_Li01 + HTRTT_Li02 + HTRTT_Li03 + HTTRT_Li00 + HTTRT_Li01 + HTTRT_Li02 + HTTRT_Li03 + HTTTR_Li00 + HTTTR_Li01 + HTTTR_Li02 + HTTTR_Li03 + HRTTT_L_Li00 + HRTTT_L_Li01 + HRTTT_L_Li02 + HRTTT_L_Li03 + HRTTT_L_Li04 + HRTTT_L_Li05 + HTRTT_L_Li00 + HTRTT_L_Li01 + HTRTT_L_Li02 + HTRTT_L_Li03 + HTRTT_L_Li04 + HTRTT_L_Li05 + HTTRT_L_Li00 + HTTRT_L_Li01 + HTTRT_L_Li02 + HTTRT_L_Li03 + HTTRT_L_Li04 + HTTRT_L_Li05 + HTTTR_L_Li00 + HTTTR_L_Li01 + HTTTR_L_Li02 + HTTTR_L_Li03 + HTTTR_L_Li04 + HTTTR_L_Li05 + HRTTT_L_L_Li00 + HRTTT_L_L_Li01 + HRTTT_L_L_Li02 + HRTTT_L_L_Li03 + HTRTT_L_L_Li00 + HTRTT_L_L_Li01 + HTRTT_L_L_Li02 + HTRTT_L_L_Li03 + HTTRT_L_L_Li00 + HTTRT_L_L_Li01 + HTTRT_L_L_Li02 + HTTRT_L_L_Li03 + HTTTR_L_L_Li00 + HTTTR_L_L_Li01 + HTTTR_L_L_Li02 + HTTTR_L_L_Li03 + HRTTT_L_L_L_Li00 + HTRTT_L_L_L_Li00 + HTTRT_L_L_L_Li00 + HTTTR_L_L_L_Li00"
probe p_R2 = "HRRTT + HRTRT + HRTTR + HTRRT + HTRTR + HTTRR + HRRTT_Li00 + HRRTT_Li01 + HRRTT_Li02 + HRRTT_Li03 + HRTRT_Li00 + HRTRT_Li01 + HRTRT_Li02 + HRTRT_Li03 + HRTTR_Li00 + HRTTR_Li01 + HRTTR_Li02 + HRTTR_Li03 + HTRRT_Li00 + HTRRT_Li01 + HTRRT_Li02 + HTRRT_Li03 + HTRTR_Li00 + HTRTR_Li01 + HTRTR_Li02 + HTRTR_Li03 + HTTRR_Li00 + HTTRR_Li01 + HTTRR_Li02 + HTTRR_Li03 + HRRTT_L_Li00 + HRRTT_L_Li01 + HRRTT_L_Li02 + HRRTT_L_Li03 + HRRTT_L_Li04 + HRRTT_L_Li05 + HRTRT_L_Li00 + HRTRT_L_Li01 + HRTRT_L_Li02 + HRTRT_L_Li03 + HRTRT_L_Li04 + HRTRT_L_Li05 + HRTTR_L_Li00 + HRTTR_L_Li01 + HRTTR_L_Li02 + HRTTR_L_Li03 + HRTTR_L_Li04 + HRTTR_L_Li05 + HTRRT_L_Li00 + HTRRT_L_Li01 + HTRRT_L_Li02 + HTRRT_L_Li03 + HTRRT_L_Li04 + HTRRT_L_Li05 + HTRTR_L_Li00 + HTRTR_L_Li01 + HTRTR_L_Li02 + HTRTR_L_Li03 + HTRTR_L_Li04 + HTRTR_L_Li05 + HTTRR_L_Li00 + HTTRR_L_Li01 + HTTRR_L_Li02 + HTTRR_L_Li03 + HTTRR_L_Li04 + HTTRR_L_Li05 + HRRTT_L_L_Li00 + HRRTT_L_L_Li01 + HRRTT_L_L_Li02 + HRRTT_L_L_Li03 + HRTRT_L_L_Li00 + HRTRT_L_L_Li01 + HRTRT_L_L_Li02 + HRTRT_L_L_Li03 + HRTTR_L_L_Li00 + HRTTR_L_L_Li01 + HRTTR_L_L_Li02 + HRTTR_L_L_Li03 + HTRRT_L_L_Li00 + HTRRT_L_L_Li01 + HTRRT_L_L_Li02 + HTRRT_L_L_Li03 + HTRTR_L_L_Li00 + HTRTR_L_L_Li01 + HTRTR_L_L_Li02 + HTRTR_L_L_Li03 + HTTRR_L_L_Li00 + HTTRR_L_L_Li01 + HTTRR_L_L_Li02 + HTTRR_L_L_Li03 + HRRTT_L_L_L_Li00 + HRTRT_L_L_L_Li00 + HRTTR_L_L_L_Li00 + HTRRT_L_L_L_Li00 + HTRTR_L_L_L_Li00 + HTTRR_L_L_L_Li00"
probe p_R3 = "HRRRT + HRRTR + HRTRR + HTRRR + HRRRT_Li00 + HRRRT_Li01 + HRRRT_Li02 + HRRRT_Li03 + HRRTR_Li00 + HRRTR_Li01 + HRRTR_Li02 + HRRTR_Li03 + HRTRR_Li00 + HRTRR_Li01 + HRTRR_Li02 + HRTRR_Li03 + HTRRR_Li00 + HTRRR_Li01 + HTRRR_Li02 + HTRRR_Li03 + HRRRT_L_Li00 + HRRRT_L_Li01 + HRRRT_L_Li02 + HRRRT_L_Li03 + HRRRT_L_Li04 + HRRRT_L_Li05 + HRRTR_L_Li00 + HRRTR_L_Li01 + HRRTR_L_Li02 + HRRTR_L_Li03 + HRRTR_L_Li04 + HRRTR_L_Li05 + HRTRR_L_Li00 + HRTRR_L_Li01 + HRTRR_L_Li02 + HRTRR_L_Li03 + HRTRR_L_Li04 + HRTRR_L_Li05 + HTRRR_L_Li00 + HTRRR_L_Li01 + HTRRR_L_Li02 + HTRRR_L_Li03 + HTRRR_L_Li04 + HTRRR_L_Li05 + HRRRT_L_L_Li00 + HRRRT_L_L_Li01 + HRRRT_L_L_Li02 + HRRRT_L_L_Li03 + HRRTR_L_L_Li00 + HRRTR_L_L_Li01 + HRRTR_L_L_Li02 + HRRTR_L_L_Li03 + HRTRR_L_L_Li00 + HRTRR_L_L_Li01 + HRTRR_L_L_Li02 + HRTRR_L_L_Li03 + HTRRR_L_L_Li00 + HTRRR_L_L_Li01 + HTRRR_L_L_Li02 + HTRRR_L_L_Li03 + HRRRT_L_L_L_Li00 + HRRTR_L_L_L_Li00 + HRTRR_L_L_L_Li00 + HTRRR_L_L_L_Li00"
probe p_R4 = "HRRRR + HRRRR_Li00 + HRRRR_Li01 + HRRRR_Li02 + HRRRR_Li03 + HRRRR_L_Li00 + HRRRR_L_Li01 + HRRRR_L_Li02 + HRRRR_L_Li03 + HRRRR_L_Li04 + HRRRR_L_Li05 + HRRRR_L_L_Li00 + HRRRR_L_L_Li01 + HRRRR_L_L_Li02 + HRRRR_L_L_Li03 + HRRRR_L_L_L_Li00"
probe L
probe p_L0 = "HTTTT + HRTTT + HTRTT + HTTRT + HTTTR + HRRTT + HRTRT + HRTTR + HTRRT + HTRTR + HTTRR + HRRRT + HRRTR + HRTRR + HTRRR + HRRRR"
probe p_L1 = "HTTTT_Li00 + HTTTT_Li01 + HTTTT_Li02 + HTTTT_Li03 + HRTTT_Li00 + HRTTT_Li01 + HRTTT_Li02 + HRTTT_Li03 + HTRTT_Li00 + HTRTT_Li01 + HTRTT_Li02 + HTRTT_Li03 + HTTRT_Li00 + HTTRT_Li01 + HTTRT_Li02 + HTTRT_Li03 + HTTTR_Li00 + HTTTR_Li01 + HTTTR_Li02 + HTTTR_Li03 + HRRTT_Li00 + HRRTT_Li01 + HRRTT_Li02 + HRRTT_Li03 + HRTRT_Li00 + HRTRT_Li01 + HRTRT_Li02 + HRTRT_Li03 + HRTTR_Li00 + HRTTR_Li01 + HRTTR_Li02 + HRTTR_Li03 + HTRRT_Li00 + HTRRT_Li01 + HTRRT_Li02 + HTRRT_Li03 + HTRTR_Li00 + HTRTR_Li01 + HTRTR_Li02 + HTRTR_Li03 + HTTRR_Li00 + HTTRR_Li01 + HTTRR_Li02 + HTTRR_Li03 + HRRRT_Li00 + HRRRT_Li01 + HRRRT_Li02 + HRRRT_Li03 + HRRTR_Li00 + HRRTR_Li01 + HRRTR_Li02 + HRRTR_Li03 + HRTRR_Li00 + HRTRR_Li01 + HRTRR_Li02 + HRTRR_Li03 + HTRRR_Li00 + HTRRR_Li01 + HTRRR_Li02 + HTRRR_Li03 + HRRRR_Li00 + HRRRR_Li01 + HRRRR_Li02 + HRRRR_Li03"
probe p_L2 = "HTTTT_L_Li00 + HTTTT_L_Li01 + HTTTT_L_Li02 + HTTTT_L_Li03 + HTTTT_L_Li04 + HTTTT_L_Li05 + HRTTT_L_Li00 + HRTTT_L_Li01 + HRTTT_L_Li02 + HRTTT_L_Li03 + HRTTT_L_Li04 + HRTTT_L_Li05 + HTRTT_L_Li00 + HTRTT_L_Li01 + HTRTT_L_Li02 + HTRTT_L_Li03 + HTRTT_L_Li04 + HTRTT_L_Li05 + HTTRT_L_Li00 + HTTRT_L_Li01 + HTTRT_L_Li02 + HTTRT_L_Li03 + HTTRT_L_Li04 + HTTRT_L_Li05 + HTTTR_L_Li00 + HTTTR_L_Li01 + HTTTR_L_Li02 + HTTTR_L_Li03 + HTTTR_L_Li04 + HTTTR_L_Li05 + HRRTT_L_Li00 + HRRTT_L_Li01 + HRRTT_L_Li02 + HRRTT_L_Li03 + HRRTT_L_Li04 + HRRTT_L_Li05 + HRTRT_L_Li00 + HRTRT_L_Li01 + HRTRT_L_Li02 + HRTRT_L_Li03 + HRTRT_L_Li04 + HRTRT_L_Li05 + HRTTR_L_Li00 + HRTTR_L_Li01 + HRTTR_L_Li02 + HRTTR_L_Li03 + HRTTR_L_Li04 + HRTTR_L_Li05 + HTRRT_L_Li00 + HTRRT_L_Li01 + HTRRT_L_Li02 + HTRRT_L_Li03 + HTRRT_L_Li04 + HTRRT_L_Li05 + HTRTR_L_Li00 + HTRTR_L_Li01 + HTRTR_L_Li02 + HTRTR_L_Li03 + HTRTR_L_Li04 + HTRTR_L_Li05 + HTTRR_L_Li00 + HTTRR_L_Li01 + HTTRR_L_Li02 + HTTRR_L_Li03 + HTTRR_L_Li04 + HTTRR_L_Li05 + HRRRT_L_Li00 + HRRRT_L_Li01 + HRRRT_L_Li02 + HRRRT_L_Li03 + HRRRT_L_Li04 + HRRRT_L_Li05 + HRRTR_L_Li00 + HRRTR_L_Li01 + HRRTR_L_Li02 + HRRTR_L_Li03 + HRRTR_L_Li04 + HRRTR_L_Li05 + HRTRR_L_Li00 + HRTRR_L_Li01 + HRTRR_L_Li02 + HRTRR_L_Li03 + HRTRR_L_Li04 + HRTRR_L_Li05 + HTRRR_L_Li00 + HTRRR_L_Li01 + HTRRR_L_Li02 + HTRRR_L_Li03 + HTRRR_L_Li04 + HTRRR_L_Li05 + HRRRR_L_Li00 + HRRRR_L_Li01 + HRRRR_L_Li02 + HRRRR_L_Li03 + HRRRR_L_Li04 + HRRRR_L_Li05"
probe p_L3 = "HTTTT_L_L_Li00 + HTTTT_L_L_Li01 + HTTTT_L_L_Li02 + HTTTT_L_L_Li03 + HRTTT_L_L_Li00 + HRTTT_L_L_Li01 + HRTTT_L_L_Li02 + HRTTT_L_L_Li03 + HTRTT_L_L_Li00 + HTRTT_L_L_Li01 + HTRTT_L_L_Li02 + HTRTT_L_L_Li03 + HTTRT_L_L_Li00 + HTTRT_L_L_Li01 + HTTRT_L_L_Li02 + HTTRT_L_L_Li03 + HTTTR_L_L_Li00 + HTTTR_L_L_Li01 + HTTTR_L_L_Li02 + HTTTR_L_L_Li03 + HRRTT_L_L_Li00 + HRRTT_L_L_Li01 + HRRTT_L_L_Li02 + HRRTT_L_L_Li03 + HRTRT_L_L_Li00 + HRTRT_L_L_Li01 + HRTRT_L_L_Li02 + HRTRT_L_L_Li03 + HRTTR_L_L_Li00 + HRTTR_L_L_Li01 + HRTTR_L_L_Li02 + HRTTR_L_L_Li03 + HTRRT_L_L_Li00 + HTRRT_L_L_Li01 + HTRRT_L_L_Li02 + HTRRT_L_L_Li03 + HTRTR_L_L_Li00 + HTRTR_L_L_Li01 + HTRTR_L_L_Li02 + HTRTR_L_L_Li03 + HTTRR_L_L_Li00 + HTTRR_L_L_Li01 + HTTRR_L_L_Li02 + HTTRR_L_L_Li03 + HRRRT_L_L_Li00 + HRRRT_L_L_Li01 + HRRRT_L_L_Li02 + HRRRT_L_L_Li03 + HRRTR_L_L_Li00 + HRRTR_L_L_Li01 + HRRTR_L_L_Li02 + HRRTR_L_L_Li03 + HRTRR_L_L_Li00 + HRTRR_L_L_Li01 + HRTRR_L_L_Li02 + HRTRR_L_L_Li03 + HTRRR_L_L_Li00 + HTRRR_L_L_Li01 + HTRRR_L_L_Li02 + HTRRR_L_L_Li03 + HRRRR_L_L_Li00 + HRRRR_L_L_Li01 + HRRRR_L_L_Li02 + HRRRR_L_L_Li03"
probe p_L4 = "HTTTT_L_L_L_Li00 + HRTTT_L_L_L_Li00 + HTRTT_L_L_L_Li00 + HTTRT_L_L_L_Li00 + HTTTR_L_L_L_Li00 + HRRTT_L_L_L_Li00 + HRTRT_L_L_L_Li00 + HRTTR_L_L_L_Li00 + HTRRT_L_L_L_Li00 + HTRTR_L_L_L_Li00 + HTTRR_L_L_L_Li00 + HRRRT_L_L_L_Li00 + HRRTR_L_L_L_Li00 + HRTRR_L_L_L_Li00 + HTRRR_L_L_L_Li00 + HRRRR_L_L_L_Li00"


# CONFIG (from CONFIG section)
# ----------------------------
CONFIG:
t_final = 10000
t_vector = [0:1:tf]
matlab_ode_solver = ode15s
matlab_odeset_options = odeset('InitialStep', 1e-15, 'AbsTol', 1e-48, 'RelTol', 1e-5)
SS_timescale = 100
SS_RelTol = 1e-3
SS_AbsTol = 1e-6
